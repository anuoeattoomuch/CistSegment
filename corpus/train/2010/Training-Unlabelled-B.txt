三大主流触摸屏技术解析
就电子产品，特别是消费类产品而言，如何将用户复杂的控制动作转变为直观、便捷且可生产的体验，是用户界面设计面临的终极挑战。
用户界面设计一方面要考虑到用户视觉、听觉、味觉、嗅觉和触觉等五种感官的需求，另一方面还要考虑到用户需求对器件或系统的影响。
目前市场上推出的大部分产品虽然有效，但主要都是将用户的视觉和触觉分开来处理。
从计算机键盘、手机键盘、MP3播放器、家用电器甚至电视遥控器等上面的简单按钮或按键，到音量调节滑条、滚轮和跟踪板[LU1]等上面更高级的单击和滚动特性，输出位置(也就是用户的输入或操控动作的结果[LU2]）与用户的输入位置是截然不同的。
要是能让输入和输出,即视觉和触觉完全达到一致，那该有多好啊!
让视觉和触觉完全达到一致说起来简单，但做起来则不啻为一场意义深远的技术突破，其将彻底改变用户与电子产品互动的方式，因此有人将此称为用户界面的革命。
触摸屏的透明特性允许用户直接“触摸”显示屏上的不同内容，人们对这样的用户界面设计发出感叹。
因为用户再也不用去找电子设备周边的这个或那个按钮，如计算机鼠标或键盘甚至手机上的拨号按键，而是直接与固化在设备“大脑”(即其操作系统）中的应用进行互动。
这是一场革命性的变化，这种操控方式可让用户直接掌控强大的操作系统和应用程序，一切尽在用户的指尖。
当然，我们能在计算机屏幕上使用鼠标和跟踪[LU3]板访问应用程序，不过这种操控不是直接触摸显示屏，不能让用户与屏幕及内嵌的应用融为一体。
实际上，我们能通过我们所能想象出来的各种动作或手势来使用触摸屏，让显示屏变得鲜活生动，只要眼睛看到的，都能简单地通过触摸进行互动。
目前触摸屏主要分为三大类：单点触摸；多点触摸识别手指方向；多点触摸识别手指位置。
单点触摸屏
触摸屏的功能发展由简及繁，最初的产品只支持最简单的操[LU4]控，就是一个手指触摸屏幕上的一点来实现操控。
比如我们每天在附件超市的POS终端机，或者在机场的check-in终端上进行的操作。
以前，我们只能通过屏幕周边的机械按钮进行操控，单点触摸屏在此基础上实现了用户界面方面的一大进步。
当然，机械和新型电容式触摸感应按钮在我们的家庭、办公室及其他地方无所不在：手机、固定电话、遥控器、电视、电脑及其各种外设、游戏机、电冰箱、微波炉、烤箱，以及无线电和空调等车内电子控制设备等等。
现在，如下列图1所示的单点触摸屏在显示屏上直接集成了用户控制界面，因此再也不需要传统的机械按钮了。
这种屏幕为用户界面带来两大好处，一是设备设计空间得到优化，特别有利于小型设备，因其能在同一区域内同时“安装”屏幕和按钮；
二是由于按钮能绑定于操作系统中的任意应用，所以设备使用的“按钮”可以达到无限多个。
上述功能主要建立在电阻式触摸屏技术基础之上，在消费电子产品、机场报刊亭、食品杂货店POS终端和车载GPS系统等各种应用中都得到了广泛推广。
点触摸屏——识别手指方向
尽管单点触摸屏和电阻式触摸屏技术很令人吃惊并颇具革命意义，但其还是有两大缺点，一是电阻式技术依赖于触摸屏的物理运动[LU5]，尽管影响[LU6]不大，但经过正常的磨损老化后，性能就会下降；
二是这种技术只支持单点触摸，也就是一次只能用一个手指在屏幕的某个区域做单一动作。
为什么用户与设备的互动只能局限于一根手指呢？
苹果公司为用户界面革命做出了不可估量的贡献，其推出的iPhone采用了感应电容式触摸屏。
即使在智能电话等小型化设备中，要想充分发挥应用和操作系统的功能，也需要多个手指才能实现最佳的可用性。
因为有了苹果公司，用户现在已经很难设想过去是怎么在不支持两个手指的手势动作的情况下，完成诸如下列图2所示的照片缩放，以及相册、网页视图的方位改变等相关操作的。
图2：多点手势触摸屏上的图片缩放
其他技术革新者正在多种设备系统上继续沿用这种多点触摸技术，其中包括Google G-1和Blackberry Storm智能电话、MacBook Pro和惠普touchsmart台式机和笔记本电脑、便携式媒体播放器以及其他多种应用等。
现在，用户又有了新的期待，希望进一步改善用户与其电子产品的互动方式，各种电子产品也都纷纷争相实现用户的这种新要求。
多点触摸屏——识别手指位置
与单点触摸屏一样，识别手指方向的多点触摸屏也有一个局限，就是该技术能在屏幕上同时识别的操作点数量有限。
为什么一次只能识别两个操作点呢？
用户的两只手有十个手指，当用户之间彼此互动时，屏幕上会出现更多的手指。
这就是识别手指位置的多点触摸概念的由来，它可以实现两个手指以上的操控。
Cypress将此技术称为“多点触控全区输入”，它进一步提升了触摸屏可靠的可用性，能满足多种特性丰富的应用需求。
可靠性是指我们能以最高粒度准确捕获到屏幕上所有触点的原始数据，尽可能减少屏幕触点定位不准带来的混乱问题的能力。
可用性是指众多功能强大的应用可在不同大小的屏幕上受益于双手或两个手指以上的屏幕操控的能力。
3D互动游戏、键盘输入和地图操作等都是使用这种触摸屏功能的一些主要对象。
从根本上来讲，多点触控全区输入技术为设备和系统OEM厂商提供了唾手可得的所有触摸数据，帮助他们发挥创造性，以开发下一代新型实用的技术。
赛普拉斯半导体公司推出的TrueTouch触摸屏解决方案就是多点触控全区输入的一个应用实例。
TrueTouch采用了赛普拉斯PSoC可编程片上系统架构，该架构集成了带有可编程模拟和数字块的8位微控制器。
可实现无与伦比的灵活性和可配置性。
TrueTouch解决方案的感应式电容触摸屏控制器能扩展支持各种尺寸的屏幕，可灵活支持单点触摸、识别手指方向的多点触摸和识别手指位置的多点触摸技术。
TrueTouch可高度集成外部元件，而且特别适合与各种触摸屏感应器或LCD显示屏协同工作。
灵活的PSoC架构使设计人员能够在产品设计的最后阶段方便地进行修改，而这是其他触摸屏产品无法做到的。
电阻式触摸屏的基本结构和驱动原理
四线电阻式触摸屏
四线电阻式触摸屏的结构如上图，在玻璃或丙烯酸基板上覆盖有两层透平，均匀导电的ITO层，分别做为X电极和Y电极，它们之间由均匀排列的透明格点分开绝缘。
其中下层的ITO与玻璃基板附着，上层的ITO附着在PET薄膜上。
X电极和Y电极的正负端由“导电条”（图中黑色条形部分）分别从两端引出，且X电极和Y电极导电条的位置相互垂直。
引出端X-，X+，Y-，Y+一共四条线，这就是四线电阻式触摸屏名称的由来。
当有物体接触触摸屏表面并施以一定的压力时，上层的ITO导电层发生形变与下层ITO发生接触，该结构可以等效为相应的电路，如下图
计算触点的X,Y坐标分为如下两步：
1.计算Y坐标，在Y+电极施加驱动电压Vdrive，Y-电极接地，X+做为引出端测量得到接触点的电压，由于ITO层均匀导电，触点电压与Vdrive电压之比等于触点Y坐标与屏高度之比。
2.计算X坐标，在X+电极施加驱动电压Vdrive，X-电极接地，Y+做为引出端测量得到接触点的电压，由于ITO层均匀导电，触点电压与Vdrive电压之比等于触点X坐标与屏宽度之比。
测得的电压通常由ADC转化为数字信号，再进行简单处理就可以做为坐标判断触点的实际位置。
四线电阻式触摸屏除了可以得到触点的X/Y坐标，还可以测得触点的压力，这是因为toplayer施压后，上下层ITO发生接触，在触点上实际是有电阻存在的，如下图的Rtouch。
压力越大，接触越充分，电阻越小
五线电阻式触摸屏
针对四线电阻式触摸屏的缺点，五线电阻式触摸屏采用的结构是，将X,Y电极都做在附着在玻璃基板上的ITO层，而上层的ITO只作为活动电极。
底层ITO的X,Y电极从四个角引出UL,UR,LL,LR，加上上层的活动电极，这样一共五条线。
五线电阻式触摸屏的优点是玻璃基板比较牢固不易形变，而且可以使附着在上面的ITO充分氧化玻璃材质不会吸水，并且它与ITO的膨胀系数很接近，产生的形变不会导致ITO损坏。
而上层的ITO只用来作为引出端电极，没有电流流过，因此不必要求均匀导电性，即使因为形变发生破损，也不会使电阻屏产生“漂移”。
五线电阻式触摸屏的电极不能像四线电阻屏一样，由导电条从四边引出，那样会造成短路。
电极被分散为许多电阻图案分布在触摸屏四周，然后从四角引出，这些图案的作用是使触摸屏X,Y方向电压梯度线性，便于坐标的测量。
五线电阻式触摸屏工作时，UL施加驱动电压Vdrive，LR接地，测量触点X,Y坐标分为如下两步：
1计算Y坐标，在UR电极施加驱动电压Vdrive，LL电极接地，活动电极做为引出端测量得到接触点的电压。
2计算X坐标，在LL电极施加驱动电压Vdrive，UR电极接地，活动电极做为引出端测量得到接触点的电压。
六线电阻式触摸屏
在五线电阻式触摸屏的基础上，六线电阻式触摸屏是在玻璃基板的背面增加了一个接地的导电层，用来隔绝来自玻璃基板背面的信号串扰。
七线电阻式触摸屏
同四线电阻式触摸屏一样，五线电阻式触摸屏也没有考虑电极抽头引线和驱动电极的电路的寄生电阻，这部分电阻并不包含在ITO电阻之内，很可能影响计算的正确性，因此七线电阻式触摸屏在五线电阻式触摸屏的基础上，从UL,LR两端各引出一条线用来感应实际触摸屏末端电压，分别记为Vmax,Vmin，工作原理与五线电阻式触摸屏相同。
总线技术学习初探
作者：袁越阳
幸叶电子苏州有限公司
摘要：以形象生动的比喻来描绘了总线技术的基本思想，指出了总线的基本分类和总线传输的基本原理，以及在学习过程中应当掌握的最基本的知识，对初学者有起到抛砖引入的作用。
关键词：总线技术，基础知识，学习探讨
引言
如果一座只能容一个人来往的独木桥，两端的人都想要过桥，为了不拥挤、阻塞，那我们就得采取有效的办法。
比如规定某段时间哪端的人过桥，另一端的人就等着该他过桥的时间段的到来，同时也还可以规定人多时要按先来后到或年龄长幼的次序过桥。
在这不经意间，我们就体会到了现代电子信息数据通过总线按时分系统传输的最原始的思想。
现代网络信息的发展，特别是对于成本和空间而言，总线传输替代点对点传输是目前发展的热点，它的出现将给信息传输上提供了最大的方便和最有效的技术解决方案。
假如一个微处理器与它的部件和外围设备都分别用点对点的线路来连接通讯，则所有连线将会错综复杂，甚至难以实现。
目前与我们生活习习相关的一系列活动都无不牵涉到总线技术的应用，如我们上英特网、给亲戚朋友打电话、用U盘来存储信息等。
虽然流行的总线所采取的形式不同，但他们主要的原则性思想无非就是时分系统、频分系统、相分系统和码分系统等。
常言道“兵来将挡，水来土淹”，面对种类繁多的总线，我们只有从基本原理出发，从骨子里去了解它的实质，而不要被它形式多样的外表所迷惑，才能熟练掌握和灵活运用眼下正在或将要用到的各种总线技术。
1总线的定义及分类
1.1定义
总线，英文叫作“BUS”,即我们中文的“公共车”，这是非常形象的比如，公共车走的路线是一定的，我们任何人都可以坐公共车去该条公共车路线的任意一个站点。
如果把我们人比作是电子信号，这就是为什么英文叫它为“BUS”而不是“CAR”的真正用意。
当然，从专业上来说，总线是一种描述电子信号传输线路的结构形式，是一类信号线的集合，是子系统间传输信息的公共通道[1]。
通过总线能使整个系统内各部件之间的信息进行传输、交换、共享和逻辑控制等功能。
如在计算机系统中，它是CPU、内存、输入、输出设备传递信息的公用通道，主机的各个部件通过主机相连接，外部设备通过相应的接口电路再于总线相连接。
1.2分类
总线分类的方式有很多，如被分为外部和内部总线、系统总线和非系统总线等等，下面是几种最常用的分类方法[2]。
1.2.1按功能分
最常见的是从功能上来对数据总线进行划分，可以分为地址总线（address bus）、数据总线（data bus）和控制总线（control bus）。
在有的系统中，数据总线和地址总线可以在地址锁存器控制下被共享，也即复用。
地址总线是专门用来传送地址的。
在设计过程中，见得最多的应该是从CPU地址总线来选用外部存储器的存储地址。
地址总线的位数往往决定了存储器存储空间的大小
数据总线是用于传送数据信息，它又有单向传输和双向传输数据总线之分，双向传输数据总线通常采用双向三态形式的总线。
数据总线的位数通常与微处理的字长相一致。
例如Intel 8086微处理器字长16位，其数据总线宽度也是16位。
在实际工作中，数据总线上传送的并不一定是完全意义上的数据。
控制总线是用于传送控制信号和时序信号。
如有时微处理器对外部存储器进行操作时要先通过控制总线发出读/写信号、片选信号和读入中断响应信号等。
控制总线一般是双向的，其传送方向由具体控制信号而定，其位数也要根据系统的实际控制需要而定。
1.2.2按传输方式分
按照数据传输的方式划分，总线可以被分为串行总线和并行总线。
从原理来看，并行传输方式其实优于串行传输方式，但其成本上会有所增加。
通俗地讲，并行传输的通路犹如一条多车道公路，而串行传输则是只允许一辆汽车通过单线公路。
目前常见的串行总线有SPI、I2C、USB、IEEE1394、RS232、CAN等；
而并行总线相对来说种类要少，常见的如IEEE1284、ISA、PCI等。
1.2.3按时钟信号方式分
按照时钟信号是否独立，可以分为同步总线和异步总线。
同步总线的时钟信号独立于数据，也就是说要用一根单独的线来作为时钟信号线；
而异步总线的时钟信号是从数据中提取出来的，通常利用数据信号的边沿来作为时钟同步信号。
2总线传输基本原理
依据前面对总线的定义可知总线的基本作用就是用来传输信号，为了各子系统的信息能有效及时的被传送，为了不至于彼此间的信号相互干扰和避免物理空间上过于拥挤，其最好的办法就是采用多路复用技术[3]，也就是说总线传输的基本原理就是多路复用技术。
所谓多路复用就是指多个用户共享公用信道的一种机制，目前最常见的主要有时分多路复用、频分多路复用和码分多路复用等。
2.1时分多路复用（TDMA）
时分复用是将信道按时间加以分割成多个时间段，不同来源的信号会要求在不同的时间段内得到响应，彼此信号的传输时间在时间坐标轴上是不会重叠。
2.2频分多路复用（FDMA）
频分复用就是把信道的可用频带划分成若干互不交叠的频段，每路信号经过频率调制后的频谱占用其中的一个频段，以此来实现多路不同频率的信号在同一信道中传输。
而当接收端接收到信号后将采用适当的带通滤波器和频率解调器等来恢复原来的信号。
2.3码分多路复用（CDMA）
码分多路复用是所被传输的信号都会有各自特定的标识码或地址码，接收端将会根据不同的标识码或地址码来区分公共信道上的传输信息，只有标识码或地址码完全一致的情况下传输信息才会被接收。
3总线的通信协议
对于总线的学习，了解其通讯协议是整个过程中最关键的一步，所有介绍总线技术的资料都会花很大的篇幅来描述其协议，特别是ISO/OSI的那七层定义。
其实要了解一种总线的协议，最主要的就是去了解总线的帧数据每一位所代表的特性和意义，总线各节点间有效数据的收发都是通过各节点对帧数据位或段的判断和确信来得以实现。
图1
如图1所示是常见的I2C总线上传输的一字节数据的数据帧和时钟SCL构成的双线制串行总线，并接在总线上的电路模块即可作为发送器（主机）又可作为接收器（从机）。
帧数据中除了控制码（包括从机标识码和访问地址码）与数据码外还包括起始信号、结束信号和应答信号[4]。
起始信号：SCL为高电平时，SDA由高电平向低电平跳变，开始传送数据。
控制码：用来选泽操作目标与对象，即接通需要控制的电路，确定控制的种类对象。
在读期间，也即SCL时钟线处于时钟脉冲高电平时，SDA上的数据位不会跳变。
数据码：是主机向从机发送的具体的有用的数据（如对比度、亮度等）和信息。
在读期间，SDA上的数据位不会跳变。
应答信号：接收方收到8bit数据后，向发送方发出特定的低电平。
读/写的方向与其它数据位正好相反，也即是由从机写出该低电平，主机来读取该低电平。
结束信号：SCL为高电平时，SDA由低电平向高电平跳变表示数据帧传输结束。
当然不同的总线其数据位或段的定义肯定不同，但依据同样的原理可以更快的去了解它的协议的特性和特点。
虽然其信息帧的大小不一，但具体的某一数据位或数据段都类似于本文所提及的I2C总线，会依据它的协议的要求来定义它所达标的意义和功能。
4主要技术指标
评价总线的主要技术指标是总线的带宽（即传输速率）、数据位的宽度（位宽）、工作频率和传输数据的可靠性、稳定性等。
4.1带宽（传输速率）、位宽和工作频率
总线的带宽指的是单位时间内总线上传送的数据量，即每钞传送MB的最大数据传输率。
总线的位宽指的是总线能同时传送的二进制数据的位数，或数据总线的位数，即32位、64位等总线宽度的概念；
总线的位宽越宽，数据传输速率越大，总线的带宽就越宽。
总线的工作时钟频率以MHz为单位，它与传输的介质、信号的幅度大小和传输距离有关。
在同样硬件条件下，我们采用差分信号传输时的频率常常会比单边信号高得多，这是因为差分信号的的幅度只有单边信号的一半而已。
总线的带宽、位宽和工作频率，这三者密切相关，它们之间的关系：
4.2传输数据的可靠性
可靠性是评定总线最关键的参数，没有可靠性，传输的数据都是错误的信息，便就失去了总线的实际意义。
为了提高总线的可靠性，通常采用的措施有：
采用数据帧发送前发送器对总线进行侦听，只有侦听到总线处于空闲状态下时才可向总线传送数据帧
采用双绞线差分信号来传送数据，以降低单线的电压升降幅度，减小信号的边沿产生的高次谐波。
适当的让数据的边沿具有一定的斜坡。
增加匹配电阻和电容等来减少总线上信号的发射和平衡总线上的分布电容等。
采用合适的网络拓扑结构和屏蔽技术等来减少受其他信号的干扰。
还有就是在软件上通过数字滤波、数据校验纠错等措施来提高数据传输的可靠性。
多媒体处理器动态电源管理技术
作者：Arthur Musah 和 Andy Dykstra，德州仪器(TI)
多媒体处理器通常是便携式电子设备中功耗最高的器件。
降低CPU功耗要求的常见方法是降低时钟频率或工作电压，但是一般而言这样做会使系统性能降低。
另一方面，芯片设计人员还提出了各种片上方法来降低功耗，并且不会对系统产生不利影响。
本文介绍了这些方法的概念，以及我们如何运用它们实现节能的目的，同时还讨论了帮助处理器芯片获益的一些外部电源管理器件和电源IC。
有源电源管理
片上电源管理技术主要适用于两类应用：管理有源系统功耗和管理待机功耗。
有源电源管理分为三个部分：动态电压与频率缩放(DVFS)；
自适应电压缩放(AVS)；
以及动态电源转换(DPS)。
另一方面，静态功耗管理包括在需要进行更多处理以前将空闲系统维持在一种低功耗状态。
这种电源管理使用所谓的静态漏电管理(SLM)，其通常利用从待机到关机的数种低功耗模式。
让我们来看一下有源模式。
利用DVFS，根据应用所要求的不同性能，时钟频率和电压在软件中得到了降低。
例如，一款包括了先进RISC机器(ARM)和数字信号处理器(DSP)的应用处理器，即使ARM组件可以运行在高达600MHz的时钟频率下，但却并非总是需要所有这些计算能力。
一般而言，软件会选择数个预定义处理器工作性能点(OPP)，其包括确保处理器能够运行在满足系统处理要求的最低频率下的电压。
在对满足不同应用要求的功耗进行优化的过程中，为了获得更大的灵活性，人们为处理器中的互连和外设预定义了一个单独的器件内核OPP集。
与给定的OPP相对应，软件向外部稳压器发出控制信号来设置最低电压。
例如，DVFS适用于两个电压源VDD1（为DSP和ARM处理器供电）和VDD2（为子系统和外设之间的互连供电），同时这些电源轨提供芯片所需的大部分电量（一般约为全部所需电量的75%到80%）。
通过将DSP处理器转入一个ARM可以高达125MHz时钟频率运行的低工作性能点完成对MP3解码的同时，还可以有许多剩余电力用于完成其他任务。
为了获得具有理想功耗的这种功能性，我们可以把VDD1降至0.95V，而非保证600MHz运行的1.35V最高电压。
第二种有源电源管理技术即自适应电压缩放(AVS)基于芯片制造和器件工作寿命期间出现的各种变化。
这种技术是相对于DVFS的，DVFS中所有处理器均具有相同的预编程OPP。
正如人们认为的那样，在大多数现有制造工艺中规定频率要求的芯片性能符合一种充分定义的电源分配。
相比许多“冷”器件，一些器件（即“热”器件）可以在较低的电压下达到规定频率。
此时，AVS便可以发挥作用了—处理器检测其自有性能水平，并相应地调节各电压源。
专用片上AVS硬件可实施一个反馈环路，其并不要求处理器介入，从而动态地优化电压电平来应对处理结果、温度和硅芯片性能降低中的变化（请参见图1）。
图1显示了特定处理器的典型性能分布情况。
其中，“冷”器件要求0.94V电压以实现125MHz的运行，而“热”器件则只需要0.83V就可实现相同频率的运行。
自适应电压缩放(AVS)使用一个可相应调节电源电压的反馈环路，这样单个器件便可以完成特定处理任务所需的频率运行了。
运行中，软件为每一个OPP安排AVS硬件，同时控制算法通过一条I2C总线向外部稳压器发送命令，逐步递增降低相应稳压器的输出，直到该处理器刚好超出目标频率要求为止。
例如，开发人员可以在一个适合于所有情况的电压下并以0.95V的125MHz频率为目标开始进行设计（上面图1所示的V1）。
但是，如果一个使用AVS的“热”器件被插入该系统，那么该片上反馈机制就会自动地将电压降至ARM，即0.85V或更低（上面图1所示的V2）。
前两种有源电源管理方法可获得理想速度下运行器件局部所需的最低工作电压。
相比之下，第三种方法动态电源转换(DPS)可确定器件何时完成其当前计算任务，如果当前并不需要，则将器件切换到低功耗状态（请参见图2）。
例如，在等待DMA传输完成时，处理器进入低功耗状态。
唤醒时，处理器可以在数微秒时间内迅速返回到正常状态。
图2动态电源转换(DPS)将完成任务后的特定器件的相应部分切换至低功耗状态。
无源电源管理
DPS只能将多媒体片上系统(SoC)的某一部分切换至低功耗状态，而在许多情况下将整个器件都切换至低功耗状态是颇具现实意义的（无论是无应用程序运行时自动切换，还是根据用户要求切换）。
为了达到这一目标，我们可以运用了静态漏电管理(SLM)，其被用于启动待机或关机模式。
一个关键的区别在于，在待机模式下该器件可维持内部存储器和逻辑电路的状态，而在关机模式下所有系统状态均被存入外部存储器中。
利用SLM后，唤醒时间比冷启动要短得多，因为程序已经被加载到外部存储器，并且用户不必等待整个操作系统(OS)重新启动。
媒体播放器可能会是运用SLM的一个例子：在没有处理任务也没有用户输入的状态下持续10秒钟后，媒体播放器便关闭显示器，并进入待机或关机模式。
例如，具有ARM Cortex-A8 内核的 TI OMAP35x 单芯片处理器器件便可实施关机模式—器件可自动唤醒的一种最低功耗模式。
除唤醒域外，所有功耗域均处于关闭状态。
这样，仅在唤醒域中有一定的功耗，并且所消耗电量来自于I/O漏电流。
系统时钟被关闭的情况下，唤醒域以32kHz独立运行。
OMAP35x还会自动将信号发送给外部稳压器，随后稳压器在这种深度睡眠状态下被关闭。
处理器中的存储器或逻辑电路并未被维持。
在进入关机模式之前，系统状态被存入外部存储器中；
一次唤醒后复位以后，微处理器单元(MPU)跳至用户定义功能，SDRAM控制器配置从暂时存储器中得到恢复。
通用技术
将前面所述电源管理技术结合起来使用，我们便能以一种最佳的方法来处理各种运行情况。
当便携式多媒体播放器的系统活动级别较高时，例如：观看高分辨率视频等，则可以在VDD1上设置过度驱动OPP；
对于要求中等水平功耗的网页浏览而言，此时可为VDD1和VDD2设置正常的OPP；
听音乐的功耗要求相对较低，可为VDD1和VDD2设置最低的OPP。
所有这些例子中，都可以激活AVS来降低“热”器件和“冷”器件之间的功耗差异。
最后，如果用户保持媒体播放器开启闲置数小时或几天时间，则可以使用SLM来自动地将该设备转入关机模式。
为了更好地理解运用这些特性所带来的节能效果，请看下列几种情况。
除特别注明外，下列例子均未使用TI的AVS/SmartReflex技术。
在这些描述中，IVA是指影像、视频以及音频加速器或子系统。
第1种情况：关机模式—0.590mW。
这是一种最低功耗模式，TI的OMAP3可从该模式中自动唤醒。
在这种模式下，整个器件（唤醒域除外）均处于关闭状态，唤醒域以低于32kHz的频率运行。
闲置稳压器被关闭（VDD1=VDD2=0），SDRAM自刷新，并且在唤醒时特定启动顺序会恢复SDRAM控制器和系统状态。
第2种情况：待机模式—7mW。
这种器件状态下，唤醒域处于运行状态，而其他所有非唤醒功耗域则处于低功耗维持状态（VDD1=VDD2=0.9V）。
所有逻辑电路和存储器得以维持。
AVS处于关闭状态。
第3种情况：音频解码—22mW（不包括DPLL和IO功耗）。
尽管ARM以125MHz运行，但是在其进入睡眠模式后ARM仅允许DMA从多媒体卡读取输入数据。
IVA对MP3帧进行解码，并将解码后的数据发送至位于SDRAM中的缓冲器。
一个片上多通道缓存串行端口将数据发送给音频编解码器进行回放。
至于系统配置，DSP以90MHz运行，并且在无需为处理提供循环(cycle)时转入低功耗状态以达到节能的目的。
此时，VDD1=0.9V，而VDD2=1V。
第4种情况：音频/视频编码—540mW（不包括DPLL和IO功耗）。
在这种情况下，采集音频并对其进行编码（48kHz的AACe+，32kbps立体声），采集视频并对其进行编码（20帧/秒的H.264VGA分辨率，2.4Mbsp），并且对二者进行了存储。
与此同时，视频被显示出来。
这种配置中，ARM以500MHz运行，DSP以360MHz运行，VDD1=1.2V，而VDD2=1.15V。
一个片上摄像头子系统也会对来自外部传感器的视频输入进行采集，多通道缓存串行端口对音频PCM输入进行采集，IVA对视频和音频进行编码，编码后的数据被存储至多媒体卡中，而显示子系统则对视频进行旋转处理，并将其发送至LCD和TV输出接口。
实施电源管理
为了实现电源管理的广泛灵活性，DSP处理器利用一个片上电源复位和时钟管理器(PRCM)。
OMAP3530处理器将其功能块分为18个电源域，每一个域均有其自己的开关。
PRCM可对所有电源域进行开关，但是它们中的许多仍然由用户来控制。
另外，每一个电源域都可以被切换到四种状态的任何一种，具体取决于电力是否施加于逻辑电路和存储器，以及时钟是激活还是未激活：激活、未激活、维持或关闭。
这些状态要求和备用稳压器配合，而一些基于ARM和DSP的器件一般都需要这种稳压器。
市场上许多稳压器都可以完成这一工作；
当然，这些稳压器必须要满足处理器的电压、电流和电源转换速率等规范要求，同时还要能够满足上电/断电定序要求。
为了实现DVFS和AVS在基于ARM和DSP的处理器上运行，相关的稳压器还必须要具有I2C可编程性。
在关机模式下，电路必须能够利用自动发出的或由专用GPIO信号发出的I2C命令对VDD1和VDD2稳压器进行开关。
第二种选项的唤醒时间更短一些，因为其没有I2C延迟。
为了减轻设计工程师的负担，最好将这些独立功能的所有特性置于单个器件中，这样可以极大地减少组件数量（请参见图3）。
图3高级稳压器芯片整合了多个单独开关稳压器和低压降线性稳压器，可满足OMAP35x处理器处理各种电压域的要求。
Linux 内核初始化的宏实现简析
在分析Linux网络栈的时候，分析网络子系统的初始化是一件很重要的事情。
有一些子系统并不能以模块的形式出现，因为它们是必须存在于内核当中，随内核启动而加载。
不过，与普通应用程序初始化不同的是，它们的初始化工作，并没有使用显示的函数调用，而是透过一些巧秒的宏来实现。
例如： /* Initialize the DEV module. */
复制代码网络设备子系统使用了宏subsys_initcall向内核注册它的初始化函数。
当然内核中除了subsys_initcall，还有很多类似的xxx_initcall。
另一方面，内核在实始化的时候，提供了一个内核命令行参数，允许用户向内核启动时传递参数，一些网络子系统的初始参数配置，也是通过这样一种方式实现初始化。
例如： __setup("netdev", netdev_boot_setup);
复制代码之所以这样做，最重要的出发点在于内核优化：一些只用于初始化工作的模块，只应该被执行一次，结束后，它们占用的内存应该被释放掉——因为内核一旦启动，在关机之间，都是长驻内存的，不释放掉，就是占着茅坑不拉屎。
本文主要是分析这些宏背后的运行机制。
透过一个仿真的小程序，来揭秘其机制原理——程序中使用的宏和函数名称，尽量地跟内核代码完全一样。
首先对仿真程序逐行介绍，最后我会贴出程序来，如果感兴趣，可以先运行一下它，观察一下，再来看本贴。
启动的内核命令行参数，以及其对应的处理函数。
使用一个名为obs_kernel_param的结构，把启动关键字同其处理函数封装： /* 关键与其处理函数的封装 */ 
复制代码再定义一个宏__setup_param，其作用是，允许用户定义一个类型为obs_kernel_param的结构变量，并初始化其成员： #define __setup_param(str, unique_id, fn, early)\
复制代码与普通的定义稍有不同，宏里面使用了gcc的扩展属性。
1、__attribute__((__section__("xxx")))
自定义“段(section)”，elf中，包括原来的a.out格式，在编译和连接阶段，都将二进制文件按一定格式都分为若干段，如数据段、代码段等等，在加载器加载运行程序的时候，它们又被相应地映射至内存（这一句话估计够一本书来描述了）。
这里需要了解的是，gcc允许程序员自定义一个新的段。
就像这里展示的一样，一个名为.init.setup的段被创建，所有obs_kernel_param变量都被放在了这里，而不是原来默认的其它地方。
2、另一个重要的扩展是对齐：
__attribute__((aligned((sizeof(long)))))
内存对齐问题，我想用不着过多地讨论了。
OK，主角登场，定义一个名为__setup的宏： #define __setup(str, fn) 
复制代码这个包裹，主要是对于obs_kernel_param的early成员的操作，否则，它们就完全一样了，可惜，本文出发点不同，并未使用early。
另一个主角是subsys_initcall： #define __define_initcall(level,fn)
复制代码__define_initcall(这个宏定义了一个函数指针（使用typedef定义了这个新的函数指针类型），其名称与宏的参数有关，同样地，它也使用了gcc扩展，创建一个名为.initcall" level ".init"的段，level是参数，也就是说，名称可以由调用者控制，函数指针指向它的另一个参数fn。
subsys_initcall宏是一个包裹定义，主要是指明了level，这里是4。
接下来，使用__setup宏注册了三个关键字： __setup("netdev=", netdev_boot_setup);
复制代码也定义了一个函数指针： subsys_initcall(net_dev_init);
复制代码对应的函数，具体实现为： static int __init ip_auto_config_setup(char *addrs)
复制代码当然，仿真嘛，毕竟不是真的。
函数其实没有任何具体任务，就是打印一个记号，冒个泡。
现在深入到问题的核心了，如何使用这些自定义段，也就是说，得知道它们链接后重定位的具体地址，这是通过gcc提供的自定义链接控制脚本来实现的： [root@Kendo develop]# cat my.lds
复制代码脚本中，明确地指明了自定义段的开始地址：
.init.text  //自定义文本段
.init.data  //自定义数据段
.init.setup   //刚才用__setup定义的几个启动关键字的对应的变量就放在这里
.initcallX.init //一共7个，不过我只用了第4个。
另外要注意的是，同时定义了四个变量，__setup_start = .;它指向.init.setup的开始位置，同样__setup_end = .;就是结束位置。
这样，要程序中使用这四个变量，应该申明它们是外部变量： 
Apache XML Project介绍
Apache XML Project当前包括五个子项目，每一个都含盖了XML的一个方面。
1.Xerces – 使用Java, C++的XML 分析程序，随带Perl和COM 捆绑  
2.Xalan - 使用Java, C++的XSLT 样式单处理器  
3.Cocoon - 使用Java的XML-based网络出版  
4.FOP - 使用Java 的XSL格式化对象  
5.Xang - 使用Java 的快速动态服务页  
6.SOAP – 简单对象存取协议（Simple Object Access Protocol ）  
Xerces – 使用Java, C++的XML 分析程序，随带Perl和COM 捆绑  
Xerces使用一种蝴蝶的名字，提供世界级的XML分析器和产生器。
全认证的分析使用Java和C++语言，执行W3C XML 和DOM (Level 1 and 2)标准，也包括SAX (version 2)标准。
分析器有很高的模块化和结构化，同时支持XML Schema。
Xerces 提供C++版的Perl包装，它通过DOM XML分析器存取。
自从Unicode成为XML标准的关键部分，Xerces提供对Unicode字符的全存取。
COM包装提供对Microsoft MSXML分析器的兼容性。
Xalan - 使用Java, C++的XSLT 样式单处理器  
Xalan使用一种罕见音乐器材的名字，提供对XSLT样式单的高质量处理。
Xalan完全执行W3C XSLT和Xpath的命令。
样式单处理器有丰富的特点和牢固的结构。
Xalan使用BSF（Bean Scripting Framework）执行Java或脚本扩展、多文档输出，我们可以使用SQL/JDBC数据捆绑和其他数据工作。
Cocoon - 使用Java的XML-based网络出版  
Cocoon是网络出版强有力的框架，它的使用带来了对新世界事物的抽象，而且容易的巩固了网络站点的创建和管理，这些多基于XML范例和其相关技术。
FOP - 使用Java 的XSL格式化对象  
FOP是世界上第一个为XSL格式化对象制作的打印格式。
它使用Java 1.1应用创建，读取格式化对象树然后转换为PDF格式。
格式化对象树表示XMl文档（通过XSLT引擎输出）的形成或在存储器传递DOM文档或SAX事件。
Xang - 使用Java 的快速动态服务页  
Xang让你快速建立数据驱动和跨平台的网络应用，可以组合全异的数据源。
Xang体系结构清晰的隔离了数据、逻辑和表达。
它是基于开放的工业标准。
例如HTTP, XML, XSL, DOM 和 ECMAScript (JavaScript)。
SOAP – 简单对象存取协议（Simple Object Access Protocol ）  
Soap项目是W3C协议的执行草案，它基于而且接替IBM SOAP4J执行。
W3C草案规范：SOAP是用于在分布式系统中交换数据的简单协议。
它是XML基础协议，被三个部分组成：一个定义框架描述信息内容、如何处理信息的封装；
一套定义数据类型的编码方式；
一个表达远程程序调用和回复的协议。
（一）JDOM的介绍以及与JAXB的比较 
Java + XML = JDOM ！ 
这就是JDOM设计者的目标。
如果你曾经使用过烦人的SAX或是DOM来处理XML，你就会知道为什么要有JDOM或者是JAXB。
在今年（2002）的JavaOne会议上JDOM的主要创始人Jason Hunter有一篇精彩的演讲介绍了JDOM技术，题目就是JDOM Makes XML Easy。
在那篇文档里，JDOM被拿来与DOM比较，而我更愿意拿它同JAXB比较。
因为JAXB和JDOM都是为了在Java中提供比DOM和SAX更为方便的XML处理接口而开发的，并且通过完全不同的途径来解决这个问题。
JDOM的处理方式是与DOM类似的树操作。
而JAXB通过DTD和绑定模式来生成访问XML文档的Java代码，将XML映射成了Java对象来操作。
你可以根据项目的需要和个人喜好来决定采用哪一个。
JDOM与JAXB的比较，从本身的特点来看： 
1) JDOM比JAXB更容易上手。
使用JAXB首先要会编写DTD，然后还要会编写绑定模式。
JDOM没有这样的要求，如果你会Java和XML，甚至可以说光是看JDOM的javadoc文档就能够使用JDOM。
2) JAXB编写好DTD和绑定模式以后，XML文档被映射成了Java对象，其数据就是Java对象的属性，连数据类型都做好了转换，因此，访问XML文档比JDOM要简便，可以说是一劳永逸。
3) JAXB由某个DTD和绑定模式生成的代码只能访问该DTD所约束的文档。
如果想要访问其他XML文档，需要再编写DTD和绑定模式。
JDOM可以处理任何XML文档，包括受约束的和不受约束的。
目前JDOM和JAXB都没有正式版本。
JDOM的最新版本是beta8，JAXB是1.0 early access，其规范版本是0.21。
相对而言，JDOM更成熟一些。
例如JAXB不支持名字空间、不能向XML文档写入处理指令，有时我们需要保留的换行符和首尾空格在JAXB中自动过滤掉了，就连放在<![CDATA[ 和 ]]>;里面也不能幸免。
JDOM就没有这些限制。
如果说以上的3点比较是JDOM和JAXB本身的特点所决定的，几乎不可能改变，那么这里表明，JAXB还需要更多的工作。
（二）获得并安装JDOM 
在http://jdom.org可以下载JDOM的最新版本。
以JDOM beta8的2进制版本为例。
下载后解压缩，JDOM的jar文件就是build目录下的文件jdom.jar，将之加入类路径。
另外JDOM还需要lib目录下那些jar文件如xerces.jar的支持。
如果在使用中出现以下错误： 
java.lang.NoSuchMethodError 
或 
java.lang.NoClassDefFoundError: org/xml/sax/SAXNotRecognizedException 
你需要保证xerces.jar文件在CLASSPATH中位于其他XML类，如JAXP或Crimson之前，这些类文件，包括以前老版本的xerces，可能不支持SAX2.0或DOM Level 2。
于是导致了上面的错误。
（三）一个简单的例子 
JDOM的处理方式有些类似于DOM，但它主要是用SAX实现的，你不必担心处理速度和内存的问题。
其最重要的一个包org.jdom中主要有以下类： 
数据输入要用到XML文档要通过org.jdom.input包，反过来需要org.jdom.output。
如前面所说，关是看API文档就能够使用。
我们的例子读入XML文件exampleA.xml，加入一条处理指令，修改第一本书的价格和作者，并添加一条属性，然后写入文件exampleB.xml：
CC的思路及防范方法
很多朋友都知道木桶理论，一桶水的最大容量不是由它最高的地方决定的，而是由它最低的地方决定，服务器也是一样，服务器的安全性也是由它最脆弱的地方决定的，最脆弱的地方有多危险服务器就有多危险。
DDOS也是一样，只要你的服务器存在一个很耗资源的地方，限制又不够，就马上成为别人DDOS的对象。
比如SYN-FLOOD，它就是利用服务器的半连接状态比完全连接状态更耗资源，而SYN发动方只需要不停的发包，根本不需要多少资源。
一个好的DDOS攻击必须是通过自己极少资源的消耗带来对方较大的资源消耗，否则比如ICMP-FLOOD和UDP-FLOOD都必须和别人一样大的带宽，对方服务器消耗多少资源自己也得赔上多少资源，效率极其低下，又很容易被人发现，现在基本没有什么人用了。
攻击原理 
CC主要是用来攻击页面的。
大家都有这样的经历，就是在访问论坛时，如果这个论坛比较大，访问的人比较多，打开页面的速度会比较慢，对不！
一般来说，访问的人越多，论坛的页面越多，数据库就越大，被访问的频率也越高，占用的系统资源也就相当可观，现在知道为什么很多空间服务商都说大家不要上传论坛，聊天室等东西了吧。
一个静态页面不需要服务器多少资源，甚至可以说直接从内存中读出来发给你就可以了，但是论坛就不一样了。
我看一个帖子，系统需要到数据库中判断我是否有读读帖子的权限。
如果有，就读出帖子里面的内容，显示出来——这里至少访问了2次数据库，如果数据库的体积有200MB大小，系统很可能就要在这200MB大小的数据空间搜索一遍。
这需要多少的CPU资源和时间？
如果我是查找一个关键字，那么时间更加可观，因为前面的搜索可以限定在一个很小的范围内，比如用户权限只查用户表，帖子内容只查帖子表，而且查到就可以马上停止查询，而搜索肯定会对所有的数据进行一次判断，消耗的时间是相当的大。
CC就是充分利用了这个特点，模拟多个用户（多少线程就是多少用户）不停的进行访问（访问那些需要大量数据操作，就是需要大量CPU时间的页面）。
很多朋友问到，为什么要使用代理呢？
因为代理可以有效地隐藏自己的身份，也可以绕开所有的防火墙，因为基本上所有的防火墙都会检测并发的TCP/IP连接数目，超过一定数目一定频率就会被认为是Connection-Flood。
使用代理攻击还能很好的保持连接，我们这里发送了数据，代理帮我们转发给对方服务器，我们就可以马上断开，代理还会继续保持着和对方连接（我知道的记录是有人利用2000个代理产生了35万并发连接）。
可能很多朋友还不能很好的理解，我来描述一下吧。
我们假设服务器A对Search.asp的处理时间需要0.01S（多线程只是时间分割，对结论没有影响），也就是说他一秒可以保证100个用户的Search请求，服务器允许的最大连接时间为60s，那么我们使用CC模拟120个用户并发连接，那么经过1分钟，服务器的被请求了7200次，处理了6000次，于是剩下了1200个并发连接没有被处理。
有的朋友会说：丢连接！丢连接！
问题是服务器是按先来后到的顺序丢的，这1200个是在最后10秒的时候发起的，想丢？！
还早，经过计算，服务器满负开始丢连接的时候，应该是有7200个并发连接存在队列，然后服务器开始120个/秒的丢连接，我们发动的连接也是120个/秒，服务器永远有处理不完的连接，服务器的CPU 100%并长时间保持，然后丢连接的60秒服务器也判断处理不过来了，新的连接也处理不了，这样服务器达到了超级繁忙状态。
蝴蝶：我们假设服务器处理Search只用了0.01S，也就是10毫秒（这个速度你可以去各个有开放时间显示的论坛看看），我们使用的线程也只有120，很多服务器的丢连接时间远比60S长，我们的使用线程远比120多，可以想象可怕了吧，而且客户机只要发送了断开，连接的保持是代理做的，而且当服务器收到SQL请求，肯定会进入队列，不论连接是否已经断开，而且服务器是并发的，不是顺序执行，这样使得更多的请求进入内存请求，对服务器负担更大。
当然，CC也可以利用这里方法对FTP进行攻击，也可以实现TCP-FLOOD，这些都是经过测试有效的。
防范方法 
说了攻击原理，大家肯定会问，那么怎么防御？
使用硬件防火墙我不知道如何防范，除非你完全屏蔽页面访问，我的方法是通过页面的编写实现防御。
1. 使用Cookie认证。
这时候朋友说CC里面也允许Cookie，但是这里的Cookie是所有连接都使用的，所以启用IP+Cookie认证就可以了。
2. 利用Session。
这个判断比Cookie更加方便，不光可以IP认证，还可以防刷新模式，在页面里判断刷新，是刷新就不让它访问，没有刷新符号给它刷新符号。
给些示范代码吧，这样用户第一次访问会使得Refresh=1，第二次访问，正常，第三次，不让他访问了，认为是刷新，可以加上一个时间参数，让多少时间允许访问，这样就限制了耗时间的页面的访问，对正常客户几乎没有什么影响。
3. 通过代理发送的HTTP_X_FORWARDED_FOR变量来判断使用代理攻击机器的真实IP，这招完全可以找到发动攻击的人，当然，不是所有的代理服务器都发送，但是有很多代理都发送这个参数。
详细代码： 
这样会生成CCLog.txt，它的记录格式是：真实IP [代理的IP] 时间，看看哪个真实IP出现的次数多，就知道是谁在攻击了。
将这个代码做成Conn.asp文件，替代那些连接数据库的文件，这样所有的数据库请求就连接到这个文件上，然后马上就能发现攻击的人。
4. 还有一个方法就是把需要对数据查询的语句做在Redirect后面，让对方必须先访问一个判断页面，然后Redirect过去。
5. 在存在多站的服务器上，严格限制每一个站允许的IP连接数和CPU使用时间，这是一个很有效的方法。
CC的防御要从代码做起，其实一个好的页面代码都应该注意这些东西，还有SQL注入，不光是一个入侵工具，更是一个DDOS缺口，大家都应该在代码中注意。
举个例子吧，某服务器，开动了5000线的CC攻击，没有一点反应，因为它所有的访问数据库请求都必须一个随机参数在Session里面，全是静态页面，没有效果。
突然发现它有一个请求会和外面的服务器联系获得，需要较长的时间，而且没有什么认证，开800线攻击，服务器马上满负荷了。
代码层的防御需要从点点滴滴做起，一个脚本代码的错误，可能带来的是整个站的影响，甚至是整个服务器的影响，慎之！
脚本攻击防范策略完全篇 
近来，网络上的SQL Injection 漏洞利用攻击，JS脚本，HTML脚本攻击似乎逾演逾烈.陆续的很多站点都被此类攻击所困扰，并非像主机漏洞那样可以当即修复，来自于WEB的攻击方式使我们在防范或者是修复上都带来了很大的不便。
HOOO…… 一个站长最大的痛苦莫过于此。自己的密码如何如何强壮却始终被攻击者得到，但如何才能做到真正意义上的安全呢？
第一，别把密码和你的生活联系起来；
第二，Supermaster的PWD最好只有你自己知道；
第三，绝对要完善好你的网站程序。
然而怎样才能完善，这将是我们此文的最终目的。
安全防护，如何做到安全防护？
想要防护就要知道对方是如何进行攻击。
有很多文章都在写如何攻下某站点，其实其攻击的途径也不过是以下几种：  
1. 简单的脚本攻击  
此类攻击应该属于无聊捣乱吧。
比如javascript:alert(); </table>;等等，由于程序上过滤的不严密，使攻击者既得不到什么可用的，但又使的他可以进行捣乱的目的。
以目前很多站点的免费服务，或者是自身站点的程序上也是有过滤不严密的问题。
2. 危险的脚本攻击  
这类脚本攻击已经过度到可以窃取管理员或者是其他用户信息的程度上了。
比如大家都知道的cookies窃取，利用脚本对客户端进行本地的写操作等等。
3. Sql Injection 漏洞攻击  
可以说，这个攻击方式是从动网论坛和BBSXP开始的。
利用SQL特殊字符过滤的不严密，而对数据库进行跨表查询的攻击。
比如：得到了管理员的密码也就意味着已经控制的整站，虽然不一定能得到主机的权限，但也为这一步做了很大的铺垫。
类似的SQL Injection攻击的方式方法很多，对不同的文件过滤不严密所采取的查询方式也不同。
所以说想做好一个完整的字符过滤程序不下一凡功夫是不可能的。
4. 远程注入攻击  
某站点的所谓的过滤只是在提交表格页上进行简单的JS过滤。
对于一般的用户来说，你大可不必防范；
对早有预谋的攻击者来说，这样的过滤似乎根本没作用。
我们常说的POST攻击就是其中一例。
通过远程提交非法的信息以达到攻击目的。
通过上面的攻击方法的介绍，我们大致的了解了攻击者的攻击途径，下面我们就开始重点的介绍，如何有效的防范脚本攻击！  
让我们还是从最简单的开始：  
l 防范脚本攻击  
JS脚本 和HTML脚本攻击的防范其实很简单：server.HTMLEncode（Str）完事。
当然你还不要大叫，怎么可能？
你让我把全站类似<%=uid%>;都加过滤我还不累死？
为了方便的过滤，我们只需要将HTML脚本和JS脚本中的几个关键字符过滤掉就可以了：程序体（1）如下：  
使用Include把函数写在公有页面上，这样效率是最好的。
程序体（1）  
另外，值得我们注意的是，很多站点在用户注册，或者是用户资料修改的页面上也缺少脚本的过滤，或者是只在其中之一进行过滤，注册进入后修改资料仍然可以进行脚本攻击。
对用户提交的数据进行检测和过滤，程序体（2） 如下：  
程序体（2）  
为了提供工作效率我们再将过滤内容程序化，这样对多个参数的过滤效率将有很大程度上的提高：如程序体（3）  
程序体（3）  
有了上面的过滤函数您可以在任何需要过滤的地方应用过滤函数直接使用就可以了。
这就使我们的修复工作大大的简化了。
另外，我想在这里再次多提醒一下，一些站点的UBB在进行小的表情图标转化时也会出现过滤问题，由于很隐蔽所以不容易发现：  
我们标签内的文字进行修改， 
不知道各位看懂没，前一个单引号用来中和程序提供的左引号，第二个单引号用来中和闭合的右引号，如果图片不存在，那么将激活onerror标签执行脚本程序。
对于已经过滤了单引号的站点在这里用双引号一样可以完成。
对于过滤了javascript字段的，只用alert()也完全可以。
所以说要过滤就要过滤完全，别给攻击者留下一丝机会。
l 防范SQL Injection 漏洞攻击  
可以这样说，这里似乎是整篇文章的重点了.SQL Injection 漏洞攻击的的多样化也使得我们在程序防护上不得不想的更多一些。
面对SQL Injection 的强大”攻势”，我们到底该过滤哪些？
一些常用的危险字符有  
' 数据库字段判别封闭  
-- 某些数据库注释标志  
# 某些数据库注释标志  
" 可能导致程序出错  
\ 跨越目录  
3221143836nicode编码的特征字符  
$ 可能用于变量标注  
/ 和\ 一样  
NULL 小心"空"录入的危险，可能导致数据库或系统处理报错，利用报错构造溢出.  
空格和'一起，构造sql injeciton  
 = & 如果存在二次参数传递，可能改写querystr。
(1) 从最一般的.SQL Injection 漏洞攻击来看：用户名和密码上的过滤问题，如：  
提交：用户名为：’or’’=’ 用户密码为：’or’’=’  
从程序出发，我们完全可以得出，数据库在执行以下操作  
这样一来，这样，SQL 服务器将返回 lUsers 表格中的所有记录，而 ASP 脚本将会因此而误认为攻击者的输入符合 lUsers 表格中的第一条记录，从而允许攻击者以该用户的名义登入网站。
对此类注入的防范似乎简单的很：  
程序体（4）  
（2）杜绝SQL 注入式攻击的第一步就是采用各种安全手段监控来自 ASP request 对象 (Reques、Request.QueryString、Request.Form、Request.Cookies和 Request.ServerVariables) 的用户输入，以确保 SQL 指令的可靠性。
具体的安全手段根据你的 DBMS 而异。
SQL 注入式攻击可能引起的危害取决于该网站的软件环境和配置。
当 Web 服务器以操作员(dbo)的身份访问数据库时，利用SQL注入式攻击就可能删除所有表格、创建新表格，等等。
当服务器以超级用户 (sa) 的身份访问数据库时，利用SQL注入式攻击就可能控制整个 SQL 服务器；
在某些配置下攻击者甚至可以自行创建用户帐号以完全操纵数据库所在的 Windows 服务器。
甚至可以执行像：net user fqy fqy /add 这样的指令.当然这就需要你当前的运行身份必须是Sa,或者你攻击的只是一台虚拟主机，我劝你还是就此打住.  
对于一些整机使用的站点来说防止通过80端口攻击而直接拿到整机管理权限，这一点就变得至关重要了。
对xp_cmdshell 的过滤就成为首要，很多站点的程序都是用GET或者是GET与POST混合来提交数据的，对于此，我们给出一种防止GET进行SQL注入的程序：如程序体（5）  
程序体（5）  
我要做点声明的是：以上的程序只是对GET方式提交的数据进行的过滤，千万不要盲目套用。
像其他一些来自 ASP request 对象 (Reques、Request.QueryString、Request.Form、Request.Cookies和 Request.ServerVariables) 的用户输入的攻击方法的方法，大致都集中在脚本期望的输入变量是数字变量 (ID) 上，当然我们不能只看数字变量，比如：  
另外,如何单一的防止类似这样的注入错误  
防范程序: 程序体(6)  
程序体(6)  
出现这样的攻击，使我们的站长们不得不又再次头痛，这里我可以给出大家一个解决最好办法，一般的来说，用户名长度字符数不会超过15个字符，大都为14字符。
那么我们从长度出发，来进行过滤：如程序体（7）  
程序体（7）  
为什么我们这里以及过滤了单引号，怎么还要再次取一个长度限制呢？
不多说了，看看4ngel的文章先<<饶过'限制继续射入>;>; .别问我怎么转数字格式，我不会,嘿嘿…^_^!  
还继续回到我们的主题,” 脚本期望的输入变量是数字变量 (ID)”.怎样进行注入防范,天呐,方法太多了，最直接的就是判断是否是数字整型,还有一些比较个性的验证办法,我们一一介绍一下 如:程序体(8)  
一,判断数字是否是整型  
二 取字长 这一点我相信一般的数据长度不会大于8位所以:  
三 我认为这是一种比较冒险的办法,就是再进行一次数据库的查询,如果数据库表内没有相同的值与之相同那么返回错误.  
上面的是数据ID 的检测,下面则是正式的查询  
四,我自己常用的数据过滤脚本
程序体(8)  
由于我个人的编程习惯,我喜欢将所有的数据检验程序全部保留到整站的公用程序中,比如:conn.asp啦,只需要写一次就可以修复全站的问题.  
这样去一个一个尝试,当然我们不能在这里提什么Perl程序去跑密码,程序是别人写,要自己知道原理.这里我只是想给个比较方便的办法就是取ASC码范围.这个要比单独跑要快很多.不论是是字母,数字,汉字,特殊字符,他们总会有对应的ASC码,用以下办法:  
如何更加有效的防止SQL注入攻击
我们将在下面的文章中具体提到!  
l 防范远程注入攻击  
这类攻击在以前应该是比较常见的攻击方式,比如POST攻击,攻击者可以随便的改变要提交的数据值已达到攻击目的.
又如:COOKIES 的伪造,这一点更值得引起程序编写者或站长的注意，不要使用COOKIES来做为用户验证的方式,否则你和把钥匙留给贼是同一个道理.  
我想各位站长或者是喜好写程序的朋友千万别出这类错误,真的是不可饶恕.
伪造COOKIES 都多少年了，你还用这样的就不能怪别人跑你的密码.
涉及到用户密码或者是用户登陆时,你最好使用session 它才是最安全的.
如果要使用COOKIES就在你的COOKIES上多加一个信息,SessionID,它的随机值是64位的,要猜解它,不可能.
下面我们来谈谈如何防范远程注入攻击,一般的攻击都是将单表提交文件拖到本地,将Form ACTION=”chk.asp” 指向你服务器中处理数据的文件即可.
如果你全部的数据过滤都在单表页上，那么恭喜你，你将已经被脚本攻击了.  
怎么才能制止这样的远程攻击好办,请看代码如下: 程序体(9)  
你提交的路径有误，禁止从站点外部提交数据请不要乱该参数！ 
个人感觉上面的代码过滤不是很好，有一些外部提交竟然还能堂堂正正的进来,于是再写一个.  
这个是过滤效果很好,建议使用.  
如果您是在用任何手段攻击服务器，那你应该庆幸，你的所有操作已经被服务器记录，我们会第一时间通知公安局与国家安全部门来调查你的IP.  
程序体(9)  
本以为这样就万事大吉了，在表格页上加一些限制,比如maxlength啦,等等..
但天公就是那么不作美,你越怕什么他越来什么.
你别忘了,攻击者可以突破sql注入攻击时输入框长度的限制.
写一个SOCKET程序改变HTTP_REFERER？
我不会。
网上发表了这样一篇文章：  
用法:先把len.reg导入注册表(注意文件路径)  
然后把len.htm拷到注册表中指定的地方.  
打开网页,光标放在要改变长度的输入框上点右键,看多了一个叫扩展的选项了吧  
单击搞定!
后记:同样的也就可以对付那些限制输入内容的脚本了.  
怎么办？
我们的限制被饶过了，所有的努力都白费了？
不，举起你de键盘，说不。
让我们继续回到脚本字符的过滤吧，他们所进行的注入无非就是进行脚本攻击。
我们把所有的精力全都用到ACTION以后的页面吧，在chk.asp页中，我们将非法的字符全部过滤掉，结果如何？
我们只在前面虚晃一枪，叫他们去改注册表吧，当他们改完才会发现，他们所做的都是那么的徒劳。
l ASP木马  
已经讲到这里了，再提醒各位论坛站长一句，小心你们的文件上传：为什么论坛程序被攻破后主机也随之被攻击者占据。
原因就在……对！ASP木马！一个绝对可恶的东西。
病毒么？
非也.把个文件随便放到你论坛的程序中，您老找去吧。
不吐血才怪哦。
如何才能防止ASP木马被上传到服务器呢？
方法很简单，如果你的论坛支持文件上传，请设定好你要上传的文件格式，我不赞成使用可更改的文件格式，直接从程序上锁定，只有图象文件格式，和压缩文件就完全可以，多给自己留点方便也就多给攻击者留点方便。
怎么判断格式，我这里收集了一个，也改出了一个，大家可以看一下： 程序体（10）  
判断文件类型是否合格  
验证文件内容的合法性  
判断用户文件中的危险操作  
程序体（10）  
把他们加到你的上传程序里做一次验证，那么你的上传程序安全性将会大大提高.  
什么？
你还不放心？
拿出杀手锏，请你的虚拟主机服务商来帮忙吧。
登陆到服务器，将PROG ID 中的"shell.application"项和"shell.application.1"项改名或删除。
再将”WSCRIPT.SHELL”项和”WSCRIPT.SHELL.1”这两项都要改名或删除。
呵呵，我可大胆的说，国内可能近半以上的虚拟主机都没改过。
只能庆幸你们的用户很合作，否则……我删，我删，我删删删……  
小结  
如何更好的达到防范SQL Injection的攻击？
这里我个人给推荐几个办法，第一，免费程序不要真的就免费用，既然你可以共享原码，那么攻击者一样可以分析代码。
如果有能力的站长最好还是更改一下数据库表名，字段名，只修改关键的admin, username, password就可以了，比如forum_upasswd 这样的字段名谁能猜到？
如果你猜到了，最好赶快去买彩票吧，特等奖不是你还会有谁呢？
另外，一般站点的关键就在于管理员的密码，很好的保护好你的管理员密码那是至关重要的，至少10位的数字字母组合。
另外加上现在大多数站点程序都会使用MD5来加密用户密码，加上你密码的强壮性，那样你站点的安全性就大大的提高了。
即使出现了SQL Injection漏洞，攻击者也不可能马上拿下你的站点。
本文到此就算结束了，如果各位读者有什么更好的建议或者是问题可以与我共同讨论，学习。
欢迎来到我们的站点http://www.e3i5.com相互交流  
后记  
近期修正了极限论坛V6000 + 的整套程序，发现SQL Injection N多处，脚本攻击N处，细节问题处理N处。
我下载了极限论坛的所有版本都查看了一下，所有的版本都存在问题，包括最新版的。
请使用极限论坛的站长注意一下，及时修复论坛程序上的过滤BUG，如果有什么问题可以和我联系，我提供极限论坛V6000 +的修正版程序。
由于数据库加密格式不同，请联系时讲明原来的数据库格式。
以便做数据转移导入，以及用户登陆程序的定制。
SOA 新业务语言 新系统架构——SOA与Web 2.0
“我们日益认识到Web 2.0 和SOA的概念在很大程度上是相同的，只是被粉饰成为软件的不同部分（如果的确存在不同的话）。
ZDNet同事Dion Hinchliffe观察SOA和Web 2.0的混合使用已经有一段时间了。
他在一篇新博客中说SOA和Web 2.0有很多重叠的东西，例如都是基于invoke的服务，都能存在于网络的任何位置等等。
SOA和Web 2.0的共性远大于不同，而且Web 2.0在推广SOA方面起到了一定作用。
直到到现在为止，SOA和Web 2.0拥有不同的支持者— SOA更多涉及企业结构和开拓商铺，而Web 2.0更关注用户。
这种差别随着更多企业接纳Web 2.0而在变化，但是Dion依然认为这两项技术有着不同的重心: 
“O’Reilly公司的Web 2.0告诉我们数据是现在的软件应用中最重要的部分… SOA告诉我们服务才是中心。
SOA中传输数据的服务也非常重要，但是传统SOA的更关注IT系统的接合处而不是那些能使接合处更具价值的东西。
Dion最后认为，SOA也许是通畅的管道，但并不是系统中通过的水的价值。
他说“SOA提供了更工程化、可预设的和正式的视角，也许能够满足大量重要技术标准但是经常被认为忽略了最重要的问题：人是软件的中心，我们的数据是无法替代的，并具有极大的市场优势。
我们的软件或服务就象IT系统中的电和网络带宽。
许多行业领导者说企业同时需要SOA类方法的结构和Web 2.0方法的创业能力。
我帮助准备了最近召开的SOA执行大会分析报告，探讨了SOA和Web 2.0的相互影响，特别是mashup（即多种服务的组合）。
我采访了webMethods公司SOA产品营销副总裁Miko Matsumura，他非常慎重的反对毫无节制的运用mashup，因为“这种不定形的方式过于专制”，他说：“这种模式与具有合理限制的模式相比，天生缺少灵活性和敏捷性，而且价格更贵。
Miko补充说有所限制的SOA管理“更应该被认为是支点，而不是‘束身衣’如果你在一方面进行限制，并不意味着不能在其他方向自由活动。
这就是SOA所表现出的平衡，也就是IT和业务的结盟。
一方面向天马行空，另一边却想勒紧缰绳。
Dion指出了一些SOA和Web 2.0共有的要素，并列出了一些共通点：
软件重组 
管理 
软件就是服务 
应用就是平台 
无意识的使用 
开放 
AJAX 
互操作性 
货币化 
安全 
网络导向架构
最后一条网络导向架构或者WOA是关键的内容，最终有可能会将SOA和Web 2.0合为一体。
Dion说：“关于传统SOA规模最大的一场讨论中，从表面上看现在世界上有几千种软件平台和环境。
如果它们不能按照你的SOA（SOAP和WS-*）方式与你对话，就不可能实现互操作性。
不过Dion还补充说：“通过运用WOA,任何人都能说HTTP — 最基础的网络协议— 任何人都能处理XML, 也就是说现存的任何工具和平台都可以实现互操作并简单、安全和容易的共同工作，并在其他服务上面建造应用。
重要的，mashup是迈向WOA的关键结果，而且大部分mashup都以REST或者类似REST的服务为基础。
Mashups可能会在SOA中占据超出我们想象的更重要的位置。
做为InfoWorld项目的一部分，我采访了 Software AG技术泰斗Mighael Botha，他是这样认为的：“我认为mashup是SOA的价值所在。
我可以向用户展示Mashup，并说：“这是一种能使组织机构内部用户使用同一视角的软件结合使用技术。
用户可能不理解什么是mashup，但是当他们看到他们能够从后台的六、七个不同的系统中获得全部关于客户或产品的数据，他们就会明白。
Web 2.0最终会造福SOA吗
Oracle Fusion 中间件高级总监Ashish Mohindaroo是这样认为的：“Web 2.0所关注的是用户生产力的提高，而SOA关注的是现有资产的再利用。
如果我能够将不同网站的内容拆散再组合成新的页面或者为最终用户提供新的服务，会是一件很好地事情。
他解释说：“过去我在推出新服务时可能需要更长的时间，因为所有的工作都要从头做起。
大型网站架构不得不考虑的10个问题
这里的大型网站架构只包括高互动性高交互性的数据型大型网站，基于大家众所周知的原因，我们就不谈新闻类和一些依靠HTML静态化就可以实现的架构了，我们以高负载高数据交换高数据流动性的网站为例，比如海内，开心网等类似的web2.0系列架构。
我们这里不讨论是PHP还是JSP或者.NET环境，我们从架构的方面去看问题，实现语言方面并不是问题，语言的优势在于实现而不是好坏，不论你选择任何语言，架构都是必须要面对的。
这里讨论一下大型网站需要注意和考虑的问题
1、海量数据的处理
众所周知，对于一些相对小的站点来说，数据量并不是很大，select和update就可以解决我们面对的问题，本身负载量不是很大，最多再加几个索引就可以搞定。
对于大型网站，每天的数据量可能就上百万，如果一个设计不好的多对多关系，在前期是没有任何问题的，但是随着用户的增长，数据量会是几何级的增长的。
在这个时候我们对于一个表的select和update的时候(还不说多表联合查询)的成本的非常高的。
2、数据并发的处理
在一些时候，2.0的CTO都有个尚方宝剑，就是缓存。
对于缓存，在高并发高处理的时候也是个大问题。
在整个应用程序下，缓存是全局共享的，然而在我们进行修改的时候就，如果两个或者多个请求同时对缓存有更新的要求的情况下，应用程序会直接的死掉。
这个时候，就需要一个好的数据并发处理策略以及缓存策略。
另外，就是数据库的死锁问题，也许平时我们感觉不到，死锁在高并发的情况下的出现的概率是非常高的，磁盘缓存就是一个大问题。
3、文件存贮的问题
对于一些支持文件上传的2.0的站点，在庆幸硬盘容量越来越大的时候我们更多的应该考虑的是文件应该如何被存储并且被有效的索引。
常见的方案是对文件按照日期和类型进行存贮。
但是当文件量是海量的数据的情况下，如果一块硬盘存贮了500个G的琐碎文件，那么维护的时候和使用的时候磁盘的Io就是一个巨大的问题，哪怕你的带宽足够，但是你的磁盘也未必响应过来。
如果这个时候还涉及上传，磁盘很容易就over了。
也许用raid和专用存贮服务器能解决眼下的问题，但是还有个问题就是各地的访问问题，也许我们的服务器在北京，可能在云南或者新疆的访问速度如何解决
如果做分布式，那么我们的文件索引以及架构该如何规划。
所以我们不得不承认，文件存贮是个很不容易的问题
4、数据关系的处理
我们可以很容易的规划出一个符合第三范式的数据库，里面布满了多对多关系，还能用GUID来替换INDENTIFY COLUMN， 但是，多对多关系充斥的2.0时代，第三范式是第一个应该被抛弃的。
必须有效的把多表联合查询降到最低。
5、数据索引的问题
众所周知，索引是提高数据库效率查询的最方面最廉价最容易实现的方案。
但是，在高UPDATE的情况下，update和delete付出的成本会高的无法想想，笔者遇到过一个情况，在更新一个聚焦索引的时候需要10分钟来完成，那么对于站点来说，这些基本上是不可忍受的。
索引和更新是一对天生的冤家，问题A，D，E这些是我们在做架构的时候不得不考虑的问题，并且也可能是花费时间最多的问题。
6、分布式处理
对于2.0网站由于其高互动性，CDN实现的效果基本上为0，内容是实时更新的，我们常规的处理。
为了保证各地的访问速度，我们就需要面对一个绝大的问题，就是如何有效的实现数据同步和更新，实现各地服务器的实时通讯有是一个不得不需要考虑的问题。
7、Ajax的利弊分析
成也AJAX，败也AJAX，AJAX成为了主流趋势，突然发现基于XMLHTTP的post和get是如此的容易。
客户端get或者post 到服务器数据，服务器接到数据请求之后返回来，这是一个很正常的AJAX请求。
但是在AJAX处理的时候，如果我们使用一个抓包工具的话，对数据返回和处理是一目了然。
对于一些计算量大的AJAX请求的话，我们可以构造一个发包机，很容易就可以把一个webserver干掉。
8、数据安全性的分析
对于HTTP协议来说，数据包都是明文传输的，也许我们可以说我们可以用加密啊
加密的过程就可能是明文了(比如我们知道的QQ，可以很容易的判断他的加密，并有效的写一个跟他一样的加密和解密方法出来的)。
当你站点流量不是很大的时候没有人会在乎你，但是当你流量上来之后，那么所谓的外挂，所谓的群发就会接踵而来(从qq一开始的群发可见端倪)。
也许我们可以很的意的说，我们可以采用更高级别的判断甚至HTTPS来实现，注意，当你做这些处理的时候付出的将是海量的database，io以及CPU的成本。
对于一些群发，基本上是不可能的。
笔者已经可以实现对于百度空间和qq空间的群发了。
大家愿意试试，实际上并不是很难。
9、数据同步和集群的处理的问题
当我们的一台databaseserver不堪重负的时候，这个时候我们就需要做基于数据库的负载和集群了。
而这个时候可能是最让人困扰的的问题了，数据基于网络传输根据数据库的设计的不同，数据延迟是很可怕的问题，也是不可避免的问题，这样的话，我们就需要通过另外的手段来保证在这延迟的几秒或者更长的几分钟时间内，实现有效的交互。
比如数据散列，分割，内容处理等等问题。
10、数据共享的渠道以及OPENAPI趋势
Openapi已经成为一个不可避免的趋势，从google，facebook，myspace到海内校内，都在考虑这个问题，它可以更有效的留住用户并激发用户的更多的兴趣以及让更多的人帮助你做最有效的开发。
这个时候一个有效的数据共享平台，数据开放平台就成为必不可少的途径了，而在开放的接口的情况保证数据的安全性和性能，又是一个我们必须要认真思考的问题了。
Dreamweaver入门
了解 Dreamweaver 站点
在 Dreamweaver 中，"站点"一词既表示 Web 站点，又表示属于 Web 站点的文档的本地存储位置。
在开始构建 Web 站点之前，您需要建立站点文档的本地存储位置。
Dreamweaver 站点可组织与 Web 站点相关的所有文档，跟踪和维护链接，管理文件，共享文件以及将站点文件传输到 Web 服务器。
注意
Dreamweaver 站点最多由三部分组成，具体取决于您的计算机环境和所开发的 Web 站点的类型：
本地文件夹是您的工作目录。
Dreamweaver 将此文件夹称为本地站点。
本地文件夹通常是硬盘上的一个文件夹。
远程文件夹是存储文件的位置，这些文件用于测试、生产、协作和发布等，具体取决于您的环境。
Dreamweaver 将此文件夹称为远程站点。
远程文件夹是运行 Web 服务器的计算机上的某个文件夹。
运行 Web 服务器的计算机通常是（但不总是）使您的站点可在 Web 上公开访问的计算机。
动态页文件夹（"测试服务器"文件夹）是 Dreamweaver 用于处理动态页的文件夹。
此文件夹与远程文件夹通常是同一文件夹。
除非您在开发 Web 应用程序，否则无需考虑此文件夹。
有关"测试服务器"文件夹的更多信息，请参见《使用 Dreamweaver》中的指定可在哪里处理动态页。
可以使用"站点定义向导"设置 Dreamweaver 站点，该向导会引领您完成设置过程。
或者，也可以使用"站点定义"的"高级"设置，根据需要分别设置本地文件夹、远程文件夹和测试文件夹。
在本教程中，您将使用"站点定义"的"高级"设置来设置项目文件的本地文件夹。
在本书后面的部分，您将学习如何设置远程文件夹，以便将页面发布到 Web 服务器，从而提供给公众访问。
有关如何使用"站点定义向导"来设置 Dreamweaver 站点的更多信息，请参见《使用 Dreamweaver》中的设置新的 Dreamweaver 站点。
有关如何设置远程站点的更多信息，请参见教程：发布站点。
有关 Dreamweaver 站点的更多一般信息，请参见《使用 Dreamweaver》中的"设置 Dreamweaver 站点"。
检查设计草样
通常，创建 Web 站点并不是以打开 Dreamweaver 并立即对页面进行布局开始的。
创建 Web 站点的初始工作从纸张或图形编辑应用程序（如 Macromedia Fireworks）开始。
图形设计人员通常会画出 Web 站点综合图形的草图（也称为"草样"），以便向客户展示并确保站点的初始构思能让客户满意。
设计草样由客户要求其 Web 站点具有的任意数目的页面元素组成。
例如，客户可能会提出："页面顶端要有徽标，要有能链接到其它页面的导航功能，有用于联机存储的部分和可以插入视频剪辑的位置。"
根据这些讨论，设计人员开始对站点布局进行规划，并制作满足客户要求的示例页面草图。
本教程向您提供为 Cafe Townsend（一个需要制作 Web 站点的虚构餐馆）设计的、完整的和符合要求的设计草样。
作为 Web 设计人员，您需要对草样进行转换，使之最终形成可以使用的 Web 页面（通常需要其他图形设计人员与 Flash 开发人员的帮助）。
您可以看到，图形设计人员已经向您提供了 Web 页面设计草样，其中包括一些内容区域和图形方案。
在下面的部分，您将使用 Dreamweaver 展示此设计。
您也可以打开原始草样文件以便在计算机屏幕上查看该设计草样。
可以在 cafe_townsend 文件夹（在教程：设置站点和项目文件中已将该文件夹复制到了硬盘上）的 fireworks_assets 文件夹中找到设计草样 homepage-mockup.jpg。
在创建页面时，还可以打印草样以便随时查看。
创建并保存新页面
建立站点并检查设计草样后，您就可以开始创建 Web 页面了。
首先您将创建一个新页面，并将它保存到您的 Web 站点的本地根文件夹 cafe_townsend 中。
该页面最终将成为虚构餐馆 Cafe Townsend 的主页。
如果您尚未创建本地根文件夹 cafe_townsend，则必须先完成创建，然后再继续。
有关说明，请参见教程：设置站点和项目文件
1.在 Dreamweaver 中，选择"文件">"新建"。
2.在"新建文档"对话框的"常规"选项卡上，从"类别"列表中选择"基本页"，从"基本页"列表中选择"HTML"，然后单击"创建"。
3.选择"文件">"另存为"。
4.在"另存为"对话框中，浏览至定义为站点的本地根文件夹的 cafe_townsend 文件夹并打开该文件夹。
在教程：设置站点和项目文件中，您在名为 local_sites 的文件夹中创建了此文件夹。
5.在"文件名"文本框中输入 index.html，然后单击"保存"。
文件名即出现在应用程序窗口顶部的标题栏中。
6.在新文档顶部的"文档标题"文本框中，键入 Cafe Townsend。
这就是页面的标题（与文件名不同）。
站点访问者在 Web 浏览器中查看页面时将在浏览器窗口的标题栏中看到此标题。
7.选择"文件">"保存"来保存该页
向页面添加颜色
现在，您将通过设置某些表格单元格以及页面背景的颜色，向页面添加更多颜色。
1.在上述包含三列的表格的第一个单元格内单击一次。
2.单击标签选择器中的 <td> 标签（单元格标签）以选择该单元格。
3.在"属性"检查器（"窗口">"属性"）中，在"背景颜色"文本框内单击一次。
"背景颜色"文本框位于"背景颜色"(Bg) 颜色框旁。
注意
4.在"背景颜色"文本框中，输入十六进制值 #993300，然后按 Enter 键 (Windows) 或 Return 键 (Macintosh)。
表格单元格的颜色即变为红棕色。
5.在上述包含三列的表格的第二个单元格内单击一次。
6.单击标签选择器中的 <td> 标签（单元格标签）以选择该单元格。
7.在"属性"检查器中，在"背景颜色"文本框内单击一次，输入十六进制值 #F7EEDF，然后按 Enter 键 (Windows) 或 Return 键 (Macintosh)。
表格单元格的颜色即变为浅棕色。
8.重复第 5－7 步，将第三个表格单元格的颜色也更改为浅棕色。
9.设置完这三个单元格的颜色后，单击一次表格的外部，取消选择该表格。
接下来，您将通过修改页面属性来更改整个页面的背景颜色。
通过"页面属性"对话框可以设置一些页面属性，包括页面字体的大小和颜色、已访问链接的颜色以及页面边距等。
1.选择"修改">"页面属性"。
2.在"页面属性"对话框的"外观"类别中，单击"背景颜色"颜色框，然后从颜色选择器中选择黑色 (#000000)。
关于…
网页安全色是指使用 256 色模式时，无论在 Windows 还是在 Macintosh 系统中，在 Netscape Navigator 和 Microsoft Internet Explorer 中都显示相同的颜色。
有 216 种常见颜色，而且任何结合了 00、33、66、99、CC 或 FF 对（RGB 值分别为 0、51、102、153、204 和 255）的十六进制值都代表网页安全色。
在 Dreamweaver 中，可以通过在相应的文本框中输入十六进制值或从颜色选择器中选择颜色来选择颜色。
颜色选择器使用 216 色 Web 安全的调色板；从此调色板选择颜色即显示颜色的十六进制值。
若要使用颜色选择器，只需单击颜色框并使用滴管选择颜色。
您还可以使用颜色选择器匹配颜色。
例如，如果页面上的某一图像包含某种蓝色阴影，并且您希望表格单元格的背景颜色与之匹配，那么可以选择该表格单元格，单击颜色框打开颜色选择器，将滴管移动到图像的蓝色阴影上，并单击鼠标按钮。
颜色选择器将使用与通过滴管单击的颜色最接近的匹配颜色来填充您选择的区域。
如果您通过这种方法选择颜色，颜色选择器为您选择的颜色可能不是网页安全色。
3.单击"确定"。
页面的背景即变为黑色。
4.保存您的工作。
您的页面布局现已完成。
该布局包含一些表格，用于放置各种资源，如图像、文本和 Flash 视频 (FLV) 文件。
在下一教程中，即教程：向页面添加内容中，您将学习如何使用 Dreamweaver 提供的各种插入功能向页面添加资源。
查找文件
在本教程中，您将首先从在教程：向页面添加内容中添加了内容的 Cafe Townsend 索引页开始。
如果您还没有完成该教程，则在继续之前，可以完成该教程，也可以打开该教程的完成版本，从完成版本开始。
该教程的完成版本 add_content.html 位于 cafe_townsend 文件夹的 completed_files/dreamweaver 文件夹中，在教程：设置站点和项目文件中您已将 cafe_townsend 文件夹复制到了硬盘上。
注意
在浏览器中预览页面
"设计"视图为您提供了页面在 Web 上显示时的大致外观，但是要查看确切的最终结果，则必须在浏览器中预览页面。
虽然浏览器通常会生成相同的结果，但是每个浏览器版本显示 HTML 页面的方式可能会不同。
Dreamweaver 试图生成在各种浏览器中看起来尽可能相似的 HTML；但有时候差别难以避免。
因此，在浏览器中预览您的工作是使您了解在发布页面后站点访问者将看到的外观的唯一方式。
1.请确保 index.html 文件在文档窗口中打开。
2.按 F12 键 (Windows) 或 Option+F12 组合键 (Macintosh)。
您的主浏览器启动（如果尚未运行）并显示索引页面。
设置导航条文本的格式
接下来，您将使用 CSS 将样式应用到导航条的链接文本。
许多 Web 页面使用内含文本的彩色矩形图像来创建导航条。
但是，如果使用 CSS，您所需要设置的只是链接文本和一些格式。
通过使用 display: block 属性并设置块的宽度，您可以有效地创建矩形，而不需要另外使用图像。
创建新的 CSS 规则
在本节中，您将使用"CSS 样式"面板创建自定义的 CSS 规则或类样式。
类样式使您可以设置任何范围或文本块的样式属性，并可以应用到任何 HTML 标签。
有关不同类型的 CSS 规则的更多信息，请参见了解 CSS。
1.在"CSS 样式"面板中，单击面板右下角的"新建 CSS 规则"。
2.在"新建 CSS 规则"对话框中，从"选择器类型"选项中选择"类"。
该选项应该是默认选中的。
3.在"名称"文本框中输入 .bold。
确保在单词"bold"前键入句点 (.)。
所有类样式必须以句点开头
4.在"定义在"弹出式菜单中，选择 cafe_townsend.css。
该文件应该是默认选中的。
5.单击"确定"。
出现"CSS 规则定义"对话框，表示您正在 cafe_townsend.css 文件中创建一个称为 .bold 的类样式。
6.在"CSS 规则定义"对话框中，执行下面的操作： 
在"字体"文本框中，输入 Verdana, sans-serif。
在"大小"文本框中，输入 11，并在紧靠其右的弹出式菜单中选择像素。
在"行高"文本框中，输入 18，并在紧靠其右的弹出式菜单中选择像素。
从"粗细"弹出式菜单中选择"粗体"。
在"颜色"文本框中，输入 #990000。
提示
若要显示该指南，请选择"帮助">"参考"，然后从"参考"面板的弹出式菜单中选择"O'Reilly CSS 参考"。
1.单击"确定"。
2.单击"CSS 样式"面板顶部的"所有"按钮。
3.若未展开 cafe_townsend.css 类别，则单击该类别旁边的加号 (+) 按钮。
您可以看到，Dreamweaver 已将 .bold 类样式添加到在外部样式表中定义的规则列表中。
如果您在"所有规则"窗格中单击 .bold 规则，则该规则的属性将出现在"属性"窗格中。
新规则还出现在"属性"检查器的"样式"弹出式菜单中。
注意
如果预览未显示出来，或者如果它未显示在您预期的浏览器中，请切换回 Dreamweaver（如果需要）并选择"文件">"在浏览器中预览">"编辑浏览器列表"。
当"在浏览器中预览的"首选参数"对话框出现时，将正确的浏览器添加到列表中。
有关更多信息，请单击"首选参数"对话框中的"帮助"按钮。
3.（可选）切换回 Dreamweaver 以执行任何必要的更改。
然后保存您的工作并再次按 F12 键以确保您的更改生效。
您现在已经有了一个内容丰富的 Web 页面。
下一步是设置某些内容的格式以使其更加吸引人。
在下一教程中，您将学习如何使用 CSS 为添加的文本设置格式。
了解远程站点
创建了 Web 站点后，下一步就是通过将文件上传到远程文件夹来发布该站点。
远程文件夹是存储文件的位置，这些文件用于测试、生产、协作和发布，具体取决于您的环境。
Dreamweaver 将此文件夹称为远程站点。
在继续之前，您必须能够访问远程 Web 服务器（例如您的 ISP 的服务器、您的客户所拥有的服务器、公司中的 Intranet 服务器，或者 Windows 计算机上的 Internet 信息服务 (IIS) 服务器）。
如果您尚不具有对这样一个服务器的访问权，请与您的 ISP、客户或系统管理员联系。
您也可以在本地计算机上运行一个 Web 服务器，如 IIS (Windows) 或 Apache (Macintosh)。
有关在本地计算机上设置 Web 服务器的更多信息，请参见安装 Web 服务器。
如果远程根文件夹为空，则本教程中所描述的过程效果最佳。
如果您的远程站点已经包含文件，则在远程站点（在服务器上）中创建一个空文件夹，然后将该空文件夹用作您的远程根文件夹。
继续操作之前，您还需要定义一个本地站点。
有关更多信息，请参见教程：设置站点和项目文件。
有关 Dreamweaver 站点的更多信息，请参见《使用 Dreamweaver》中的设置 Dreamweaver 站点。
上传本地文件
在设置了本地文件夹和远程文件夹之后，可以将文件从本地文件夹上传到 Web 服务器。
要使公众可以访问您的网页，必须将它们上传到 Web 服务器，即使 Web 服务器运行在您的本地计算机上也必须进行上传。
1.在"文件"面板（"窗口">"文件"）中，选择站点的本地根文件夹 (cafe_townsend)。
2.单击"文件"面板工具栏上的"上传文件"蓝色箭头图标。
3.当 Dreamweaver 询问您是否要上传整个站点时，单击"确定"。
Dreamweaver 将所有文件复制到您在定义远程文件夹中定义的远程文件夹。
此操作可能需要一些时间，因为 Dreamweaver 必须上传本站点中的所有文件。
4.在浏览器中打开您的远程站点以确保正确上传了所有文件。
教程：使用代码
当您向 Web 页面中添加文本、图像和其它内容时，Dreamweaver 8 将生成 HTML 代码。
本教程介绍如何使用"代码"视图显示文档的基础代码，以及如何手动添加和编辑代码。
如果您已经设置了站点并完成了前面的教程，则可以继续使用同一 index.html 文件。
如果您已经完成了前面的教程，则仍可以完成本教程。
首先，按照教程：设置站点和项目文件中的说明设置站点。
然后，使用 cafe_townsend/completed_files/dreamweaver 文件夹中的 index_code.html 文件完成本教程。
index_code.html 是教程：使用 CSS 设置页面格式中已完成的 index.html 文件的重复副本。
注意
在本教程中，您将完成以下任务：
查看代码
切换到编码工作区（仅限 Windows）
使用标签选择器添加标签
编辑标签
查找与标签有关的信息
使用代码提示添加图像
检查您的更改
打印您的代码
将 HTML 页面转换成 XSLT 页面
可以先将 Cafe Townsend 的现有特价页面（HTML 页面）转换为可以显示 XML 数据的 XSLT 页面。
1.在"文件"面板中（"窗口">"文件"），查找 xml_menu.html，然后双击该文件打开它。
xml_menu.html 文件位于 cafe_townsend 根文件夹内的 xml 文件夹中。
有关更多信息，请参见查找文件。
2.选择"文件">"转换">"XSLT 1.0"。
Dreamweaver 将在"文档"窗口中打开 xml_menu 页面的副本。
新页面是以 .xsl 扩展名保存的 XSL 样式表。
3.单击 xml_menu.html 页面并关闭它，以便"文档"窗口中仅显示新的 xml_menu.xsl 页面。
使用 CSS 对页进行布局
在 Macromedia Dreamweaver 8 中，可以使用 CSS 样式对页面进行布局。
可以手动插入 div 标签并对其应用 CSS 定位样式，也可以使用 Dreamweaver 层来创建布局。
Dreamweaver 中的层是被分配了绝对位置的 HTML 页面元素 － 具体地说，是 div 标签或任何其他标签。
注意
提示
从"新建文档"对话框的"页面设计 (CSS)"类别中选择一个文件（请参见创建基于 Dreamweaver 设计文件的文档）。
无论使用 CSS、表格还是框架对页面进行布局，Dreamweaver 都用标尺和网格来作为布局中的可视化指导。
Dreamweaver 还提供跟踪图像功能，可以使用该功能来重新创建已经使用图形应用程序创建的页面设计。
注意
使用 JavaScript 行为
Macromedia Dreamweaver 8 行为将 JavaScript 代码放置在文档中，以允许访问者与 Web 页进行交互，从而以多种方式更改页面或引起某些任务的执行。
行为是事件和由该事件触发的动作的组合。
在"行为"面板中，您可以先指定一个动作，然后指定触发该动作的事件，从而将行为添加到页面中。
注意
实际上，事件是浏览器生成的消息，指示该页的访问者执行了某种操作。
例如，当访问者将鼠标指针移动到某个链接上时，浏览器为该链接生成一个 onMouseOver 事件；然后浏览器查看是否存在当为该链接生成该事件时浏览器应该调用的 JavaScript 代码（这些代码是在被查看的页中指定的）。
不同的页元素定义了不同的事件；例如，在大多数浏览器中，onMouseOver 和 onClick 是与链接关联的事件，而 onLoad 是与图像和文档的 body 部分关联的事件。
动作是由预先编写的 JavaScript 代码组成的，这些代码执行特定的任务，例如打开浏览器窗口、显示或隐藏层、播放声音或停止 Macromedia Shockwave 影片。
随 Dreamweaver 提供的动作是由 Dreamweaver 工程师精心编写的，提供了最大的跨浏览器兼容性。
在将行为附加到页元素之后，只要对该元素发生了您所指定的事件，浏览器就会调用与该事件关联的动作（JavaScript 代码）。
（可以用来触发给定动作的事件随浏览器的不同而有所不同。）
例如，如果将"弹出消息"动作附加到某个链接并指定它将由 onMouseOver 事件触发，那么只要某人在浏览器中用鼠标指针指向该链接，就将在对话框中弹出您的消息。
单个事件可以触发多个不同的动作，您可以指定这些动作发生的顺序。
Dreamweaver 提供大约二十多个行为动作；您可以在 Macromedia Exchange Web 站点以及第三方开发人员站点上找到更多的动作。
（请参见下载并安装第三方行为。）
如果精通 JavaScript，您可以编写自己的行为动作。
有关编写行为动作的更多信息，请参见"扩展 Dreamweaver"（"帮助">"扩展 Dreamweaver"）。
注意
从浏览器的角度看，动作与其它任何一段 JavaScript 代码完全相同。
下载并安装第三方行为
Dreamweaver 最有用的功能之一就是它的扩展性，即它为精通 JavaScript 的用户提供了编写 JavaScript 代码的机会，使他们可以通过代码扩展 Dreamweaver 的功能。
在这些用户中，很多人会选择将他们的扩展提交到 Macromedia Exchange for Dreamweaver Web 站点 (www.macromedia.com/go/dreamweaver_exchange_cn) 与其他用户共享。
若要从 Macromedia Exchange Web 站点下载并安装新行为，请执行以下操作：
1.打开"行为"面板并从"动作"(+) 弹出式菜单中选择"获取更多行为"。
您的主浏览器打开，出现 Exchange 站点。
（您必须连接到 Web 才能下载行为。）
2.浏览或搜索扩展包。
3.下载并安装所需的扩展包。
有关更多信息，请参见添加功能扩展 Dreamweaver。
连接到数据库
当您在 Dreamweaver 中开发 ColdFusion Web 应用程序时，通过选择在 Dreamweaver 或"ColdFusion 管理员"（服务器的管理控制台）中定义的 ColdFusion 数据源，就可以连接到数据库。
在连接到数据库之前，必须先确保 Dreamweaver 知道去何处查找 ColdFusion 数据源。
为了在设计时检索 ColdFusion 数据源，Dreamweaver 会将脚本放在运行 ColdFusion 的计算机上的一个文件夹中。
您必须在"站点定义"对话框的"测试服务器"类别中指定该文件夹。
有关更多信息，请参见指定可在哪里处理动态页。
接着，您必须在 Dreamweaver 或"ColdFusion 管理员"中创建 ColdFusion 数据源（如果它尚不存在）。
有关更多信息，请参见创建或修改 ColdFusion 数据源。
当创建 ColdFusion 数据源后，您可以在 Dreamweaver 中使用它来连接到数据库。
有关更多信息，请参见在 Dreamweaver 中连接到数据库。
编辑或删除数据库连接
您可以在"ColdFusion 管理员"中编辑或删除 ColdFusion 数据源。
在 Dreamweaver 的"数据库"面板（"窗口">"数据库"）中，单击面板工具栏上的"修改数据源"图标。
"ColdFusion 管理员"在浏览器中打开。
登录并修改数据源。
有关说明，请参见"使用 ColdFusion"。
若要避免在删除或重命名 ColdFusion 数据源后出错，应在"绑定"面板中双击记录集的名称并选择新的数据源，以更新 Dreamweaver 中每个使用旧数据源的记录集。
ASP 数据库连接
ASP 应用程序必须通过开放式数据库连接 (ODBC) 驱动程序（或对象链接）和嵌入式数据库 (OLE DB) 提供程序连接到数据库。
该驱动程序或提供程序用作解释器，能够使 Web 应用程序与数据库进行通信。
有关数据库驱动程序的作用的更多信息，请参见与数据库进行通信。
下表显示了一些可以与 Microsoft Access、Microsoft SQL Server 和 Oracle 数据库一起使用的驱动程序：
数据库  数据库驱动程序  
您可以使用数据源名称 (DSN) 或连接字符串连接到数据库。
DSN 是单个词的标识符（如 myConnection），它指向数据库并包含连接到该数据库所需的全部信息。
您可以在 Windows 中定义 DSN。
如果您正在通过安装在 Windows 系统上的 ODBC 驱动程序进行连接，则可以使用 DSN。
有关详细指导，请参见创建 DSN 连接。
连接字符串是手动编码的表达式，它标识数据库并列出连接到该数据库所需的信息。
下面是一个示例：
如果您正在通过以下程序之一进行连接，则必须使用连接字符串：
OLE DB 提供程序 
未安装在 Windows 系统上的 ODBC 驱动程序 
有关详细指导，请参见以下节：
创建非 DSN (DSN-less) 连接 
连接到 ISP 上的数据库 注意
连接到数据库
本节描述在 Dreamweaver 中开发 PHP 应用程序时如何连接到数据库。
假定您有一个或多个 MySQL 数据库并已启动 MySQL 服务器。
若要创建到 MySQL 数据库的数据库连接，请执行以下操作：
1.在 Dreamweaver 中打开一个 PHP 页，然后打开"数据库"面板（"窗口">"数据库"）。
2.单击面板上的加号 (+) 按钮并从弹出菜单中选择"MySQL 连接"。
"MySQL 连接"对话框随即出现。
3.完成对话框设置，然后单击"确定"。
有关更多信息，请参见设置"MySQL 连接"对话框选项。
新连接出现在"数据库"面板上。
注意
请考虑升级 MySQL 客户端。
"，请参见 MySQL 错误信息答疑。
权限问题答疑
最常见的问题之一是文件夹或文件权限不足。
如果您的数据库位于 Windows 2000 或 Windows XP 计算机上，并且您在尝试从 Web 浏览器或以"动态数据"模式查看动态页时收到错误信息，则该错误可能是由权限问题引起的。
试图访问数据库的 Windows 帐户没有足够的权限。
如果已针对经过身份验证的访问对该页设置了保护，则该帐户可能是匿名 Windows 帐户（默认情况下为 IUSR_computername）或特定的用户帐户。
您必须更改权限，向 IUSR_computername 帐户提供正确的权限，这样 Web 服务器才能访问该数据库文件。
此外，包含该数据库文件的文件夹还必须设置某些权限才能向该数据库写入。
如果该页打算以匿名方式来访问，则请向 IUSR_computername 帐户提供对该文件夹和数据库文件的完全控制权限，如以下步骤所述。
此外，如果使用 UNC (\\Server\Share) 引用数据库的路径，请确保"共享权限"向 IUSR_computername 帐户提供完全访问权限。
即使共享位于本地 Web 服务器，此步骤仍然适用。
如果从另一个位置复制数据库，它可能不会自动从目标文件夹继承权限。
您可能需要更改数据库的权限。
若要检查或更改数据库文件权限，请执行以下操作 (Windows XP)：
1.确保您在计算机上拥有管理员权限。
2.在 Windows 资源管理器中，找到该数据库文件或包含该数据库的文件夹，右键单击该文件或文件夹，然后选择"属性"。
3.选择"安全"选项卡。
如果是 FAT 文件系统，则该对话框没有"安全"选项卡。
4.如果 IUSR_computername 帐户未在"组或用户名称"列表中列出，请单击"添加"按钮来添加该帐户。
5.在"选择用户或组"对话框中，单击"高级"按钮。
对话框随即更改以显示更多的选项。
6.单击"位置"按钮并选择计算机名称。
7.单击"开始查找"按钮。
出现与该计算机关联的帐户名称的列表。
8.选择 IUSR_computername 帐户并单击"确定"，然后再次单击"确定"以清除该对话框。
9.若要为 IUSR 帐户分配完全权限，请选择"完全控制"复选框，然后单击"确定"。
若要检查或更改数据库文件权限，请执行以下操作 (Windows 2000)：
1.确保您在计算机上拥有管理员权限。
2.在 Windows 资源管理器中，找到该数据库文件或包含该数据库的文件夹，右键单击该文件或文件夹，然后选择"属性"。
3.选择"安全"选项卡。
如果是 FAT 文件系统，则该对话框没有"安全"选项卡。
4.如果"文件权限"对话框中的 Windows 帐户中没有列出 IUSR_computername 帐户，请单击"添加"按钮添加该帐户。
5.在"选择用户、计算机或组"对话框中，从"查看"弹出菜单中选择计算机名称。
出现与该计算机关联的帐户名称的列表。
6.选择 IUSR_computername 帐户，然后单击"添加"。
7.若要给 IUSR 帐户分配完全权限，请从"访问类型"弹出菜单中选择"完全控制"，然后单击"确定"。
对于所添加的安全设置，可以设置权限，以便对包含该数据库的 Web 文件夹关闭读权限。
浏览该文件夹将被拒绝，但 Web 页仍可以访问该数据库。
显示 Web 应用程序开发面板
单击"插入"栏中的"应用程序"选项卡，以显示一组使您能够将动态内容和服务器行为添加到页面中的按钮，如图所示。
显示的按钮的数量和类型取决于在"文档"窗口中打开的文档类型。
"插入"栏中包括可将下列项添加到页面中的按钮：
记录集 
动态文本或表 
向数据库插入记录或更新其中记录的表单 
记录导航条 
如果您切换到"代码"视图（"查看">"代码"），附加的面板可能会显示在各自的"插入"栏类别中，以允许您在页面中插入代码。
例如，如果您在"代码"视图中查看 ColdFusion 页，CFML 面板将在"插入"栏的"CFML"类别中变为可用：
若要知道"插入"栏上每个按钮表示的功能，请将鼠标光标移到图标上。
此时会出现以下工具提示：
如果希望为页面定义动态内容的源，并将该内容添加到页面中，请选择"窗口">"绑定"。
出现"绑定"面板。
有关更多信息，请参见设置"绑定"面板选项。
如果希望向动态页添加服务器端逻辑，请选择"窗口">"服务器行为"。
出现"服务器行为"面板。
服务器行为是在设计时插入到动态页中的指令组，这些指令在运行时于服务器上执行。
有关更多信息，请参见设置"服务器行为"面板选项。
如果希望研究数据库或创建数据库连接，请选择"窗口">"数据库"。
出现"数据库"面板。
有关更多信息，请参见设置"数据库"面板选项。
如果要检查、添加或修改 JavaBean、Macromedia ColdFusion 组件或 Web 服务的代码，请选择"窗口">"组件"。
出现"组件"面板。
注意
另外，文档有可能不支持某些组件。
例如，ColdFusion 文档不支持 JavaBeans。
在一次操作中生成主/详细页（ColdFusion、ASP、JSP、PHP）
开发 Web 应用程序时，使用主/详细页集应用程序对象可以快速建立主/详细页。
应用程序对象可以通过完成一两个对话框来生成一组完整的动态页。
所用方法对于 ColdFusion、ASP、JSP 和 PHP 页完全相同。
有关生成 ASP.NET 主/详细页的信息，请参见生成主/详细页 (ASP.NET)。
若要使用应用程序对象完成主/详细页集，请执行以下操作：
1.在 Dreamweaver 中创建一个空白动态页面，方法是选择"文件">"新建">"动态"，然后选择一个动态页，并单击"创建"。
该页将成为主页。
2.为该页面定义记录集。
您可以在设计时定义记录集（请参见定义记录集），或者由用户在运行时定义记录集（请参见建立搜索/结果页（ColdFusion、ASP、JSP、PHP））。
确保该记录集不仅包含主页所需的所有列，还包含详细页所需的所有列。
通常，主页上的记录集提取数据库表格中的少数几列，而详细页上的记录集提取同一表格中的更多列以提供额外的详细信息。
3.在"设计"视图中打开主页，然后选择"插入">"应用程序对象">"主详细页集"。
随即出现"主详细页集"对话框。
4.完成对话框。
有关更多信息，请参见设置"主详细页集"对话框选项。
5.单击"确定"。
应用程序对象创建一个详细页（如果尚未创建），并且同时向主页和详细页中添加动态内容和服务器行为。
6.自定义主页和详细页的布局以符合需要。
使用 Dreamweaver 页面设计工具可以完全地自定义每个页面的布局。
还可以在"服务器行为"面板中双击服务器行为对其进行编辑。
使用应用程序对象创建主/详细页后，使用"服务器行为"面板（"窗口">"服务器行为"）来修改由应用程序对象插入到页面中的各种构造块。
有关更多信息，请参见编辑页面上的动态内容。
创建到详细页的链接 (ColdFusion)
将动态表格添加到主页后（请参见创建主页 (ColdFusion)），您必须创建打开详细页的链接。
本节介绍如何创建此类链接。
下一节介绍如何修改该链接，使之还能传递用户所选记录的 ID。
详细页将使用此 ID 在数据库中查找请求的记录并显示该记录。
若要创建指向详细页的链接，请执行以下操作：
1.在动态表格的重复行中，选择要用作链接的文本或图像。
下面的示例选择了 {rsLocations.LOCATION_NAME} 占位符。
这些链接将应用于列中的位置名称。
2.在"属性"检查器中，单击"链接"文本框旁边的文件夹图标。
3.浏览找到并选择该详细页。
该详细页随即出现在"属性"检查器的"链接"文本框中。
在动态表格中，所选文本显示为已被链接。
当该页面在服务器上运行时，该链接将应用于表格每一行中的文本。
使用 ASP 命令修改数据库
您可以使用 Dreamweaver 创建在数据库中插入、更新或删除记录的 ASP 命令对象。
命令对象是在数据库上执行某些操作的服务器对象。
您可以向命令对象提供在数据库上执行操作的 SQL 语句。
有关更多信息，请参见 ASP 命令对象。
您还可以向该对象提供执行操作的预存过程。
有关更多信息，请参见运行预存过程 (ASP)。
若要创建使用 SQL 编辑数据库的命令对象，请执行以下操作：
1.在 Dreamweaver 中，打开将运行该命令的 ASP 页。
2.打开"服务器行为"面板（"窗口">"服务器行为"），单击加号 (+) 按钮，然后选择"命令"。
即会出现"命令"对话框。
3.为该命令输入一个名称，选择到包含要编辑记录的数据库的连接，然后选择需要该命令执行的编辑操作（插入、更新或删除）。
Dreamweaver 根据您选择的操作类型为您启动 SQL 语句。
例如，如果选择"插入"，则显示如下对话框：
4.完成 SQL 语句。
有关编写修改数据库的 SQL 语句的信息，请查询 Transact-SQL 手册。
5.使用"变量"区域定义任何 SQL 变量。
例如，下面是包含三个 SQL 变量的插入语句。
这三个变量的值是由传递到页的 URL 参数提供的，如在"变量"区域的"运行时值"列中定义的那样。
在关闭了该对话框之后，Dreamweaver 在您的页中插入 ASP 代码，当在服务器上运行该页时，将创建在数据库中插入、更新或删除记录的命令。
默认情况下，该代码将命令对象的"Prepared"属性设置为 true，这使应用程序服务器在每次运行该命令时都重复使用对象的单个编译的版本。
若要更改此设置，请切换到"代码"视图并将"Prepared"属性更改为 false。
在上面的示例中，下一步您可能要创建一个带有 HTML 表单的页，以便用户可以输入记录数据。
HTML 表单将包含三个文本域（txtCity、txtAddress 和 txtPhone）和一个提交按钮。
该表单将使用 GET 方法并将文本域值提交到包含您的命令的页。
使用 BizTalk Server 管理控制台BizTalk Server 管理控制台是一种 Microsoft 管理控制台 (MMC)，可用于管理和监控 BizTalk Server，以及用于部署和管理 BizTalk Server 应用程序。
BizTalk Server 管理控制台的左侧是控制台树，由表示您可以管理的不同类型项目的文件夹和子文件夹组成。
在控制台树中选择节点后，管理控制台右侧的详细信息窗格将显示项的有关信息。
在控制台树中选择“BizTalk Server 2009 管理”节点可显示起始页，其中包含您可以执行的操作，例如连接到现有的 BizTalk Server 组。
此外，起始页还包括指向 BizTalk Server 文档和在线社区网站的链接。
下图为显示出启动中心页的 BizTalk Server 管理控制台：
BizTalk Server 管理控制台
有关使用管理控制台的键盘快捷键的信息，请参阅管理控制台键盘快捷键。
您可以使用 BizTalk Server 管理控制台管理以下项目：
BizTalk Group
控制台树中的“BizTalk Group”节点包含表示该 BizTalk 组的项目（应用程序、参与方和平台设置）的其他节点。
BizTalk 组是一种组织单位，通常表示企业、部门、中心或需要包含的 BizTalk Server 实现的其他业务单位。
BizTalk 组与 BizTalk 管理数据库具有一对一关系。
有关详细信息，请参阅管理组。
在 BizTalk Server 管理控制台中选择“BizTalk 组”节点后，BizTalk Server 组中心页将显示在详细信息窗格中。
BizTalk Server 组中心页提供 BizTalk Server 系统运行状况的总体概况。
有关详细信息，请参阅使用“组中心”页。
业务流程
业务流程通过使用业务流程设计器进行设计，并部署到 BizTalk 组中，在管理控制台中，此业务流程将显示在该 BizTalk 组下。
有关详细信息，请参阅管理业务流程。
角色链接
角色链接定义消息定义的角色与双向交互中使用的端口类型之间的关系。
有关详细信息，请参阅管理角色链接。
发送端口组
发送端口组是一组指定的发送端口，使用这组发送端口可以在单一配置中将同一条消息发送到多个目标。
有关详细信息，请参阅管理发送端口和发送端口组。
发送端口
发送端口是用于发送消息的 BizTalk 对象。
有关详细信息，请参阅管理发送端口和发送端口组。
接收端口
接收端口是相似接收位置的逻辑分组。
有关详细信息，请参阅管理接收端口。
接收位置
接收位置定义为接收入站文档的特定地址与 BizTalk Server 管道（处理在该地址上接收到的消息）的组合。
有关详细信息，请参阅管理接收位置。
策略
策略是业务规则的版本控制集合。
有关详细信息，请参阅管理策略。
架构
架构是消息的结构。
一个架构可以包含多个子架构。
有关详细信息，请参阅管理架构。
映射
映射是定义一个规范中的记录和字段与另一个规范中的记录和字段之间的对应关系的 XML 文件。
映射包含一个可扩展样式表语言 (XSL) 样式表，BizTalk Server 可使用该样式表执行该映射中所描述的转换。
有关详细信息，请参阅管理映射。
管道
管道是一种软件基础结构，用于定义和链接一个或多个处理阶段，并按指定顺序运行这些阶段以完成特定任务。
管道将处理过程分为多个阶段，阶段是对一类工作的抽象描述。
管道还确定了执行每类工作的顺序。
有关详细信息，请参阅管理管道。
资源
资源可以是脚本、部署的程序集或与应用程序相关联的其他文件。
有关详细信息，请参阅管理资源。
参与方
参与方是位于 BizTalk Server 之外与业务流程进行交互的实体。
与您的组织有业务关系的所有合作伙伴都可视作参与方，而您的组织可能有数千个合作伙伴。
有关详细信息，请参阅管理参与方。
平台设置
“平台设置”节点包含主机、主机实例、MessageBox 数据库和适配器等子节点。
有关详细信息，请参阅管理平台设置。
主机
“主机”节点包含 BizTalk Server 环境中所有的进程内主机和独立主机。
BizTalk 主机是诸如适配器处理程序、接收位置（包括管道）和业务流程等项的逻辑容器。
有关详细信息，请参阅管理 BizTalk 主机和主机实例。
主机实例
“主机实例”节点包含当前 BizTalk Server 组中的所有主机实例。
主机实例是执行应用程序组件的 BizTalk Server 运行时进程。
使用“主机实例”节点，可以创建新的主机实例和刷新主机实例信息。
有关详细信息，请参阅管理 BizTalk 主机和主机实例。
服务器
“服务器”节点列出了加入 BizTalk Server 组的所有服务器。
它们是安装和配置 BizTalk Server 以及运行主机实例的计算机。
通过将服务器与特定主机相关联可以创建主机实例。
有关详细信息，请参阅管理服务器。
MessageBox
“MessageBox”节点包含当前 BizTalk Server 组使用的所有 MessageBox 数据库。
使用“MessageBox”节点，可以创建新的 MessageBox 数据库和刷新 MessageBox 数据库信息。
MessageBox 数据库是在执行协作处理的服务器间实现工作项负载平衡的基础。
工作项在其整个处理过程中可能会多次通过 MessageBox 数据库。
MessageBox 数据库的名称不得超过 100 个字符。
有关详细信息，请参阅管理 MessageBox 数据库。
适配器
“适配器”节点包含为 BizTalk Server 组和关联适配器处理程序配置的所有发送和接收适配器的子节点。
适配器是用于在终结点之间发送和接收消息的消息传送中间件。
有关详细信息，请参阅使用适配器。
管理 BAM
使用业务活动监视 (BAM)，业务用户可以实时查看关键业务绩效指标，这使他们可以更有效地工作。
如何使用跟踪配置文件管理实用程序部署跟踪配置文件业务
经理要求解决方案
开发人员创建一个新的跟踪配置文件或修改现有跟踪配置文件以便更好地管理和监视组织的特定业务流程。
解决方案
开发人员使用跟踪配置文件编辑器 (TPE) 定义业务分析员需要的数据。
在解决方案开发人员创建或修改跟踪配置文件后，管理员使用 bttdeploy.exe 命令行实用程序对其进行部署，以便所做的更改能够生效并收集数据。
解决方案开发人员可以使用 TPE 部署跟踪配置文件。
在部署跟踪配置文件之前，必须部署与跟踪配置文件相关联的程序集。
必须具有 BizTalk 管理员权限才能使用此工具。
管理 BAM 事件总线服务BAM 事件总线服务（也称为跟踪数据解码服务 (TDDS)）处理源数据库中存储的跟踪数据（流），并以便于以后查询的方式对这些数据进行持久化。
BAM 事件总线服务将商业智能数据移到 BAM 主导入数据库中，并将 BizTalk 运行状况监视数据移到 DTA 数据库中。
BAM 事件总线服务作为 BizTalk 服务中的一个子服务运行。
通过收集执行过程中的事件数据，然后将这些数据临时存储在存储应用程序状态的数据库（例如 MessageBox 数据库）中，您可以监视事务性应用程序（如 Microsoft BizTalk Server）的活动。
注意  
避免在同一台计算机上创建多个跟踪不同 BizTalk 组的应用程序实例。
如果同一台计算机中存在多个跟踪不同 BizTalk 组的实例，您将无法在 BizTalk 管理控制台或事件日志中区分哪个事件属于哪个 BizTalk 组，因为所有 BizTalk 组都显示为相同的名称。
BAM 事件总线服务读取并解码事件数据，然后将其存储到 Microsoft SQL Server 数据库中，在该数据库中，您可以轻松查询数据。
BAM 事件总线服务具有以下优点：
事件数据始终与应用程序的状态保持一致，并且不会显示未提交的进度。
对正在运行的应用程序的性能影响最小，因为事件数据在应用程序状态发生改变时只在同一本地事务中保存少量的记录。
用于存放应用程序状态的 SQL Server 存储区得到了进一步的优化，从而提高了执行性能。
数据由 TDDS 进行解码，然后存储在单独的数据库中（即 BAM 主导入数据库或 DTA 数据库）。
生成报表后，将从该数据库查询数据，这些数据确实影响存储应用程序状态的 MessageBox 数据库。
以您可以查询的格式存储事件数据，这项工作不是在应用程序服务器和数据库中完成的。
它是由运行 BAM 事件总线服务和目标 SQL Server 数据库的计算机完成的。
事件数据处理延迟时间很短，这样可使 TDDS 查询处理更快。
BAM 事件总线服务协调其资源，以获得尽可能短的延迟时间。
BAM 事件总线服务器通过使用与中心数据库的连接来协调其资源，该中心数据库包含配置信息。
每个活动的 BAM 事件总线服务会每分钟向中心数据库发送一条消息，该消息包含该时刻 BAM 事件总线服务的状态。
此消息称为心跳信号消息。
每个 BAM 事件总线服务还检查需要完成的新工作。
例如，BAM 事件总线服务将检查没有所有者的会话，如已添加的 MessageBox 数据库。
BAM 事件总线会话是事件数据从源数据库（如 MessageBox）到目标数据库（它包含以可进行查询的格式存储的事件数据）的移动过程。
同一 BAM 事件总线服务可以处理一个或多个会话。
下图显示一组 BAM 事件总线服务器，这些服务器组成了一个 BAM 事件总线服务器池。
更改 BAM 运行时设置通常，需要在安装 Microsoft BizTalk Server 2009 时配置 BAM 运行时组件。
如果要扩展系统或者使用了密码到期策略，则可能需要更改 BAM 运行时设置。
更新 OLAP 和 RTA 连接字符串属性有关更新 OLAP 和实时聚合 (RTA) 连接字符串的信息，请参阅以下介绍如何将 BAM 数据库还原至备选计算机的主题： 
如何更新对 BAM 主导入数据库名称和连接字符串的引用
如何更新对 BAM 分析服务器数据库名称的引用
管理 BAM 动态基础结构业务活动监视 (BAM) 功能使用动态生成的 SQL 和联机分析处理 (OLAP) 基础结构。
管理员可以使用 BAM 管理实用程序部署由业务分析员开发的 BAM 定义工作簿或 XML 文件。
BAM 动态基础结构由 BAM 工作簿视图、BAM 部署、BAM 数据转换服务 (DTS) 包和 BAM 数据库组成。
在配置 BizTalk Server 2009 时，BizTalk Server 会创建以下 BAM 数据库：
BAM 主导入 (BAMPrimaryImport) 数据库
BAM 星型架构 (BAMStarSchema) 数据库（可选）
BAM 分析 (BAMAnalysis) 数据库（可选）
BAM 存档 (BAMArchive) 数据库
有关 BAM 数据库的信息，请参阅管理 BAM 数据库。
管理员可以对 BAM 基础结构执行以下管理任务，以下部分将对这些任务进行说明：
部署和取消部署 BAM 定义和视图
管理用户对 BAM 视图的访问
运行 BAM DTS 包
备份 BAM 数据库 
管理 BAM 门户管理员可以通过运行 BizTalk Server 安装来设置 BAM 门户。
使用 BizTalk Server 配置工具可以指定是否启用 BAM，还可以指定 Web Services 帐户、可查看门户的 Windows 组以及门户的宿主网站。
如果设置 BAM 门户后有必要更新 BAM 门户配置，可以使用配置工具更新配置设置，例如，Portal Users 组、应用程序池帐户和管理 Web Services 用户。
有关安装 BAM 门户的详细信息，请参阅在多计算机环境中安装和配置 BizTalk Server 2009 （页面可能为英文）中的“在多服务器环境中安装 BAM”。
有关配置 BAM 门户的详细信息，请参阅使用配置管理器配置 BAM 门户。
BAM 门户有许多可自定义的设置，这些设置可通过修改 webconfig.xml 文件来访问。
这些设置控制 BAM 门户的性能和操作。
本部分中的剩余内容介绍如何自定义 BAM 门户配置。
NIB：使用 MOM 处理 BAM 升级本主题最后更新日期： 2007 年 12 月 5 日
您可以使用 Microsoft Operations Manager (MOM) 来接收业务分析员通过 BAM 门户提交的帮助请求。
业务分析员在 BAM 门户中查看活动实例时，不管该实例是处于活动状态，还是已经完成，他们均可单击右下角的“帮助”按钮，来请求对该活动实例进行调查。
单击“帮助”按钮后，将会打开一个对话框，用户需要在其中填写“主题”和“问题说明”的相关信息。
用户填写完所需信息后，单击“发送报告”按钮即可发送请求。
此时，BAM Web Wervices 将会在本地计算机的事件日志中记录该请求。
BAM Web Services 还会在该事件条目中另外添加以下信息：
BizTalk 服务实例 ID
消息 ID
管理数据库服务器
管理数据库名称
MOM 代理提取该事件条目并将其传输给 MOM 服务器，然后 MOM 服务器的操作员控制台上将会显示警报。
该警报包含有关该帮助请求的所有相关信息。
通过从操作员控制台直接打开 BizTalk Server 管理控制台来查看此活动实例，技术人员就可帮助调查相关问题。
有关 MOM 的详细信息，请参阅 http://go.microsoft.com/fwlink/linkid=67434。
管理员的 BAM 任务本主题描述 BAM 管理员在管理 BAM 基础结构时需要执行的典型任务。
配置 BAM 
使用 BizTalk Server 配置向导进行 BAM 的初始配置。
使用该配置向导，管理员可以执行以下操作：
启用业务活动监视工具
为 BAM 聚合启用 SQL Server Analysis Services
指定 BAM 工具使用的服务器名和数据库
为 BAM 警报启用 SQL Server Notification Services
指定用于运行 BAM 通知服务的帐户
指定用于发送 BAM 警报的 SMTP 服务器
指定用于存储 BAM 警报的文件位置
指定 BAM 警报数据库所在的 SQL 服务器的名称
指定警报数据库名称的前缀
在计算机上启用 BAM 门户
指定用于运行 BAM 门户的 Web Services 帐户
指定可以访问 BAM 门户的 Windows 组
指定 BAM 门户网站的位置
有关使用该配置向导的详细信息，请参阅以下主题：
使用配置管理器配置 BAM 警报
使用配置管理器配置 BAM 工具
使用配置管理器配置 BAM 门户
分布式 Notification Services
如果将 BAM 配置为在分布式环境中运行，则在处理警报和通知时将具有性能优势。
如果要这样配置，则 Notification Services 的提供者、生成者和分发者角色将位于不同的计算机上，因此您必须在多计算机环境中安装 Notification Services。
配置分布式 Notification Services 
1.安装 SQL Server 2005 Notification Services。
有关分布式 Notification Services 的详细信息，请参阅 SQL Server 2005 Notification Services 文档，您可以在 http://go.microsoft.com/fwlink/LinkId=68095 找到该文档。
注意  
Notification Services 不包括在 SQL Server 2008 中。
如果您使用的是 SQL Server 2008，则当通过在安装向导的“组件安装”页上在“其他软件”下选择“BAM 警报提供程序(用于 SQL Notification Services)”选项安装 BizTalk Server 2009 时，将安装 SQL Server Notification Services。
2.若要在分布式环境中的每台计算机上创建 BAM 通知服务，请从命令提示符处运行 C:\Program Files\Microsoft SQL Server\90\NotificationServices\9.0.242\bin\nscontrol register -name bamalerts -server <服务器名> -serviceusername <警报用户帐户> -servicepassword <密码>。
3.编辑每台计算机上为分布式 Notification Services 配置的 BAM 基础结构配置文件。
若要获取配置文件，请使用 bm.exe get-config -FileName:<输出文件> 命令。
4.编辑配置文件以引用分布式 Notification Services 环境中的服务器：
复制代码 <Property Name="GeneratorServerName">PFIDWYUK</Property>
<Property Name="ProviderServerName">PFIDWYUK</Property>
<Property Name="DistributorServerName">PFIDWYUK</Property>5.
使用 bm.exe update-config -FileName:<配置文件>，更新 BAM 配置。
6.重新启动分布式环境中所有计算机上的 Notification Services。
有关在多计算机环境中安装 BAM 的详细信息，请参阅“Installing and Configuring BizTalk Server 2009 in a Multiple-Computer Environment”（在多计算机环境中安装和配置 BizTalk Server 2009），您可以在 http://go.microsoft.com/fwlink/LinkId=128383 找到该文章。
移动 BAM 主导入数据库
有时，可能必须移动 BAM 主导入数据库，例如，在升级硬件或扩展操作时。
若要移动该数据库，需要执行备份和还原操作。
有关此过程的详细信息，请参阅备份和还原 BAM。
处理 BAM 定义
管理员需要经常处理 BAM 定义。
用于处理 BAM 定义的主要工具是 BAM 管理实用程序。
使用此实用程序可以执行以下任务：
更改活动
可以使用 BAM 管理实用程序的 deploy-all、update-all、remove-activity 和 set-actvitywindow 命令来更改已部署的活动。
将索引应用于活动表以提高性能。
可以使用 create-index 和 delete-index 命令来修改活动上的索引。
设置视图的安全性。
可以使用 add-account 和 remove-account 命令，授予用户访问视图的权限。
配置分布式活动导航。
可以使用 enable-reference 和 disable-reference 命令来配置分布式活动导航。
有关分布式活动导航的详细信息，请参阅管理远程活动的分布式导航。
审核更改
可以使用 get-changes 命令列出 BAM 动态基础结构的更改。
有关 BAM 管理实用程序中所有可用命令的说明，请参阅 BAM 管理实用程序。
有关使用 BAM 管理实用程序处理 BAM 定义的示例，请参阅管理 BAM 动态基础结构。
将多个 BizTalk 组配置为引用单个 BAM 数据库 
在配置 BAM 以使用新的或现有 BizTalk Server 组时，可以将该组配置为使用另一个 BizTalk Server 组已在使用的 BAM 数据库。
若要以此种方式配置 BAM，则必须执行以下任务：
使用 BizTalk Server 配置向导获取现有 BAM 主导入数据库的配置信息。
这包括服务器和数据库的名称。
请注意复选框的状态。
确保获取 BAM 工具和 BAM 警报页的配置信息。
为新组配置 BAM，然后输入与已为目标 PIT 配置的信息完全相同的信息。
为新组输入配置信息时，将使用从现有组收集的所有信息来配置该新组，唯一的不同是必须将 BAM 警报用户保留为空。
备份和还原 BAM 
管理员应当为灾难恢复情况做好准备。
您应当备份 BAM 分析数据库、跟踪分析数据库、BAM 星型架构数据库、BAM 存档数据库和 BAM 主导入数据库，以便在必须还原它们时提供所需文件。
有关备份和还原 BAM 数据库的信息，请参阅备份和还原 BAM。
处理重命名服务器 
在重命名服务器或在服务器之间移动 BAM 基础结构后，必须通过更新 Excel 工作簿中的 BAM 定义来更新该工作簿。
您需要更新该工作簿的情况包括：
将 BAM 基础结构移动到新数据库的过渡情况。
若要确保 Excel 工作簿仍然能够正常使用，必须重新部署或进行迁移，然后重新更新工作簿。
重命名正运行 BizTalk Server 的计算机的情况。
这不仅需要更新工作簿，还需要更新 DTS 包和 OLAP 数据源。
更新 Excel 工作簿可以采用两种方法：
从新服务器运行以下 BAM 管理器命令：
bm.exe update-livedataworkbook -Name:<要更新的实时数据工作簿.xls>
注意  
也可以指定新的服务器名和/或 BAM 主导入数据库名：bm.exe update-livedataworkbook -Name:<要更新的实时数据工作簿.xls> [-Server:<服务器>] [-Database:<数据库>]
也可以在 Excel 中更新 Excel 工作簿：
1.打开要更新的工作簿。
2.在“BAM”菜单上，单击“BAM 数据库连接”。
3.输入新的服务器名和 BAM 主导入数据库名。
管理警报 
管理员可以以几种方式管理警报：
您可以使用 BAM 管理实用程序来部署和删除警报。
还可以使用该实用程序来添加和删除订阅，以及启用和禁用警报。
有关使用 BAM 管理实用程序的详细信息，请参阅 BAM 管理实用程序、管理 BAM 安全性和管理 BAM 定义。
您还可以通过 BAM 门户来创建和删除警报。
有关使用 BAM 门户创建警报的信息，请参阅 BAM 门户的活动搜索。
清理 Alerts Chronicle 表
如果配置 BAM 警报，则为创建的每个活动视图都创建一个 SQL 作业。
将使用以下模板命名该作业：
bam_<视图名称>_<活动名称>_DelAlertHistJob
此作业为 Bam_Metadata_AlertChronicle 表中指定的 <活动视图> 的实例警报清理审核数据。
如果您对特定的活动视图定义了实例警报，则每次触发警报时，就会向该表添加一个新行。
您可以手动运行此作业以便清理该表，或者可以根据您的应用程序或环境的需要计划此作业的运行时间。
如何重新生成实时数据工作簿在 BAM 实时数据工作簿丢失或损坏时，可使用 BAM 管理实用程序重新生成工作簿。
此过程在从 BizTalk Server 2004 升级到 BizTalk Server 2009 时也非常有用，这是因为用于 BizTalk Server 2004 的实时数据工作簿与 BizTalk Server 2009 不兼容。
常规步骤如下所示：
使用 BAM 管理实用程序从 BAM 数据库中检索 BAM 定义。
重新创建数据透视表。
由于 get-defxml 命令完成的 XML 检索仅包含活动和视图，因此必须使用用于 Excel 的 BAM 加载项重新创建数据透视表。
重命名数据透视表。
如果要从 BizTalk Server 2004 升级到 BizTalk Server 2009，则必须执行这一步骤。
这是因为在 BizTalk Server 2004 中，BAM 存储了两组 BAM 工作簿名称（显示名称和内部名称），所以必须这样做。
在检索 BAM 定义时，XML 包含工作簿的内部名称。
必须重命名数据透视表，以确保实时数据工作簿可正确地连接到数据库。
使用 BAM 管理实用程序重新生成实时数据工作簿。
检索 BAM 定义 
1.依次单击“开始”、“运行”，键入 cmd，然后单击“确定”。
2.在命令提示符下，导航到以下目录：驱动器:\Program Files\Microsoft BizTalk Server 2009\\Tracking。
3.键入：bm.exe get-defxml -FileName:abc.xml
重新创建数据透视表 
1.单击“开始”，依次指向“所有程序”、Microsoft Office，然后单击 Microsoft Office Excel。
2.单击“加载项”选项卡，然后从“菜单命令”组的 BAM 下拉列表中选择“导入 XML”。
注意  
如果未显示“加载项”选项卡，请按照步骤 1： 将 BAM 加载项添加到 Microsoft Office Excel 中中的说明添加 BAM 加载项。
3.定位到 驱动器:\Program Files\Microsoft BizTalk Server 2009\\Tracking 文件夹并选择 abc.xml 文件。
4.根据您的定义重新创建数据透视表。
5.保存工作簿。
为此，请单击“文件”菜单，然后单击“另存为”，并在提示输入文件名时键入 mynewbook.xls。
重命名数据透视表（可选） 
1.使用记事本打开检索 BAM 定义时创建的 abc.xml 文件，方法为依次单击“开始”、“运行”，键入“notepad 驱动器:\Program Files\Microsoft BizTalk Server 2009\\Tracking\abc.xml”，然后单击“确定”。
2.找到 <BAMDefinition>\<Extension>\<OWC>\<PivotTableView>\<PivotTable>\<PivotView>\<Label> 下的 <Caption> 标记。
此标记的内容是某个数据透视表的内部名称。
通过查找下一个 <Caption> 标记，可找到其他数据透视表的内部名称。
打开 mynewbook.xls，然后使用找到的名称来重命名数据透视表。
3.保存已更新的工作簿。
注意  
仅当从 BizTalk Server 2004 升级到 BizTalk Server 2009 时，才须按照此过程操作。
重新生成 BAM 实时数据工作簿 
1.单击“开始”，再单击“运行”，键入“cmd”，然后单击“确定”。
2.在命令提示符下，导航到以下目录：驱动器:\Program Files\Microsoft BizTalk Server 2009\\Tracking。
3.键入：bm.exe regenerate-livedataworkbook -WorkbookName:mynewbook.xls
如何更新实时数据工作簿的连接字符串在将 BAM 主导入数据库移动到其他服务器时，BAM 实时数据工作簿中的连接字符串必须更新为指向新服务器。
可以使用用于 Excel 的 BAM 加载项进行此更新。
更新实时数据工作簿以指向新服务器 
1.单击“开始”，依次指向“程序”、“Microsoft Office”，然后单击“Microsoft Office Excel”。
2.单击“文件”菜单，然后单击“打开”。
3.单击“BAM”菜单，然后单击“BAM 数据库连接”以打开“选择 BAM 数据库”对话框。
4.在“SQL Server”文本框中，键入 BAM 主导入数据库当前所在的 SQL 服务器的名称。
5.从“数据库名称”下拉列表中选择“BAM 主导入数据库”。
6.单击“确定”以关闭该对话框。
7.保存该工作簿。
管理远程活动的分布式导航通过远程活动的分布式导航，业务用户可导航到其他 BAM 数据库上的活动并进行查看。
只要您对 BAM 基础结构进行配置以提供分布式导航功能，业务用户就可通过 BAM 门户访问远程活动。
用户单击活动时，该活动就会在远程 BAM 门户中打开。
此时，用户以一种透明且无缝的方式进入远程 BAM 门户，这样用户就可导航到该活动的活动搜索、聚合和警报管理，好像该活动的数据存储在用户本地一样。
对活动和文档使用分布式导航的原因 
使用分布式导航，组织不必为活动约定单一位置即可保持对部门 BAM 数据库的控制。
此外，还可以在整个环境中分摊活动的系统负载，从而提高 BAM 数据库的性能。
在下图介绍的方案中，分布式导航满足了业务用户轻松访问公司中其他部门管理的活动的需求。
这些部门的管理员负责控制特定于其部门的业务流程。
此方案涉及以下人员：
掌管销售部门的基础结构的管理员。
该管理员全权负责该部门数据的可用性和安全性。
掌管货运部门的基础结构的管理员。
其职责是满足销售的需求。
销售部门的业务用户。
该业务用户可以查看视图中的销售数据的子集，该用户已经被加入到这些视图。
这些视图是由向业务用户授予访问该视图权限的管理员创建的。
该业务用户的主业务视图是其参与的“采购订单”活动。
此用户设置为查看由销售部门管理员所维护的 BAM 门户的主页。
在 BAM 中使用分布式导航
管理员希望其服务器尽可能配置得独立，具体要求如下：
销售部门的管理员不希望货运部门的基础结构出现故障时，销售部门也得停止接收订单，或者业务用户的查询功能受到影响。
货运部门的管理员也不希望销售部门的系统性能不佳时，自己部门受到影响。
分布式导航的目标就是要让业务最终用户能够访问每一个有权访问的视图。
例如，销售数据库中定义了视图 A 和视图 B。
注意  
关于哪类业务用户可以查看指定数据的权限由具有特殊权限的业务用户（如经理或分析员）定义。
BAM 活动的分布式导航还允许用户查看和访问分布式活动的关系。
重要  
为使各计算机上的用户可以看到位于不同 BAM 数据库中的相关活动，您必须在所有 BAM 数据库之间实现双向分布式导航。
配置分布式导航时，如果在两个主导入数据库间启用了单向分布式导航，则导航时，不同的用户将看到不同的结果。
结果可能是，用户将看到不同的活动；当用户深入到应显示相关实例的实例级数据时，却发现为空。
例如，请考虑以下情况：
您的计算机 1 上有一个名为“采购订单”的活动，还有一个名为“SalesManager”的视图。
您的计算机 2 上有一个名为“发货订单”的活动，还有一个名为“SalesManager”的视图
您向计算机 1 上的“采购订单”添加名为“PO_1”的活动 
您向计算机 2 上的“发货订单”添加名为“SO_1”的活动
在计算机 2 上，您向“发货订单”添加“SO_1 对 PurchaseOrder PO_1 活动”这一关系
当用户从计算机 1 深入到 SO_1 活动时，可看到 SO_1 活动
如果用户从计算机 2 深入到 SO_1 时，却看不到 PO_1 活动
要纠正这个问题，需要在计算机 1 上添加关系。
如何在 BAM 中启用跟踪您可以在 BAM 中启用跟踪，以便帮助解决在以下 5 个 BAM 组件中出现的问题：
BAM 管理实用程序
BAM 事件总线
BAM 门户
BAM 警报
BAM WCF 侦听器
您可以通过为 BAM 管理实用程序启用跟踪，获取与部署错误有关的信息。
可以采取两种方式启用跟踪：可以通过特定 BM.exe 命令的命令行启用跟踪，或者可以修改 BAM 管理实用程序配置文件来为所有 BM.exe 命令启用跟踪。
使用命令行
使用 -Trace:on|off 开关激活 BM.exe 命令行跟踪。
使用 Trace 开关将重写配置文件中的设置。
该开关可与所有标准 BM.exe 命令一起使用。
例如：
bm.exe deploy-all -DefinitionFile:PO.xml –Trace:On
使用配置文件
可以通过修改位于 驱动器:\Program Files\Microsoft BizTalk Server 2009\Tracking 文件夹中的 BM.exe.config 配置文件启用跟踪。
该文件所包含的 system.diagnostics 节具有跟踪元素。
删除注释以便启用跟踪。
默认情况下，不启用跟踪。
为 BAM 事件总线启用跟踪可帮助您诊断两类的数据库存储错误：
源于使用跟踪配置文件编辑器时发生的 BizTalk Server 服务事件的存储错误。
在使用缓冲的事件流 API 时生成的存储错误。
若要为 BAM 事件总线启用跟踪，请在 驱动器:\Program Files\Microsoft BizTalk Server 2009\ 文件夹的 BTSNTSvc.exe.config 文件中编辑或添加以下部分：
启用跟踪 
1.编辑 驱动器:\Program Files\Microsoft BizTalk Server 2009\BTSNTSvc.exe.config 文件。
2.找到 <system.diagnostics> 和 </system.diagnostics> 标记。
如果在该文件中不存在这两个标记，则复制上述代码并将代码粘贴到该配置文件中。
3.通过将结束注释分隔符 ('-->') 从 </system.diagnostics> 标记后移到 <system.diagnostics> 标记前，取消注释系统诊断节。
4.保存文件。
为 BAM 门户启用跟踪允许您排除连接问题。
BAM 门户是一种 ASP.NET 应用程序，它采用标准协议进行跟踪。
在 驱动器:\Program Files\Microsoft BizTalk Server 2009\BAMPortal\web.config 文件中，存在可以启用的称为 <trace> 的部分。
1.编辑 驱动器:\Program Files\Microsoft BizTalk Server 2009\BAMPortal\web.config 文件。
2.找到 <system.diagnostics> 和 </system.diagnostics> 标记。
3.通过将结束注释分隔符 ('-->') 从 </system.diagnostics> 标记后移到 <system.diagnostics> 标记前，取消注释系统诊断节。
4.修改 initializeData 属性以便指定将跟踪日志写入的位置。
5.找到 <system.web> 标记。
6.在 system.web 节中，通过将分隔符 ('-->') 从跟踪标记后移到跟踪标记前，定位跟踪标记并取消注释跟踪命令。
7.保存文件。
为 BAM 警报启用跟踪可以帮助您排除警报送达问题。
BAM 警报在 SQL Server 通知服务基础结构的基础上建立。
若要对 BAM 警报启用跟踪，请参阅通知服务疑难解答主题，网址为 http://go.microsoft.com/fwlink/LinkId=79416。
若要启用 BAM 侦听器的端到端跟踪，需要修改应用程序的配置文件：对于 Web 宿主的应用程序将修改 Web.config，对于自宿主的应用程序将修改 Appname.config。
下面的示例说明如何修改该文件：
复制代码 </system.diagnostics>用于 Windows Workflow Foundation 和 Windows Communication Foundation 的 BAM 侦听器将写入名为“Microsoft BizTalk Bam Interceptors”的源中。
注意  
源字符串区分大小写并且必须与所示内容完全一样。
如果您的字符串不同于所示的字符串，您将收不到 BAM 侦听器的跟踪信息。
您通过设置 switchValue 控制跟踪级别。
下表概括列出了可用的跟踪级别。
跟踪级别 说明 
严重
错误
警告
信息
您可以利用此类信息来规划容量和管理性能。
详细
全部
注意  
跟踪可能会对性能有负面影响。
只在执行故障排除活动时启用跟踪。
查看 WCF 跟踪文件
若要分析 WCF 跟踪，可以使用 WCF Service Trace Viewer Tool。
有关 Service Trace Viewer Tool 的详细信息，请参阅 http://go.microsoft.com/fwlink/LinkId=75218。
疑难解答Microsoft BizTalk Server 利用或可能依赖于若干不同的 Microsoft 技术，包括但不限于 Microsoft SQL Server、Microsoft Visual Studio、Microsoft .NET Framework、Internet 信息服务 (IIS)、Microsoft Windows Server 群集、Microsoft 企业单一登录和 Windows SharePoint Services。
由于 BizTalk Server 可用于如此多的其他技术，因此在解决 BizTalk Server 中的问题时，通常会涉及所用底层技术或依赖技术的疑难解答。
本部分提供了有关解决特定 BizTalk Server 问题的信息，以及有关解决 BizTalk Server 依赖软件中可能出现的问题的信息。
BizTalk Server 管理疑难解答本部分集中提供了有关使用 BizTalk Server 管理控制台时遇到的常见问题的信息。
ENTSSO 服务中的延迟将阻止 BizTalk Server 服务启动
问题
重新启动 DTC 未设置为自动启动的计算机将阻止 BizTalk Server 服务启动。
原因
这是因为 ENTSSO 服务启动所需的时间比 BizTalk Server 服务超时持续时间所允许的时间要长。
解决方法
若要解决此问题，请将 DTC 设置为自动启动。
SQL 资源可能会被锁定
问题
可能会出现以下错误：
事务（进程 ID 为 95）在另一个进程所在的锁资源中出现死锁，并已被选为死锁牺牲品。
重新运行该事务。
原因
一个用户执行的管理操作使另一个用户的数据库管理权限被锁定，这种情况很少出现。
解决方法
此问题在不久后会自行修复。
在几分钟后再尝试操作。
SQL 数据库可能会被锁定
问题
用户可能会被锁定在 SQL 数据库之外。
可能会返回许多不同的错误消息。
原因
在某些情况下，一个用户向数据库写入数据确实会将另一个用户锁定在数据库之外。
解决方法
此问题在不久后会自行修复。
在几分钟后再尝试操作。
在包含多个 MessageBox 的环境中终止多个服务实例将因出错而失败
问题
尝试在 BizTalk Server 管理控制台中终止多个服务实例失败，并且显示如下所示的错误：
SQL Server 阻止访问组件“Agent XPs”的过程“sys.xp_sqlagent_enum_jobs”，原因是此组件已作为此服务器安全配置的一部分关闭了。
注意  
这一问题会在多个 MessageBox 环境中出现。
原因
在多个 MessageBox 环境中，如果 SQL 代理作业“Operations_OperateOnInstances_OnMaster_<数据库名>”未在辅助 MessageBox <input type="radio" name="" value="">数据库中运行，则可能会出现这一问题。
必须运行此作业，才能将信息从辅助 MessageBox 数据库传播到主 MessageBox 数据库。
如果未启用此作业或者出现登录故障，则此作业将无法运行。
解决方法
如果您使用 BizTalk 管理控制台同时在多个服务实例中执行操作，并且为 BizTalk Server 环境配置了多个 MessageBox 数据库，请验证是否对所有辅助（非主）MessageBox 数据库启用了名为“Operations_OperateOnInstances_OnMaster_<数据库名称>”的 SQL Server 代理作业。
此外，托管辅助 MessageBox 数据库的 SQL Server 计算机上的 SQL Server 代理服务必须以辅助 MessageBox 数据库的 BTS_SQLAGENT_USER 数据库角色中包含的帐户运行。
注意  
<数据库名> 是 BizTalk MessageBox 数据库实际名称的占位符。
按照以下步骤将 SQL Server 代理服务帐户添加到辅助 MessageBox 数据库的 BTS_SQLAGENT_USER 数据库角色中
在 SQL Server 2005 和 2008 中
1.单击“开始”，依次指向“程序”、Microsoft SQL Server 200x，然后单击 SQL Server Management Studio。
2.出现提示时，请在“服务器类型”中选择“数据库引擎”，然后在“服务器名称”中输入或选择托管辅助 MessageBox 数据库的服务器。
3.依次单击展开“数据库”，单击展开相应的辅助 MessageBox 数据库，然后依次单击展开“安全性”、“角色”和“数据库角色”，然后双击 BTS_SQLAGENT_USER 数据库角色。
4.单击“添加”按钮。
5.单击“浏览”，选择 SQL Server 代理服务帐户作为其成员的组，然后单击“确定”。
注意  
如果 SQL Server 代理服务帐户并非是指定组的成员，则您需要将其添加到该组中。
在 BizTalk 管理控制台的一个实例中应用的更改没有在 BizTalk 管理控制台的其他实例中自动更新。
问题
如果 BizTalk 管理控制台的多个实例同时连接到同一个 BizTalk Server 组，则在 BizTalk 管理控制台的一个实例中所做的更改不会自动反映在 BizTalk 管理控制台的其他实例中。
因此，在尝试修改在 BizTalk 管理控制台的一个实例中显示的项目时，如果该项目的状态与存储在 BizTalk 管理数据库中的实际项目状态不匹配，会导致并发冲突错误。
原因
BizTalk 管理控制台的每个实例维护自己的 BizTalk 组配置缓存，并只在缓存中反映更改。
只有在刷新 BizTalk 管理控制台视图时，缓存才会更新。
解决方法
如果在 BizTalk 管理控制台中报告并发冲突错误，请单击 BizTalk 管理控制台工具栏上的“刷新”按钮，或者按 F5 键，以更新 BizTalk 管理控制台实例的缓存。
尝试通过 BizTalk 管理控制台停止业务流程时，出现无法执行“停止”操作的错误
问题
尝试在 BizTalk 管理控制台中停止业务流程时，生成如下所示的错误消息：
复制代码 Failed to execute action 'Stop'.
如果满足以下条件，就会出现此问题：
BizTalk 管理控制台是打开的。
BizTalk 管理数据库安装在 SQL Server 的群集实例上。
SQL Server 群集实例故障转移。
完成故障转移后，尝试使用 BizTalk 管理控制台停止正在运行的业务流程实例。
原因
BizTalk 管理控制台维护与 BizTalk Server 管理数据库的连接。
与 BizTalk Server 管理数据库的连接在故障转移期间中断时，某些管理任务会返回“无法连接”或“无法执行”错误，直到 BizTalk 管理控制台关闭或重新打开。
解决方法
关闭 BizTalk 管理控制台，然后重新打开。
BizTalk 管理控制台重新打开后，将创建一个到指定的 BizTalk Server 管理数据库的新连接。
以前删除的 Windows 组名没有对 BizTalk Server 数据库的访问权
问题
如果在重新安装 BizTalk Server 时，使用以前删除的 Windows 组名，该 Windows 组将不具有对 BizTalk Server 数据库的访问权。
原因
删除 Windows 组，然后又用同一个名称创建 Windows 组，这样会为该 Windows 组生成一个新的安全标识符 (SID)。
但是，旧的 SID 仍然保留在 SQL Server 的缓存中，因此新的 Windows 组无法登录到 SQL Server。
解决方法
删除 Windows 组时，必须同时删除该 Windows 组的 SQL Server 登录名。
BizTalk 管理员无法启动 BizTalk Server 管理控制台。
问题
如果 BizTalk 管理员（BizTalk 管理员 Windows 组的成员）不是本地计算机上的 Windows Administrators 组成员，则可能无法打开 BizTalk Server 管理控制台。
原因
如果重新安装或重新配置了 BizTalk Server，可能出现此问题。
这是因为 SQL Server 使用了缓存的安全 ID。
解决方法
将 BizTalk 管理员临时添加到本地计算机上的本地 Windows Administrators 组。
成功打开 BizTalk Server 管理控制台后，从本地计算机上的 Windows Administrators 组删除 BizTalk 管理员。
无法在远程计算机上启动主机实例
问题
在远程计算机上创建 BizTalk 主机实例后，在启动 BizTalk 主机实例时可能会看到下面的错误："Failed to start due to logon failure."（由于登录故障，无法启动。）
原因
如果为运行 BizTalk 主机实例时使用的服务帐号输入了无效凭据，或者该服务帐号没有“以服务方式登录”权限，会出现此错误。
解决方法
启动 BizTalk 主机实例之前，为远程计算机中的服务帐户分配“以服务方式登录”权限。
此步骤在本地计算机上是自动进行的，但在远程计算机上必须手动完成。
在 X64 计算机上创建或配置选择了“仅限 32 位”选项的主机实例失败
问题
在 BizTalk Server 管理控制台中，在 X64 计算机上创建选择了“仅限 32 位”选项（默认）的 BizTalk 主机实例可能会失败。
在 BizTalk Server 配置管理器中在 X64 计算机上配置 BizTalk Server 运行时时，在选择了“仅限 32 位”选项的情况下创建进程内或独立的主机实例可能导致服务无法启动。
原因
未知
解决方法
此问题是个临时性问题。
尝试再次创建或配置主机，或者取消选中“仅限 32 位”选项。
主机实例删除操作没有清除注册表信息
问题
如果您不是本地计算机上的管理员，在删除进程内主机或独立主机时，会出现拒绝访问错误消息。
您可以强制删除该主机。
不过，用这种方式删除主机不会清除所有相关的注册表信息。
原因
要删除与主机实例相关的注册表信息，需要管理员权限。
解决方法
在删除主机之前，以本地管理员帐户登录，这样就可以一并删除相关的注册表信息了。
无法删除 MessageBox 数据库
问题
可能无法删除 MessageBox 数据库。
如果删除失败，可能是以下问题之一导致的：
缓存刷新间隔尚未过期。
MessageBox 数据库包含不完整的实例。
如果缓存刷新间隔尚未到期，删除失败时会出现以下错误消息："MessageBox cannot be deleted since there could be remaining work in the MessageBox.Please ensure that there are no more incomplete instances in the MessageBox, and try again."
（MessageBox 无法删除，因为 MessageBox 中可能存在剩余的工作。请确保 MessageBox 中没有不完整的实例，然后重试。）
原因
缓存刷新间隔过期的时间必须介于在 MessageBox 数据库中禁用新消息发布的时间和删除该数据库的时间之间。
默认情况下，缓存刷新间隔为 60 秒。
解决方法
要删除 MessageBox 数据库，必须先禁用该 MessageBox 数据库的新消息发布，然后等到缓存刷新间隔过期，之后才能删除 MessageBox 数据库。
如果 MessageBox 数据库包含不完整的服务实例，则显示以下错误消息："The MessageBox cannot be deleted because it may still contain incomplete instances.Ensure that there are no incomplete instances in the MessageBox, and try again".
（MessageBox 无法删除，因为它可能仍然包含不完整的实例。请确保 MessageBox 中没有不完整的实例，然后重试。）
使用运行状况与活动跟踪可查看 MessageBox 数据库中未完成的服务实例。
有关查看运行状况与活动跟踪中的服务实例状态的信息，请参阅如何搜索跟踪服务实例。
启用 System.Net 日志记录您可以为 BTSNtSvc.exe 服务的 System.Net 和 System.Net.Sockets .NET Framework 命名空间启用日志记录。
这会导致创建一个详细的日志文件，其中包含的信息可以帮助您找出安装 BizTalk Server 时出现的问题。
注意  
这是 Microsoft .NET Framework 的一个功能，也可以 BizTalk Server 2006 或更高版本中使用。
跟踪功能可以通过修改 BTSNtSvc.exe 的应用程序配置文件 BTSNtSvc.exe.config 来启用。
它位于 BizTalk Server 安装路径中；如果将 BizTalk Server 安装到了默认位置，则 BtsNtSvc.exe 将位于 驱动器:\Program Files\Microsoft BizTalk Server 2009\ 目录中。
若要修改 BTSNtSvc.exe.config，请使用记事本或其他常用文本编辑器打开该配置文件，将下面的代码粘贴到 <configuration> 元素中。
复制代码 
日志文件将写入 BtsNtSvc.exe 所在的目录。
如果安装到了默认位置，则日志文件将写入 驱动器:\Program Files\Microsoft BizTalk Server 2009\。
如何在一台机器上使用多个版本IPP
最近在用IPP实现AES的加密模块，为了对比几个版本IPP在加密模块上的性能，要在同一台机器上装几个版本的IPP。
并在运行同一个执行文件的时候链接不同版本的IPP库。
为了实现这种做法，我们需要在编译的时候链接IPP的动态库。
在运行执行文件的时候，修改链接库的目录。
下面举一个例子，系统是linux，Windows应该同理。
假设源代码文件a.cpp,编译生成的执行文件为a_exec,另外IPP有两个版本：ipp版本A，ipp版本B。
1）如果版本A和版本B的大版本号一致，例如都是6.1.***，那么可以不用重新编译
编译的命令为：
g++ -o a_exec a.cpp -I /ipp版本A or B的安装目录/include， ipp_aes.cpp -L /ipp版本A or B的安装目录/sharedlib -lpthread -lippcpem64t -lguide
生成的执行文件 a_exec 在执行的时候可以选择链接版本A的库或是版本B的库。
执行命令为：
# export export LD_LIBRARY_PATH=/ipp版本A/sharedlib
# ./a_exec
结果为使用IPP版本A的结果
# export export LD_LIBRARY_PATH=/ipp版本B/sharedlib
# ./a_exec
结果为使用IPP版本B的结果
2）如果版本A和版本B的大版本号不一样，比如A为6.1.***，B为5.*.**,文件需要分别编译：
使用版本A：
# g++ -o a_exec a.cpp -I /ipp版本A的安装目录/include， ipp_aes.cpp -L /ipp版本A的安装目录/sharedlib -lpthread-lippcpem64t -lguide
# export export LD_LIBRARY_PATH=/ipp版本A/sharedlib
# ./a_exec
使用版本B：
# g++ -o a_exec a.cpp -I /ipp版本B的安装目录/include， ipp_aes.cpp -L /ipp版本B的安装目录/sharedlib -lpthread-lippcpem64t -lguide
# export export LD_LIBRARY_PATH=/ipp版本B/sharedlib
# ./a_exec
这样就可以分别得到使用不同IPP库的性能数据了。
如果要在另外一台机器上运行这个执行文件，只需把执行文件，以及相应IPP版本的动态库拷贝到这台机器上，并在执行前运行：
# export export LD_LIBRARY_PATH=ipp库所在的目录
就可以看到这个执行文件在这台机器上的性能数据了。
P.S. 最新版的IPP性能还真是不错。
P.P.S.希望我也能跟duofeng同学一样把工作里遇到的方法记录下来，哪怕只是很小很小的一点。
P.P.P.S.这次测试的数据以及编写的代码应该会在不久后就可以发布。
展望2010开发技术趋势
作者：Justin James
翻译：PurpleEndurer，2010-01-22第1版
分类：.net，编程，程序设计语言，软件开发，网页开发
回顾2009，展望2010中软件开发产业的重要话题。
.NET 4 和 Visual Studio 2010
2010年的一个大项是.NET 4 和 Visual Studio 2010的发布。
我预期这会比.NET 3.X 和 Visual Studio 2008的发布更具革命性，理由如下：
Visual Studio 2010将完全支持.NET 4，而不像Visual Studio 2008对.NET 3.X的某些特性的支持乏善可呈。
.NET 4 最终使 C# 和 VB.NET 在功能上近乎等价；
新的 C#特性将使其与Office的互动变得更容易；
而VB.NET将具有处理lambdas的能力，这两个方面都是真正重要的能力。
F#将成为.NET生态系统的成熟一员，把函数式编程带给大伙。
ASP.NET MVC作为一个Web平台安装程序，将会是一个有创意的的体验。
云计算
我本人对云计算持怀疑态度，并影响了许多程序设计和开发版的读者。
我们都知道令人担忧的项目可以列出一大堆（其中大部分完全不能缓解）：安全、隐私、全方位集成内部系统时的网络延迟，结合内部制度，“供应商言行一致吗？”，等等。
尽管如此，一些云计算供应商（例如，亚马逊网络服务）已经建立了良好的声誉，并且开发人员看到在许多情况下，云计算给人以轻视潜在或实际风险的感觉。
我期待能在2010年里看到更多的开发者使用云计算。
尽管你可能还不需要使用它，但也应该了解一下，这样当你的老板问到时，你可以表现得像一个天才。
Ruby, Scala, Groovy, Python, 和其它程序设计语言
在2009年里，一大堆非主流语言的自身建设好于利基企业（Niche Player）。
许多公司看到的不仅是这些语言的价值主张（Value proposition），而且风险也没有一两年前所认为的那样糟糕。
虽然仍可能很难找到一个全职工作，但有很多W2雇员。
这儿有许多可供顾问谋生或开发者用于项目的空间。
这是一个好消息，我希望看到这些语言继续发展，具有更大的影响力。
JVM继续复兴
许多年前，在JVM上运行的只有Java一种语言。
如果你想在同一个运行库上使用多种语言，.NET是惟一选择，可用语言是C# 和 VB.NET。
现在JVM已成为首选的多语言运行库，对于JRuby, Scala, Groovy, 和 Jython 看来都是很好用的系统。
与此同时，IronPython感觉已半截入土，而IronRuby仍局限在.NET平台。
经济
经济形势仍存在许多不稳定因素。
就我个人的感觉（纯直觉，伙计们），我不认为针对IT从业者的大规模裁员仍会发生，并且我已经看到人们召聘某些类型的职位的星星之火。
我认为，技能高超的超级明星程序员如果需要工作的话是可以找到的，不过他们可能需要重新定位，或所得的工资额不如预期。
我本能的另一反应是入门级和中级开发人员仍然非常脆弱，因为许多公司认为它们是“一毛钱一打，”他们的工作应以外包作为潜在目标。
如果我是一个入门级和中级开发人员，我2010年的计划会是：
学习一些先进且/或前沿的开发技术：并行计算，游戏开发，组件设计等。
把开发技术与特定行业的技能结合起来提升自身价值。
举例来说，不要只应用商业分析师交给你的算法 - 要学会发展切合实际的算法。
谨慎赶时髦
我屡次见证了这种情况，即一个好的主意在某些拥有正确的态度和适合的人的店铺中获得了成功，并因此而变得流行，但其它企业尝试应用这些主意时却失败了。
从长远来看，取得成功的主意是可以预测到足够多的风险并且能够缓慢化解这些风险的。
缓慢化解率意味着人们有时间去探索可能性，并通过学习来减少风险。
大肆宣传的主意无法进入成熟期，相反，人们在开始时会轻率地应用它们，然后在没有得到许诺的结果时抛弃它们。
去年，SOA（及其前生SaaS）黯然失色，因为一些并不具备IT敏捷开发条件的大公司尝试实施SOA，并将这些项目变成了在IT方面的无效投资，出现这种情况的通常的原因是：用人错误，缺乏热情，过多的繁文缛节，人多误事等等。
我对你在今年能看到很多新的SOA实施表示怀疑。
记住我的话，敏捷开发也将走上同样的路线。
随着越来越多的伙计们听到的敏捷开发的好处，会有越来越多的“大师”写书，随后会有越来越多的秃头老板削尖脑袋愿意尝试。
我们都知道当西雅图或波特兰的秃头老板实施一些时髦的概念时发生了什么：彻底失败。
不要重蹈覆辙了！
网络故障检修
网络维护人员应该配备相应的工具和相应的知识，以便及时、有效的找到和解决问题。
本文讨论了网络技术人员和工程师经常遇到的十个令人头疼的问题。
先分析问题，然后讨论使用何种工具来帮助查找和进行故障隔离。
旨在起一个抛砖引玉的作用。
问题1:逮捕物理层的滥用者
用户抱怨-不能登陆或时断时续
-症状-只影响一个工作站，而该站原先没有问题
-查找问题：电缆终端链路太长。
用户每天都移动，弯曲，连接和切断网络终端（尤其时膝上型笔记本电脑）。
廉价的电缆测试仪就能检查这种问题。
在你能确切地说是电缆的问题之前，通常首先考虑不是电缆的问题。
这需要使用网络测试工具来证明本地网段的健康状况是否良好，集线器端口功能是否正常，网卡及其驱动程序工作是否良好。
最后，检查网络互连设备是否有问题。
只有此时，你才会知道为了孤立有问题的终端，断开的连接器或是接地回路等问题该从何处着手测试电缆。
在铜轴线网络中，搜寻在同轴“T型头”和网卡之间的断头，在UTP网络中，连续运行仪器图测试功能，不断扭动终端以识别接触不良或短路。
-解决问题：
更换工作站连接电缆，更换损坏的连接器，或者必要的话停止使用水平电缆。
再次全面检查处理过的电缆。
问题2：快速以太网比升级前的以太网还慢
用户抱怨-10Mbps的以太网速度慢，升级为100Mbps快速以太网后甚至不能连接上网。
-症状-影响新工作站或升级的工作站连接上网。
-查找问题：
对于UTP5类非屏蔽双绞线，用电缆测试仪测试其是否符合对应100Mbps传输速率的EIA/TIA-TSB67标准。
某些在10Mbps以太网工作正常的电缆链路因为近端串扰太大在100Mbps以太网就不能正常工作。
信号耦合到邻近线对引起高频信号传输失败。
将UTP的线对分开甚至会使网络在达到一定流量时瘫痪。
-解决问题：
更换或停用不能连接的链路，故障清除后再全部测试处置过的链路。
问题3:无效的看门狗
-用户抱怨-不能连接Novell网络的Netware远程服务器
-症状-影响本网段内与服务器相连的所有工作站
－查找问题：
检查网段的健康状况，注意观察其利用率，碰撞，错误帧和广播帧水平。
此时可观察到大量的碰撞或错误帧，该碰撞或错误帧可引起客户机和服务器之间“Hello”帧出现延迟。
在某一指定的服务器所在的远端网段重复此测试。
如果两个网段都出现空白，用网络测试仪向路由器中的SNMP代理查询，检查两个网段之间的路由表。
确定该路径不存在拥挤问题。
为了有效地使用资源，在看门狗允许的时间内如果客户机对“Hello”帧无反应，则Novell服务器会将该客户机注销。
-解决问题：
简便地方法时改变看门狗时延地参数，将Novell服务器中的该参数改大。
如果情况有所改善，则可确定为引起帧丢失的原因，纠正看门狗延时帧计时器的参数。
问题4:刍菊链效应
-用户抱怨-网络服务变慢
-症状-影响某个以太网段的所有用户。
网络服务（访问服务器）变慢，但与所连接的某的服务器无关。
-查找问题：
在高峰时段将网络测试仪连入集线器，运行网络健康状况测试。
此时将会观察到大量错误帧。
在10BASE-2网络中，错误帧的类型归类为“延迟碰撞”。
在10BASE-T网络中帧错误的类型归类为典型的帧校念序列错误（FCS错误），随着网络用户的增长，新增加的集线器通常与原来的集线器形成效应。
-解决问题：
统计一下任意两个网络设备之间经过的中继器的数量。
在10Mbps以太网中不应超过4个，在100Mbps快速以太网中不应超过2个。
如果数量超标，则按以太网的标准修正网络拓扑结构，然后再看错误帧是否还出现。
问题5-网络管理者的报应
-用户抱怨-一个工作站间隙性出错，不能登陆或者不能访问远端服务器
-症状-只影响一个工作站，通常在增加、移动、变更工作站后出现此问题
-查找问题：
先排除用户是否有帐户和安全设置方面的潜在问题。
让用户登陆并且试图从另一个工作站重复这一操作。
如果成功，则可以用网络测试仪从用户端到服务器之间的链路状况。
然后测试网卡，检测硬件和驱动程序的功能和状况。
如果没有问题则检查IP设置，确定用户的IP地址是否有效或者是否有重复的IP地址。
确定本网段的子网掩码和路由器默认地址是否正确，DNS服务器（如果有）地址是否专用。
如果一个新工作站的IP地址与打印服务器的 IP地址设置重复，将会把每个人的打印工作指向该新客户机。
-解决问题：
改为合适的设置，然后重启工作站
问题6：光纤错觉
-用户抱怨-整个网络变慢
-症状-影响所有连接到网段上的工作站
-查找问题：
在正常的网络使用时段，将网络测试仪连接到集线器，在光纤连接的两端产生流量，测试健康状况。
在某一时刻断开或接上光纤，每当光纤连入网段时，就会观察到大量的错误帧。
劣质的光纤链路连接会在其附属的网段中产生大量垃圾帧，迫使工作站重发帧，网络速度变慢。
-解决问题：
清洁或重新安装好光纤连接器，复位所有的连接器，再次检查网络健康状况，此时应该只有少量的错误帧。
问题7：奇怪！
难道电缆在夜间受到过撞击？
-用户抱怨-不能连接上网或不能登陆
-症状-网段上只有一个工作站能上网
-查找问题
断开工作站的连接电缆，接上网络测试仪，注意从集线器上检测不到连接信号。
运行电缆测试，查看从办公室到配线间之间的电缆是否开路。
如果不正常，将工具设置在音频发生器位置，从配线间用音频探测器查出与办公室对应的电缆，通常情况下，在配线间有变动时，电缆线索会受到推挤和碰撞，引起连接器脱落或松动。
-解决问题：
重新插好工作站和工作站和集线器之间的电缆连接器，查看连接信号指示灯是否发亮，确定用户是否能上网。
问题8:“病人”的心还在跳吗？
-用户抱怨-在网络繁忙的高峰期访问网络的速度很慢
-症状-个别网段的所有工作站对不论是本网段的服务器还是其它网段的服务器都无反应。
-查找问题：
在高峰时段将网络测试仪连接到该网段。
运行该网段的网络健康测试，注意网络的利用率、碰撞、错误帧、广播帧的状况，此时可能看到平均碰撞率不正常，观察到的流量中可能有高达50%是碰撞帧碎片。
这是帧信号收发错误——SQE(Signal quality error)的表现。
“心跳”信号被不经意地停留在“博”的位置。
-解决问题：
定位网络中每一个信号收发者。
检查SQE开关是否位于“关”的位置。
此信号用在早期的10BASE-5以太网中，新的以太网设备已不再使用。
问题9：可以连接，但不能登陆
-用户抱怨-不能登陆到欲连接的服务器
-症状-问题通常在新安装或重新设置工作站后出现，但仅限于一个工作站
-查找问题：
断开工作站连线，接上网络测试仪，执行IPXPing或者在取得服务器列表后来检查配置的哪一层的网络协议。
注意帧的封装类型（例如802.2）。
现在可以测试网卡，检查安装和运行程序是否正确。
还要注意检查网卡绑定帧的类型（比如802.3）。
两个帧类型要匹配，如果服务器和工作站运行的帧类型不同，则不能连接上网。
-解决问题：
用Editor打开工作站的NET.CFG,修改其中一行：将FRAME-ETHERNET-802.3改为FRAME-ETHERNET-802.2之后将工作站连接上网，重启。
检查服务器连接状况。
问题10：莫名其妙得间歇性连接中断
-用户抱怨-服务速度太慢，连接间歇性中断
-症状-问题仅再一个网站上出现，与正在访问的代理服务器无关。
-查找问题：
断开网站，接上一个具有流量发送（此为诊断过程的一部分）功能的测试工具，检查网络的利用率，碰撞和错误帧水平，确定网络是否健康。
若仪器检测通过而只是网站时通时断，则表明是典型的物理层故障。
进行电缆链路测试（包括用户连接电缆），此时长度测试可能显示电缆超长（UTP电缆为100米，铜轴电缆为185米）。
超过IEEE规定的允许长度，着将会引起局域网内的传输信号严重衰减。
-解决问题：
在链路中增加中继器，使电缆长度限制在允许的范围内。
另一个办法就是用光纤代替电缆或铜轴线。
总结：从以上例子可以清楚的看到，为了查找通常的网络错误，配置合适的网络测试工具是非常必要的。
使用IPSec保护iSCSI
但基本的 IP传输缺乏安全，这就使得任何精通该领域的人可以截获或者修改IP通信。
IPSec是个基于IP的安全协议，不同于SSL安全协议，后者基于OSI模型的应用层。
IPSec使用两个不同的协议：Authentication Headers (AH)和Encapsulating Security Payloads (ESP)。
AH协议主要负责数据包的认证和完整性验证。
它对源数据包进行认证，并保证数据通信的完整性，但对数据并不进行任何形式的加密。
但无法保证数据不被他人读取。
此时，AH在参与通信的计算机之间进行相互认证，禁止未经认证的计算机参与网络通信。
AH 认证和ESP认证的区别在于 ESP仅仅包括了数据包的 ESP header, trailer和payload部分，而AH对整个数据包进行保护，包括 IP header。
为此，IPSec使用了各种安全协议，要想更多了解IPSec提供保护的级别，现在对这些安全协议逐一介绍。
一个散列算法主要是对发送方和接收方的数据进行加密校验以确保数据未被改变。
如果信息在传输过程中有变化，散列值就会不同，此时就拒绝该数据包。
后者的安全度更高，但需要更多的 CPU资源，MD5使用128位散列算法，而SHA1使用的160位算法。
这个安全认定成为安全协定（security association，简称SA）。
在相互通信之前，两个系统必须认定对同一SA。
IKE是因特网工程任务组（Internet Engineering Task Force，简称IETF）制定的关于安全协议和密钥交换的标准方法。
IKE的操作分两阶段：第一阶段确保通信信道的安全，第二阶段约定SA的操作。
Kerberos - Kerberos v5常用于Windows Server 2003，是其缺省认证方式。
Kerberos的优点是可以在 用户和服务器之间相互认证，也具有互操作性。
Kerberos可以在 Server 2003的域和使用Kerberos 认证的UNix环境系统之间提供认证服务。
公钥证书 (PKI) - PKI用来对非受信域的成员，非Windows客户，或者没有运行Kerberos v5 认证协议的计算机进行认证，认证证书由一个作为证书机关（CA）系统签署。
预先共享密钥 -在预先共享密钥认证中，计算机系统必须认同在IPSec策略中使用的一个共享密钥 ，使用预先共享密钥仅当证书和Kerberos无法配置的场合。
数据加密标准 (DES 40位) - 该加密方法性能最好，但安全性较低。
该 40位数据加密标准（Data Encryption Standard，简称DES）通常被称为 安全套接字层（Secure Sockets Layer，简称SSL）。
适用于数据安全性要求较低的场合。
数据加密标准 (DES 56位) - 通过IPSec策略，可以使用56位 DES的加密方法。
1977年美国国家标准局公布了DES算法，它可以在通信过程中经常生成密钥。
该功能可防止因为一个DES密钥被破译而整个数据集的安全受到影响。
但是在商业中被认为过时了，仅用于传统的应用支持，有专门的硬件可以破译标准的 56位密钥。
3DES - IPSec策略可以选择一个强大的加密算法3DES，其安全性比DES更高。
3DES也使用了56位密钥，但使用了三个。
结果3DES成为 168位加密算法，用于诸如美国政府这样的高机密的环境中。
采用该策略的所有计算机将都遵守这样的机制。
这些模式指的是数据在网络中是如何发送和加密的。
在传输模式下，IPSec的保护贯穿全程：从源头到目的地，被称为提供终端到终端的传输安全性 。
隧道模式提供了网关到网关的传输安全性。
当数据在客户和服务器之间传输时，仅当数据到达网关时才得到加密，其余路径不受保护。
一旦到达网关，就采用IPSec进行加密，等到达目的网关之后，数据包被解密和验证，之后数据发送到不受保护的目的主机。
隧道模式通常适用于数据必须离开安全的LAN或者WAN的范围，且在诸如互联网这样的公共网络中传输的场合。
IPSec提供了一个在异种环境中加密 IP传输的方法。
本文旨在演示在 Windows 2003 Server下如何使用IPSec对通信进行加密。
在Server 2003中使用IPSec很简单，但要设置适合的安全等级是有讲究的。
阻塞传输：该策略让IPSec封锁来自从A计算机到B计算机所有传输。
由接受系统丢弃传输数据。
阻塞所有的传输数据的工作量很大，该策略不太常用。
加密传输：加密传输允许在计算机之间通信，但数据必须经过加密以防窃听，此时，IPSec使用封装安全负载（Encapsulating Security Payload，简称ESP)协议来加密数据，窃听到的数据表现为不可读的字节流。
签名传输：签名传输用来防止"中间人"攻击，用于数字签名的认证包头（Authentication Header，简称AH) 协议是在网络包的结尾添加一位，以验证数据在传输中是否被改变。
无需签名或者无需加密，允许未加改变地传输： 这是安全性的缺省设置。
允许所有数据进行传输，无需验证数据完整性。
同其他安全策略一样，IPSec安全策略也是一个平衡和折衷方案，即既要让让信息为大量用户访问，又要保护敏感信息不被窃取。
安全策略的内容多种多样，取决于公司的策略和架构。
下列的安全级别可作为规划 IPSec配置的基本准则：
最低程度的安全性：敏感数据不通过计算机网络传送，因此IPSec在缺省情况下关闭，在Server 2003中，可以选择关闭IPSec。
中等程度的安全性：当诸如数据库或者文件服务器这样的网络系统在传输或者保存敏感数据时，必须进行IPSec安全设置。
但是，这些安全措施需要综合考虑，不能对日常工作造成影响。
使用这些缺省的安全设计可以优化效率，且不会降低安全性。
高安全性：对于那些任何情况下都不能篡改或者添加的数据，需要使用高安全性策略。
在一些场合中，对于缺省的IPSec安全设置，安全服务器将提供需要的安全等级。
同没有配置IPSec的计算机进行通信是不安全，也是不允许的。
IPSec策略配置是把安全需求转换为一个或者多项 IPSec策略， 且在可以在域级，或者公司级，和本地级进行设置。
每项IPSec策略包含一条或者多条IPSec规则，每条IPSec规则包含一个过滤列表，过滤动作，认证方法以及连接类型。
过滤动作指明了对应于过滤列表中所标出的IP地址所采取的安全措施。
允许：IPSec安全策略中的允许选项是缺省值。
数据包允许在网络中传输，无需 IPSec保护。
阻塞： 当使用阻塞过滤选项时， 网络中不允许运行满足相应的IP过滤条件的协议。
协商安全性：如果一项IPSec过滤条件得到匹配， 协商安全性选项可以让管理员设置对数据的加密算法。
Kerberos - Kerberos v5常用于Windows Server 2003，是其缺省认证方式。
Kerberos的优点是可以在 用户和服务器之间相互认证，也具有互操作性。
Kerberos可以在 Server 2003的域和使用Kerberos 认证的UNix环境系统之间提供认证服务。
公钥证书 (PKI) - PKI用来对非受信域的成员，非Windows客户，或者没有运行Kerberos v5 认证协议的计算机进行认证，认证证书由一个作为证书机关（CA）系统签署。
预先共享密钥 -在预先共享密钥认证中，计算机系统必须认同在IPSec策略中使用的一个共享密钥 ，使用预先共享密钥仅当证书和Kerberos无法配置的场合。
Server 2003中包含三种预定义的可能会满足公司需要的IPSec策略，这些安全策略可以缺省方式工作，也可以修改为适合公司的特别需要。
仅当另外一个系统或者网络设备请求它实现 IPSec策略时，才打开该功能。
在该配置模式下，客户系统不会打开IPSec 安全选项，仅当出现外界的请求时，才使用 IPSec策略。
例如，如果需要，我们可以把认证类型从Kerberos改为 PKI，或者我们可以 把连接类型从All改成LAN，或者仅允许远程访问。
在该配置中，系统在初始时请求IPSec加密传输方式，但是如果其他系统不支持IPSec，也会采取折衷，并允许进行不安全的通信。
此时，如果系统没有开启IPSec，整个通信不受保护。
要了解该策略是如何制定的，需要仔细查看一下创建策略的规则。
有三种规则：
加密服务器策略 对所有采用IPSec策略传输的网络数据进行加密。
该策略将拒绝所有来自非IPSec客户的数据包。
该策略有一条规则需求对所有IP传输数据进行加密，但是注意该规则允许ICMP类型的传输数据，另外 缺省的响应规则类似于其他预定义策略。
连接类型（Connection Type）：All
使用规则来创建策略，可以让安全设计具有灵活性，可以让管理员设置用于IP数据传输的合适的安全级别。
最全的硬盘修复专题
硬盘修复（1）
在研究硬盘故障的具体处理方法之前，我们有必要先了解一些硬盘相关的基础知识。
主引导记录区MBR
硬盘是一种磁介质的外部存储设备，在其盘片的每一面上，以转动轴为轴心、以一定的磁密度为间隔的若干同心圆就被划分成磁道（Track），每个磁道又被划分为若干个扇区（Sector），数据就按扇区存放在硬盘上。
硬盘的第一个扇区（0道0头1扇区）被保留为主引导扇区。
主引导扇区内主要有两项内容：主引导记录（对操作系统进行引导）和硬盘分区表。
计算机启动时将读取该扇区的数据，并对其合法性进行判断（扇区最后两个字节是否为55AA或AA55），如合法则跳转执行该扇区的第一条指令。
所以硬盘的主引导区常常成为病毒攻击的对象，从而被篡改甚至被破坏。
硬盘控制器
硬盘控制器是硬盘及其他具有相同接口规范的外部设备（如CD-ROM驱动器）的管理者，由它来完成驱动器与内存之间的命令及数据传输。
硬盘控制器发生故障或连接不正确将会导致硬盘无法正常工作。
CMOS中的硬盘信息
在计算机的CMOS中也存储了硬盘的信息，主要有硬盘类型、容量、柱面数、磁头数、每道扇区数、寻址方式等内容，对硬盘参数加以说明，以便计算机正确访问硬盘。
当CMOS因故掉电或发生错误时（启动时一般会提示“CMOS Checksum Error”或类似信息），硬盘设置可能会丢失或错误，硬盘访问也就无法正确进行。
这种情况我们就必须重新设置硬盘参数，如果事先已记下硬盘参数或者有某些防病毒软件事先备份的CMOS信息，只需手工恢复即可；
否则也可使用BIOS设置（Setup）中的“自动检测硬盘类型”（HD Type Auto Detection）的功能，一般也能得到正确的结果。
不是问题的问题
很多时候我们的电脑会出现一些看似不得了的毛病，其实只是自己吓自己，也就是拨拨线头、动动跳线的举手之劳。
常见的让你空出一身冷汗的硬盘不自举问题主要有以下两种：
系统不承认硬盘：
此类故障最为常见，开机自检完成时提示以下出错信息：
HDD controller failure Press F1 to Resume 
上述E文意指“硬盘无法启动”，甚至有时用CMOS中的自动监测功能也无法发现硬盘的存在。
当出现上述信息时，应该重点先检查与硬盘有关的电源线、数据线的接口有无损坏、松动、接触不良、反接等现象，此外常见的原因就是硬盘上的主从跳线是否设置错误。
检查、排除方法：
重新插拔硬盘电源线、数据线或者将数据线改插其他IDE口进行替换试验。
CMOS错误引起的故障：
开机显示如下信息：
Drive not ready error Insert Boot Diskette in A
Press any key when ready...
出现上述错误，多属于CMOS设置错误或因CMOS供电不足造成CMOS信息丢失所引起。
CMOS设置的正确与否直接影响硬盘的正常使用。
当硬盘类型错误时，常会发生读写错误，有时则干脆无法启动系统。
比如CMOS中的硬盘类型小于实际的硬盘容量，则硬盘后面的扇区将无法读写。
检查、排除方法：
重新设置或者放电复位CMOS中数据。
如果不是上述两种原因，那么您的硬盘多半是“挂”了，想省事就把它报废掉，换块新硬盘吧。
如果硬盘中有重要的资料或者您有较强的动手欲，请Follow me。
硬故障的排除
硬故障即物理性故障，是由于硬盘的机械零件或电子元器件物理性损坏而引起。
硬盘常见的硬故障是出现坏道，其中最为严重的特例表现为零磁道损坏。
硬盘坏道的修复：
硬盘坏道分为逻辑坏道和物理坏道两种，前者为逻辑性故障，通常为软件操作或使用不当造成的，可利用软件修复；
后者为物理性故障，表明您的硬盘磁道产生了物理损伤，只能通过更改或隐藏硬盘扇区来解决。
1、逻辑坏道的修复
对于逻辑坏道，Windows自带的“磁盘扫描程序（Scandisk）”就是最简便常用的解决手段。
如果硬盘出现了坏道，我们可在Windows系统环境下运行“磁盘扫描程序”，它将对硬盘盘面做完全扫描处理，并且对可能出现的坏簇做自动修正。
除了Scandisk之外，还有很多优秀的第三方修复工具，如诺顿磁盘医生NDD(Norton Disk Doctor)及PCTOOLS等也是修复硬盘逻辑坏道的好帮手。
DD:选择好要处理的分区后再选中“自动修复错误”，点击“诊断”即可。
经过一系列对“分区表”、“引导记录”、“文件结构”和“目录结构”的诊断以及“表面测试”之后，它会自动给出一份诊断统计报告，让您对硬盘的“健康”状况胸有成竹。
NDD2001汉化版下载地址：http://www.diyup.com/WEB/SYSTEM/TOOLS/NDD2001.EXE
最新版本：NDD32 2002
此外，各硬盘厂商推出的针对本厂硬盘系列的特定DiskManager程序，更熟悉硬盘本身的电路结构和固化程序，也更容易修复硬盘错误。
因此建议大家都去下载一份自己厂商的专用Disk Manager程序，更方便修复您自己的硬盘。
2、物理坏道的隔离 
对于硬盘上出现的无法修复的坏簇或物理坏道，我们可利用一些磁盘软件将其单独分为一个区并隐藏起来，让磁头不再去读它，这样可在一定程度上令您的硬盘延长使用寿命。
需要特别强调的是，使用有坏道的硬盘时，一定要时刻做好数据备份工作，因为硬盘上出现了一个坏道之后，更多的坏道会接踵而来，让您面对荡然无存的资料库欲哭无泪。
修复这种错误最简单的工具是Windows系统自带的Fdisk。
如果硬盘存在物理坏道，通过前面介绍的Scandisk和NDD我们就可以估计出坏道大致所处位置，然后利用Fdisk分区时为这些坏道分别单独划出逻辑分区，所有分区步骤完成后再把含有坏道的逻辑分区删除掉，余下的就是没有坏道的好盘了。
用PartitionMagic、DiskManager等磁盘软件也可完成这样的工作。
如PartitionMagic分区软件，先选择硬盘分区，用“操作”菜单中的“检查错误”命令扫描磁盘，算出坏簇在硬盘上的位置，然后在“操作”菜单下选择“高级/坏扇区重新测试”；
把坏簇所在硬盘分成多个区后，再利用“操作”菜单下选择“高级/隐藏分区”把坏簇所在的分区隐藏。
这样也能保证有严重坏道的硬盘的正常使用，并免除系统频繁地去读写坏道从而扩展坏道的面积。
PowerQuest PartitionMagic Prov7.0简装汉化版下载地址：http://miaodou.myetang.com/Down- ... Partitionmagic7.zip。
需要特别留意的是修好的硬盘千万不要再用DOS下的Fdisk等分区工具对其进行重新分区，以免其又改变硬盘的起始扇面，空费了我们的心血。
零磁道损坏的修复：
在硬盘使用过程中，当发现零磁道损坏时，一般情况下也就判了硬盘死刑，很难修复。
不过对于硬盘0扇区损坏的情况，虽然比较棘手，但也不是无可救药。
合理运用一些磁盘软件，把损坏的0扇区屏蔽掉，而用1扇区取而代之则还有“起死回生”的可能，这样的软件有Pctools和诺顿NU等。
进入NU 8.0工具包目录，运行其主程序NORTON.EXE，接着选择“磁盘编辑器Diskedit”，成功运行后选“对象Object”，选“分区表”后将硬盘的起始扇区从0面0柱1扇区改为0面1柱1扇区。
另外需要说的就是，改动数值要根据具体情况而定。
最后存盘后退出重启电脑，用Format命令格式化硬盘即可正常使用了。
用DE修复0磁道损坏硬盘
硬盘修复（2）
硬盘坏道修复全攻略 
硬盘是电脑极重要的一部分，所有的资料和数据都会保存在硬盘中，一旦硬盘出现错误，有时数据的损失会比整个电脑报废的损失还要大。
不过，作为电脑的硬件之一，许多人总以为硬盘轻易不容易损坏，一旦坏了就是不能启动的情况，还有人认为坏道是很容易识别的，发现了用什么磁盘医生之类的软件修理就行了，再不行就低格吧!
其实硬盘坏道，几乎可以称为硬盘的致命伤。
笔者见识过许多因为延误时机，自己乱用各种软件修理，最后把偌大个硬盘整成一块废铁的例子。
修理硬盘坏道
对于逻辑坏道，我们可以修复，对于物理坏道，我们应采用隔离的办法，以最大程度减少损失，防止坏道进一步扩散为目标。
我见过有些人在报纸上吹说用某个特殊软件能修理物理坏道，最要命的是许多人对低格硬盘的迷信，实在是误人之语。
所谓低级格式化，指的是将空白的磁盘划分出柱面和磁道，然后再将磁道划分为若干个扇区，每个扇区又划分出标识部分ID、间隔区GAP和数据区DATA等。
低级格式化只能在DOS环境下完成，而且只能针对—块硬盘而不能支持单独的某一个分区。
有些坏磁道和坏扇区能够通过低级格式化来修复，但对于真正的硬盘磁盘表面物理划伤则无法进行修复，这只有通过各种办法标出坏扇区的位置，以便让操作系统不去使用，以防止扩大坏道进而延长硬盘使用。
特别想强调，低级格式化是一种损耗性操作，对硬盘的寿命有一定的负面影响，所以，如无必要，用户们尽量不要低级格式化硬盘。
对于逻辑坏道，一般情况下我们用操作系统自带的工具和一些专门的硬盘检查工具就能发现并修复。
如：Windows自带的Scandisk磁盘扫描程序就是发现硬盘逻辑坏道最常用的工具，而我们常见的Format命令不能对任何硬盘坏道起到修补作用，这点大家要明白。
我们可在Windows系统环境下，在“我的电脑”中选中要处理的硬盘盘符，选择其“属性”，在出现的“工具”按钮中选择“查错状态”，再在“扫描类型”中选“全面检查”，并将“自动修复错误”打上“勾”，然后“开始”即可。
如果系统在启动时不进行磁盘扫描或已不能进入Windows系统，我们也可用软盘或光盘启动盘启动电脑后，在相应的盘符下，如“A：”下运行Scandisk*：(注：*为要扫描的硬盘盘符)，回车后来对相应需要扫描修复的硬盘分区进行修理。
但是，如果是硬盘物理坏道，那么千万千万记住不要试图用这些方法来修复，相反用各种工具反复扫描，就是对硬盘的物理坏区强制进行多次读写，必然会使坏道变多，进而扩散，正确的方法是用下面的方法果断地把已有坏道的地方隔离开。
这是一种很无奈的办法，但是一个20G的硬盘，如果因为坏道，屏蔽了15G，总还有5G空间可用，如果不这样做，最后的结果是整个硬盘全部报废。
方法一：用PartitionMagic等磁盘软件完成工作
如PartitionMagic分区软件，先用PartitionMagic4中的“check”命令或Windows中的磁盘扫描程序来扫描磁盘，算出坏簇在硬盘上的位置，然后在Operation菜单下选择“Advanced/badSectorRetest”，把坏簇所在硬盘分成多个区后，再把坏簇所在的分区隐藏，以免在Windows中误操作，这个功能是通过HidePartition菜单项来实现的。
这样也能保证有严重坏道的硬盘的正常使用，并免除系统频繁地去读写坏道从而扩展坏道的面积。
但是这需要对这些软件熟悉，并且有计算硬盘的经验，许多人并不容易做到准确。
方法二：用FDISK和格式化命令FORMAT
具体的方法是这样的，第一要搞清硬盘的容量，对于有问题的磁盘先用FDISK分成一个C盘，再用FORMAT进行格式化，当碰到无法修复的坏块时面对FORMAT总是试图修复，这时记录下进行的百分比.
然后按CTRL+BREAK强行终止任务，用磁盘总容量×百分比，得出这部分正常的磁盘容量，用FIDSK划出一个逻辑磁盘，再将后面的磁盘估计出坏道的大概大小，大概比例为10%左右，再划分一个逻辑盘。
这个小盘不用格式化，在总工作完成后将其删除，这样就将坏块给全部跳过去了。
这样可能会损失一些好道，但对大容量硬盘来说无足轻重，而硬盘使用起来更加稳定。
方法三：用专门的坏盘分区工具如FBDISK
FBDISK这是一个DOS下专门发现坏道并隔离后重新分区的软件，只有一个文件，仅仅几十K。
操作很简单，先制作一张能启动到DOS的软盘，把FBDISK放在软盘上，用它引导系统，注意系统上只能挂一个要修理的硬盘，并且将其接在主硬盘的线上。
进入DOS后，只要能发现硬盘，就运行FBDISK好了，这个小程序先会对硬盘按磁道进行扫描，发现坏道就显示出来，同时还会估计总体扫描完要用多长时间，全部扫描完后，程序会根据扫描结果和坏道情况给你提出一个全新的分区方案来，如果你接受就按Y，否则不会对你的硬盘进行处理。
这个软件不错，但是可能比较大手，笔者曾有一次用它把一个10G硬盘扫完后，报告说只有300M可以使用，但是我用方法二后，却找出了近2G的完好空间。
所以大家还是按需使用。
还有一类特别的坏道表面看起来很可怕，其实反而好修理，如系统显示“TRACK 0 BAD，DISKUNUSABLE”，意思为“零磁道损坏，硬盘无法使用”或用磁盘扫描程序扫描其它硬盘时其0扇区出现红色“B”。
大家都知道硬盘扇区是最重要的地方，损坏后一点也不能用，一般人往往将出现这样故障的硬盘作报废处理。
其实合理运用一些磁盘软件，把报废的0扇区屏蔽掉，而用1扇区取而代之就能起到起死回生的效果，这样的软件如Pctools9.0和NU8等。
以Pctools9.0为例来作说明。
一块40G硬盘出现上述故障，用盘启动电脑后，运行Pctools9.0目录下的DE.EXE文件。
接着选主菜单Select中的Drive，进去后在Drivetype项选Physical，按空格选定，再按Tab键切换到Drives项，选中harddisk，然后OK回车后回到主菜单。
打开Select菜单，这时会出现PartitionTable，选中进入后出现硬盘分区表信息。
该硬盘有两个分区，找到C区，该分区是从硬盘的0柱面开始的，那么，将1分区的BeginningCylinder的0改成1就可以了，保存后退出。
重新启动电脑后按Del键进入COMS设置，运行“IDEAUTODETECT”，可以看到CYLS由782变成781。
保存退出后重新分区格式化该硬盘就可以了。
电脑综合诊治之硬盘故障详解
1、硬盘有坏道，不能正常装入WINDOWS或使用不稳定 
解决方案： 
1）用分区软件将坏道分为一个区或几个小区，然后将该分区删掉即可，此法适用于硬盘坏道比较集中的情况。
2）用NORTON8.0以上版本所带的WIPEINFO.EXE文件，擦除有坏道的驱动器再重装软件即可，此法适用于坏道比较分散的情况。
3）用DM软件低格硬盘。
4）用PCTOOLS9.0的DISKFIX修复硬盘。
2、用主板自带的低格程序低格硬盘后，硬盘数据仍然存在，与未低格前一样 
此类现象比较常见，我们只要变换硬盘的mode模式即可解决问题，例如我们可以将LBA模式变换为normal或large模式，待低格硬盘后再变换为原来的LBA模式即可解决问题。
3、不能用FDISK进行分区，或某些分区不能删除 
此类故障是由于分区信息有错误造成，一般是人为造成，我们在某些原装机上经常见到其某个分区不能删除的现象，其实它的那个分区是用来恢复系统所用，倘若我们要删除其分区以增大硬盘使用空间，可借助norton8.0自带的diskedit将其第一扇区的数据全部以“0”代替，然后写进去，即可予以解决。
4、计算机在内存检测完成后死机且键盘无响应 
此类故障常见于现在的新式主板，如810、815主板，由于现在主板的IDE口设备都是每次启动电脑时自动检测设备，不是像以前的老主板在CMOS内检测硬盘，是以当电脑启动时若IDE设备接线错误，会导致电脑长时间检测IDE设备而停止响应。
此时我们可以检测接线是否正确及IDE信号线有无问题来解决该故障。
5、硬盘主引导扇区损坏，系统无法引导 
解决方案： 
1、用FDISK/MBR命令恢复引导程序。
2、系统文件损坏后在其他机器上备份系统，用SYS命令重新传输系统即可（WIN95、WIN98的系统文件可以共用）。
6、提示C：DRIVE FAILURE RUN SETUP UTILITY，PRESS（F1）TO RESUME 
此类故障是硬盘参数设置不正确所以从软盘引导硬盘可用，只要重新设置硬盘参数即可。
7、提示：NO ROM BASIC 
此类故障是由于没有设置激活分区引起，用FDISK设置激活分区即可。
8、提示：MISSING OPERATING SYSTEM 
解决方案： 
1、进入CMOS重新设置硬盘参数。
2、系统引导标志被更改，如果分区信息在需要格式化，分区不在需要重新分区。
9、提示：NON—SYSTEM DISK OR DISK ERROR 
解决方案：用软盘启动重新传输系统即可，如若不行，那就只有重新分区格式化了。
10、提示：INVALID DRIVE SPECIFICATION 
解决方案： 
1、重新分区格式化 
2、如0磁道损坏需要低级格式化，然后用SET COMSPEC（指定COMMAND文件位置），使得COMMAND远离0磁道。
当硬盘出现分区故障后，希望用户先用上述方法解决，若不成功，对硬盘分区格式化是解决软故障的基本方法，但信息将被清除。
其使用原则是：能用高格解决的不用分区，能用分区解决的不用低级格式化。
11、在586电脑上将硬盘软件装好后，在486电脑上不能使用 
此故障是由于586电脑将硬盘采用了LBA模式，而486默认的模式是NORMAL，所以只要将CMOS的NORMAL改为LBA即可。
12、无论在第二IDE口，还是第一IDE口接入光驱或硬盘后，主硬盘都不能用，但硬盘参数又能检测到 
此类故障比较特殊，常见于老式586电脑上，解决方法是将硬盘的主、副跳线换一下，即从盘变主盘或主盘变从盘。
硬盘修复（3）
硬盘使用久了，便有可能出现各种各样的问题，而硬盘“坏道”是这其中最常见的问题。
下面就来给你聊聊硬盘坏道的一些维修维护方法，希望能对你维修硬盘起到些参考作用。
一、硬盘坏道早知道
硬盘坏道分为逻辑坏道和物理坏道两种。
前者为软坏道，通常为软件操作或使用不当造成的，可用软件修复；
后者为物理性坏道，表明你的硬盘磁道上产生了物理损伤，它只能通过更改硬盘分区或扇区的使用情况来解决。
出现下列情况时也许你的硬盘就有坏道了：
首先，你在打开、运行或拷贝某个文件时，硬盘出现操作速度变慢，且有可能长时间操作还不成功或表现为长时间死“啃”某一区域，或同时出现硬盘读盘异响，或干脆WINDOWS系统提示“无法读取或写入该文件”。
这些都可表明你硬盘的某部分出现了坏道。
其次，每次开机时，SCANDISK磁盘扫描程序都会自动运行。
这肯定表明你的硬盘上有需要修复的重要错误，比如坏道。
你在运行该程序时如不能顺利通过，表明硬盘肯定有坏道，或扫描虽然也可通过，但出现红色的“B”标记，表明硬盘也有坏道。
其三，电脑启动时硬盘无法引导，用软盘或光盘启动后可看见硬盘盘符但无法对该区进行操作或操作有误或干脆就看不见盘符，都表明硬盘上可能出现了坏道。
具体表现如开机自检过程中，屏幕提示“Hard disk drive failure”、“Hard drive controller failure”或类似信息，则可以判断硬盘驱动器或硬盘控制器有硬件故障；
读写硬盘时提示“Sector not found”或“General error in reading drive C”等类似错误信息，则表明硬盘磁道出现了物理损伤。
最后，电脑在正常运行中出现死机或“该文件损坏”等问题，也可能和硬盘坏道有关。
二、硬盘坏道的维修
下面我们就给大家介绍一些常见的硬盘坏道维修方法。
1.SCANDISK(磁盘扫描程序)是解决硬盘逻辑坏道最常用的程序，而我们常见的FORMAT命令不能对任何硬盘坏道起到修复作用，这点大家需要明白。
如果硬盘出现了坏道，我们可在WINDOWS系统环境下，在“我的电脑”中选中要处理的硬盘盘符，选择其“属性”，在出现的“工具”按钮中选择“查错状态”，点击“开始检查”，再在“扫描类型”中选“全面检查”，并将“自动修复错误”打上钩，然后“开始”即可。
它将对硬盘盘面作完全扫描处理，并且对可能出现的坏簇作自动修正。
其次，在DOS状态下，硬盘有坏道，计算机在启动时一般会自动运行SCANDISK进行扫描，并将坏簇以黑底红字的“B”(bad)标出。
当然，如果系统在启动时不进行磁盘扫描或已不能进入WINDOWS系统，我们也可用软盘或光盘启动盘启动电脑后，在相应的盘符下，如“A：”下运行SCANDISK ：(注*为要扫描的硬盘盘符)，回车后来对相应需要扫描修复的硬盘分区进行修理。
2.其它的软件，如诺顿工具箱中的NDD“磁盘医生”及PCTOOLS等相关工具软件对硬盘进行扫描也是修复硬盘坏道的最常用的方法，其用法很简单，许多报刊上都有介绍，大家可找来试用一下。
3.如果硬盘上出现了无法修复的坏簇或物理坏道，大家可用一些磁盘工具软件将这些坏道单独分为一个区并隐藏起来，这样可延长你的硬盘的使用寿命。
★方法一，如一块4.3G硬盘，在2G处有严重的物理坏道，用FORMAT格式化过不去，SCANDISK或NDD检测也过不去，但能正常分区。
找来一款分区格式化软件SMART FDISK，用启动盘启动电脑后，进入盘符A：，运行该软件执行文件SFDISK.EXE。
然后删掉(DELELE)原有分区，算出坏道在该硬盘上所在的位置。
如本例，先建立1990MB的基本分区，快速格式化后激活，然后再在坏道处分出约50MB的逻辑分区，再将以后所剩的硬盘空间作为一个逻辑区后用快速格式化功能将其快速格式化；
最后再将那个约50MB的坏道所在的区删除掉就是了。
然后重启，一个有严重物理坏道的硬盘就这么很快地被修好了，以后磁头再也不会去读那些被删除了的坏道区了。
★方法二，下面我们再来说说WINDOWS系统自带的FDISK分区软件在这种情况下的应用方法。
例如一块1GB的硬盘，在格式化到10%时不能顺利通过，这时按“Ctrl+Break”强行终止，运行FDISK以建立一个90MB的DOS分区，命名为C盘，然后再建立一个20MB的逻辑盘D，再将余下的800余MB建立一个逻辑盘E，退出FDISK再运行FORMAT ：如果格到10%时又遇到阻碍，这时用FDISK再建立一个88MB的E盘，10MB的F盘余下的790MB作为G盘。
继续重复上面的操作，直到完成，然后运行FDISK将10MB的D、F盘删除，这时余下的就是没有坏道的好盘了。
★方法三，同理，用PartitionMagic，DiskManager(编注：关于此软件的详细介绍可以参阅本期软硬兼施栏目)等磁盘软件也可完成这样的事。
如PartitionMagic分区软件，先用PartitionMagic4中的“check”命令或WINDOWS中的磁盘扫描程序来扫描磁盘，算出坏簇在硬盘上的位置，然后在Operations菜单下选择“Advanced/bad Sector Retest”；
把坏簇所在硬盘分成多个区后，再把坏簇所在的分区隐藏，以免在Windows中误操作，这个功能是通过Hide Part ition菜单项来实现的。
这样也能保证有严重坏道的硬盘的正常使用，并免除系统频繁地去读写坏道区而蔓延产生出更多的坏道。
4.系统显示“TRACK 0 BAD，DISK UNUSABLE”，意思为“零磁道损坏，硬盘无法使用”或用磁盘扫描程序扫描其它硬盘时，其0扇区出现红色“B”。
硬盘0扇区损坏，是大家比较头痛的故障，一般人往往将出现这样故障的硬盘报废。
其实，合理地运用一些磁盘软件，把报废的0扇区屏蔽起来，而用1扇区取而代之就能起到起死回生的效果，这样的软件如Pctools9.0和NU8等。
★方法一，我们先以PCTOOLS9.0为例来做说明。
一个2.1GB的硬盘出现上述故障。
用启动盘启动电脑后，运行PCTOOLS9.0目录下的DE.EXE文件，接着选主菜单Select中的Drive，进去后在Drive type项选Physical，按空格选定，再按Tab键切换到Drives项，选中hard disk，然后回车，回到主菜单，打开Select菜单，这时会出现Partition Table，选中进入后出现硬盘分区表信息。
该硬盘有两个分区，找到C区，该分区是从硬盘的0柱面开始的，那么，将1分区的Beginning Cylinder的0改成1，保存后退出。
重新启动电脑后按Del键进入CMOS设置，运行“IDE AUTO DETECT”，可以看到CYLS由782变成781，保存退出后重新分区并格式化该硬盘。
该硬盘就起死回生了。
★方法二，其次诺顿NU8.0也较好用。
例如一个1.28GB的硬盘出现0磁道损坏故障，进入NU8工具包目录，运行其主程序NORTON.EXE，然后可先选“补救盘”的RESCUE选项，对该硬盘的引导区、分区表等信息进行备份。
接着选择磁盘编辑器“DISKEDIT”，成功运行后选对象“Object”，选“分区表”后可见本硬盘的参数如下：面SIDE为0-63，簇CYLINDER为0-255，扇区SECTOR为1-63。
其主引导记录和分区表信息就应该在0面0簇1扇区。
我们要做的事就是把其C盘的起始扇区从0面0簇1扇改为0面1簇1扇，移动光标手工修改即可。
另外需要说的就是改动数值要根据具体情况而定。
最后存盘后退出重启电脑，用FORMAT命令格式化硬盘即可正常使用了，需要特别留意的是修好后的硬盘一定不要再用DOS下的FDISK等分区工具对其进行重新分区操作，以免又改变硬盘的起始扇区。
★方法三，对于“逻辑炸弹”造成的假零磁道损坏，除了用专门解锁的程序处理外，还可以低格硬盘前几个磁道或者用DiskManager清零的办法使硬盘重新分区使用，但数据会全部丢失。
主引导记录MBR信息被破坏，会造成FDISK重新分区处理后的硬盘不能启动，处理的办法很简单，执行Fdisk/MBR命令，或者用类似DiskManager这样的软件重写一遍就行了。
5.如果以上各招都不见效，那么使用主板自带的硬盘低格程序或硬盘厂家随盘赠送的低格程序如DM，LFORMAT等对硬盘全盘进行低级格式化处理，它可对硬盘坏道重新整理并排除。
三、如何使用才能减少坏道
1.保持清洁，防止静电
虽然硬盘是一个密封体，但若环境中灰尘过多还是会引起硬盘的接触不良局部短路或灰尘进入盘体内部等故障，所以保持硬盘及使用环境的清洁是很重要的。
同样，用户在拆装硬盘时要注意防止静电，静电是硬盘的无形杀手，很容易造成硬盘坏道的产生，所以大家在拆装硬盘前一定要先将双手及金属工具在其它金属体(如水管)上触摸几下，将静电放掉后再行操作。
当然更为严重的是大家在拆装硬盘时，不到万不得已不要对硬盘进行带电插拔。
2.轻拿轻放，正确关机
虽然说许多硬盘厂家号称其硬盘使用了许多硬盘保护技术或其硬盘能抗多少g的外力冲击，但大家在平常使用硬盘时千万不要因此而掉以轻心，轻拿轻放是保护硬盘的好习惯，它可避免磁头与盘片产生撞击而擦伤盘片表面的磁层，导致硬盘的物理损害而产生坏道。
同理正确地关掉计算机也是减少计算机瞬间电源脉冲对硬盘造成的损害的好习惯，方法是点“开始”菜单，选择“关闭系统”，再选“关闭计算机”、“确定”，待系统提示你可以安全地关闭计算机后，再按下电源开关关机(ATX电源不需此步)，而不要经常随手按电源关机，因为这样会使硬盘磁头不能正确复位而造成硬盘盘面的划伤。
3.经常整理，注意备份
一块硬盘使用久了之后肯定会产生大量的文件碎片，过多的碎片会导致应用程序启动和执行变慢。
因此应养成经常整理硬盘的习惯。
另外，电脑使用久后，应用程序会在硬盘上的c:\windows\temp文件夹中建立许多临时文件，大家可予以删除。
为了提早预防硬盘坏道对硬盘造成的致命性损害，常常对硬盘内的重要数据进行备份是很重要的，这之中是使用系统自带或外部的工具软件将硬盘分区表、引导记录以及CMOS信息等保存到软盘或其它硬盘上，待出现硬盘故障时，它们将成为你修复硬盘的“救命法宝”。
4.注意防毒，注意设置
随着CIH病毒的出现，系统及硬盘防毒的重要性想必也无需笔者多说了吧，安装必要的防毒及系统安全软件是防范病毒或特洛伊木马程序或逻辑炸弹等对硬盘造成损害的要点。
另外，主板BIOS的相关内容要设置得当，特别是对于一些老主板，由于其自动识别硬盘规格的能力不完善，往往会因设置不当而影响硬盘的使用，轻则硬盘不能物尽其用，重则损伤硬盘。
硬盘修复（4）
俗话说：工欲善其事，必先利其器。
我们平时应该熟练掌握几种硬盘维护工具的使用方法，这样当遇到硬盘软故障时才不至于晕头转向、手忙脚乱。
下面我就硬盘的常见软故障简单介绍几种硬盘维护工具的使用方法。
★ 修复硬盘主引导记录 ★ 
由于病毒的破坏或操作上的失误，使硬盘主引导记录和分区表损坏，硬盘将无法启动。
① KV3000 
作为一款著名的杀毒软件，KV3000同样具有非常强大的主引导记录和分区修复的功能。
我们可以先用软盘启动后，执行KV3000，按下F6键，就可查看已经不能引导的硬盘隐含扇区，即查看硬盘0面0柱1扇区主引导信息是否正常，如果在硬盘的0面0柱1扇区，没有找到关键代码，即硬盘分区表关键代码“80”“55 AA ”，那么硬盘本身将不能引导，即使软盘引导后也不能进入硬盘。
这时，可按动翻页键PgDn或PgUp键，在硬盘的隐含扇区内查找，如有，会在表中出现闪动的红色“80”和“55AA”，并响一声来提示你，下行会出现一行提示，“F9 = Save To Side 0 Cylinder 0 Sector 1 !”。
这时，按一下“F9”键，就可将刚找到的、即在表中显示出的原硬盘主引信息,覆盖到硬盘0面0柱1扇区中，然后，机器会重新引导硬盘，恢复硬盘的起动性能。
② FDISK 
用FDISK/MBR覆盖主引导记录的代码区，但不重建主分区表。
适用于主引导记录被引导区型病毒破坏或主引导记录代码丢失，但主分区表并未损坏的情况下。
注意：FDISK/MBR并不适用于清除所有引导型病毒，因此要慎用。
③ FIXMBR 
FIXMBR是专门用于重新构造主引导扇区的小工具，使用方法也简单。
直接运行FIXMBR的情况下它将检查MBR结构，如果发现系统不正常则会出现是否进行修复的提示。
如果回答“YES”，它将搜索分区。
当搜索到相应的分区以后，系统会提示是否修改MBR，回答“YES”则开始自动修复，如果搜索的结果不对，可使用/Z开关符，重新启动系统将恢复到原来的状态。
如果想详细了解FIXMBR的使用方法，可以用/H开关来查看。
★ 修复硬盘分区表 ★ 
① KV3000 
在KV3000的主菜单上，按下F10键，就可对系统的有关参数和硬盘分区表快速测试，如果硬盘分区表不正常，KV3000会先将坏分区表保存到软盘上以防不测，再自动重建硬盘分区表，使硬盘起死回生。
但如果硬盘只有一个分区，而且文件分配表(FAT表)、文件目录表(ROOT表)严重损坏，数据已经都没有了。
那么，用这个功能即使恢复了C盘分区表，也不能使C盘引导，数据也不能恢复。
这时需要配合其它的硬盘修复工具来恢复数据。
如果硬盘还有D、E、...等几个分区，一般情况下，KV3000能找回后面没有被破坏掉的分区，重建一个新的硬盘分区表，然后，再用DOS系统软盘引导机器后，就可进入硬盘后面几个分区，将数据备出后，再将硬盘重新分区、格式化。
KV3000修复硬盘的详细使用方法，大家可以查看KV3000杀毒软件的使用说明文件，也可以到江民网站去查看。
② FDISK 
用FDISK还可以新建立分区、重建主分区表，但这种方法不覆盖主引导记录的代码区。
如果要保证硬盘内数不受破坏，分区时必需与原来的分区相一致，否则数据不保。
具体的使用方法我就不哆嗦了，建议大家使用FDISK的汉化版，很容易上手。
③ DiskMan 
DiskMan过人之处就在于它的硬盘分区表恢复功能，并采用图形界面，以图表方式表示分区表的详细结构。
使用方法详见《宝刀不老的小工具——DiskMan》 
★ 挽救硬盘FAT（文件分配表）和DIR（根目录表） ★ 
如果FAT表损坏,就可能丢失所有文件，即便对DOS很精通的人，要修复FAT表损坏的磁盘文件也不是件轻松的事情。
① NDD（Norton Utilities 8.0） 
启动NU工具包中的磁盘修复程序NDD，在其菜单中选择Options/General确认NDD将进行包括主引导区和CMOS在内的全面检查，然后在主菜单中选择Diagnose Disk对硬盘进行诊断，NDD在发现错误时将会自动报告，并提示错误描述（ Description）和推荐意见（Recommendation），可以根据情况选择修复与否。
修复时注意保存UNDO磁盘，以便恢复操作之用。
在修复过程中，尤其是在表面测试（Surface Test）过程中如果提示读写错误，则说明硬盘存在物理损坏，数据可能会丢失。
在诊断、修复结束后重新启动计算机，若能对C盘进行访问则大功告成，可以通过备份数据、重装操作系统简单地恢复硬盘功能。
否则只能进行恢复操作（ UNDO），尝试手工或通过其他方法恢复。
但NDD（Norton Utilities 8.0）只能在DOS下运行，且不支持FAT32格式。
② SCANDISK 
微软操作系统自带的类似NDD的硬盘检测工具，大家对它应该都不会陌生，因为我们在WIN 9X非法关机后重启时它就会自动运行扫描硬盘，用法有点类似 NDD。
③ CHKDSK 
同样也是微软操作系统自带的DOS下专门用于检查硬盘的工具，CHKDSK/F命令格式专门用来捡回硬盘的丢失簇并释放丢失的硬盘空间，有时我们可以在它运行以后生成的*.CHK文件里找到一些重要的数据。
硬盘的FAT表与根目录随着用户写入和删除文件而不断变化，如果能经常备份FAT表和根目录，当FAT表损坏时用回写FAT表、根目录的方法，可以使硬盘恢复到上一次保存的状态。
当硬盘的FAT表或根目录损坏，需要将保存的FAT表、根目录数据回写时，必须保证FAT表和根目录的起始逻辑扇区号和长度（扇区个数）正确。
★ 恢复误删除的分区 ★ 
① FDISK & formAT 
如果在误删除分区后没有执行过其他分区操作，按照下面的方法一般都能够恢复原来的数据：
执行FIDSK分区程序，重建删除的分区，但是注意要保持分区与原来分区在大小、位置上一致；
重新启动系统到MS—DOS模式，执行“format X:/u/q”（X为误删的扩展分区盘符）。
这时系统首先会警告说：“这是一个大硬盘，如果格式化，数据将全部丢失”，这时选择“YES”；
而后系统会告诉你该分区无法进行快速格式化并问你是否进行“完整格式化”，回答“NO”。
该步骤的关键是加入参数/q（快速格式化），这样进行一次“假格式化”后，如果没有什么意外的话，应该可以访问该分区的数据了。
另外，该方法恢复的分区有可能在再次重启系统后无法访问，虽然仍可以按上面的方法恢复数据，但我们建议恢复分区后备份该分区所有数据，而后执行完整的格式化过程。
★ 硬盘零磁道损坏的抢救 ★ 
① DE （PCTOOLS 9.0） 
如果运行ScanDisk扫描C盘在第一簇出现一个红色的“B”，即说明C盘零磁道损坏！
在DOS下运行DE，先进入Options菜单，选项Configuration，按空格去掉Read Only（只读模式）前面的“√”号（按Tab键切换），保存退出。
接着选主菜单Select中的Drive；
进去后在Drive type项选Physical，按空格选定，再按Tab键切换到Drive项，选中hard disk，然后选OK回车。
之后回到主菜单，打开Select菜单，这时会出现Partition Table，选中并进入，之后就可以看见硬盘的分区表信息。
例如：该硬盘有两个分区，那么在硬盘的分区表信息中我们可以看到1分区就是C盘，该分区是从硬盘的0柱面开始的，那么将1分区的Beginnig Cylinder的0改成1就可以了。
保存后退出。
重新启动进入BIOS，运行自动侦测硬盘可以看到CYLS的个位数减少了一位（例如：782→781），保存退出，重新分区格式化，大功告成。
但DE不支持FAT32格式且只在DOS下运行，而且PCTOOLS 9.0现在已经不太好找了，想当年它与Norton Utilities 8.0在工具软件之中是两朵奇葩…… 
② PQMAGICT 
大名鼎鼎的分区魔术师（Partition Magician）可能是大家最常用的硬盘分区工具。
PQMAGICT是它的DOS版的工具，用它来修复损坏的硬盘零磁道可谓易如反掌。
假设一块硬盘有两个分区（C、D），用ScanDisk检查D盘时显示D盘零磁道损坏，因此不能用formAT不能进行格式化，如果用FDISK重新调整逻辑D盘的大小，使D盘的逻辑0磁道向前或向后移动，跨越这个坏磁道，但这样一来，就会破坏C盘上的所有数据。
因此这时我们必须借助PQMAGICT的威力。
首先在DOS下启动PQMAGICT（必须先把PQ COPY到C盘），选择查看D盘，此时屏幕会显示D盘的分区和容量信息，然后选择Option菜单中的Reszie Selected Partition，用鼠标拖动左边的容量标尺，让D区减少一点，或者直接手动输入分配D区的容量大小，目的是空出坏的区域，确定后PQMAGICT便开始对D区进行转换，完成以后退出PQMAGICT。
这样对C盘上的文件秋毫无犯，且D盘又重见天日了。
② SPecialFDisk 
SPecialFDisk在建立主分区时可由使用者自定启始柱面，故可跳过损坏的柱面区域。
此招是SPecialFDisk的一个必杀技，使用方法请详见《宝刀不老的小工具——SPecialFDisk》 
★ 抢救被“逻辑锁”锁定的硬盘 ★ 
① DM 
中了“逻辑锁”的硬盘不能用软盘、光驱、双硬盘正常启动，但我们可以利用软件DM为硬盘解锁。
因为DM是不依赖于主板BIOS识别硬盘的硬盘工具，就算在主板BIOS中将硬盘设为“NONE”，DM也可识别硬盘并进行分区和格式化等操作。
首先你要把DM拷到一张系统盘上，接上被锁硬盘后开机，按DEL键进入BIOS设置，将IDE硬盘设为“NONE”（这是关键所在!）。
保存设置后退出，系统即可“带锁”启动。
启动后运行DM，你会发现DM可以识别出硬盘。
选中该硬盘进行分区格式化就可以了。
但是，这种方法的弱点是硬盘上的数据将全部丢失。
硬盘软故障的产生原因比较复杂，病毒、误操作，甚至一次意外掉电都可能使硬盘崩溃。
因此平时一定要养成备份硬盘重要数据的习惯，在关键时刻才能顺利地解决问题。
硬盘修复（5）
用PM修复0磁道损坏硬盘 
笔者在单位任机房管理员一职，一日一台联想主机启动不了，屏幕提示“磁盘无法引导”，怀疑是感染病毒导致引导文件被损。
故从软盘启动，先备份出重要资料，尔后用Ghost将D盘上的镜像文件恢复到C盘，回车重新启动，谁知还是提示“磁盘无法引导”。
细一思量，难道会是硬盘引导区坏了？
Scandisk，哇，零磁道损坏！
正打算放弃时，突然想到分区魔术师PM，如果能用它将前面的分区向后移动，让出损坏区域，把对硬盘操作的一些重要信息存放在没有损坏的位置，是不是可以呢？
由于我的PM分区魔术师是3.X版本的自解压文件，不支持32位分区，故先用DOS启动盘引导，分为C、D两区，激活C区；
重启动先格式化D盘展开，执行PQMAGLC.exe对C区“Resize”，用鼠标拖动右边的尺度条，让C区减少了一点（1-10MB），目的是空出坏的区域，确定后PM便开始了对C区的转换，完成后C区减少了一点，再右键单击C区选择Move项，用鼠标拖动尺度条向右移动，将上面空出的区域移到最前面即磁盘损坏的区域，确定即可。
重启，重新装入Windows系统，余下的我就不必罗嗦了。
现在，这块硬盘已可正常服役了。
用DM修复硬盘0磁道损坏一例
一般硬盘的0磁道损坏后修理十分困难，而且也给很多朋友造成不便。
不过，我们可以利用硬盘工具进行有效修复。
首先从网上下载DM万用版并制作好DM启动软盘，然后执行DM并进入其主界面。
在主界面中按下Alt+M组合键进入DM的高级模式，将光标定位到“(E)dit/View partitions”(编辑/查看分区)选项，按回车键之后，程序要求选择需要修复的硬盘，选中硬盘，按回车便进入了该硬盘的分区查看界面。
在分区列表框中选中“1”号分区，此时上面的分区信息栏将显示该分区信息，例如分区格式、容量、开始的柱面、结束的柱面等。
此时需要记住开始柱面中的“0”和结束柱面序号。
保持光标定位在1号分区上，然后按下Del键删除该分区，在出现的确认删除分区的界面中选择“Yes”并回车，此时1号分区便删除了。
保持光标停留在1号分区上，然后按下Ins键添加分区。
在出现的分区类型界面中选择“DOS-FAT32”选项，按回车后便到了此时修复的关键步骤——“Select Entry Mode”(设置容量模式)。
在该界面中一定要选择“(C)ylinders”(柱头)选项，回车后便进入了容量输入界面。
在该界面中，是按照柱面来输入容量的。
对于第一个分区(也就是C盘)而言，都是从第1个柱面开始，但现在我们必需将前面的“0”改成“1”，至于后面该分区结束的柱面数没有必要修改，可以根据之1号分区的结束柱面数进行填写。
重新划分好1号分区后，返回到分区界面，将光标定位到“Save and Continue”(保存并继续)选项保存设置，然后按下Esc键推出DM，最后根据提示重新启动电脑。
重新启动电脑就可以了。
硬盘大量坏道的解决
几天前，笔者用了多年的老硬盘还是好好的一点问题都没有。
可到了昨天，居然出现了上百个坏道!
开机引导硬盘之后硬盘发出巨大的疯狂读盘的声音，就象是两片金属摩擦的声音，这种情况的出现，我想不是磁头错位就是硬盘出现坏道了。
我毫不犹豫地用启动盘引导电脑启动，马上输入SCANDISK，结果当然是惨不忍睹了。
5个区总共算下来，上百个坏道，而且大多是C盘里(C盘装的游戏太多了)怪不得无法启动系统，系统盘全是坏道，什么重要的文件也找不到了。
在万般无奈之下，笔者也没有什么可犹豫的了，只能低格(低级格式化)。
实在不行的话我可就又要另外购买一块新硬盘
(由于我刚卖掉了极品P4 1.8G，换回一个P4 2.4C，本以为终于可以进入2G时代了，怎么也没想到会出这档子事，笔者感叹天有不测风云呀) 
没有办法，我只好重新找到主板驱动程序盘(我的主板是升技IT7-MAX2 V2.0)，驱动盘里带了主板专用低格工具。
时间一分一秒的过去了，半天的时间下来我的40G的硬盘低格后还是没有什么作用，系统依然报告有许多坏道。
笔者在这里忠告大家低格硬盘作用不一定很大，有时候很难消除硬盘坏道，而且非常磨损硬盘。
所以大家在低格前要提前做个心理准备。
已经做到这一步，再次费力的找出磁盘扇区修复工具，重新对硬盘进行分区，尽量把坏的扇区磁道分成几个小区，然后删除掉，让操作系统不再访问有坏道的区域。
我用SCANDISK查看了磁盘坏道的大概位置，记好他们所处的硬盘扇区位置，记录下来坏道的位置之后，我就分析了一下应该用哪种分区方法好。
如果我的前1G-5G里没有坏道，那么就不用说了，用FDISK划个C驱，其他的分区就可以采用把坏道单独分一个或者几个分区，最后删除掉这些拥有坏道的分区。
我的原则是要首先保证C盘即系统盘不能有坏道，其次就是全面的屏蔽掉坏道的存在。
如果硬盘的前1G-5G里有不少坏道，那么就要首先保证硬盘最开始的前2M是正常的。
把他划分为C盘，而后其他的为扩展分区，再把其余的坏道划成一个区，可以把它们划为几十兆一个，分区完之后删掉这些包含坏道的分区就可以了。
而后装上Windows系统，把系统目录放到D盘，在分区的时候保证这个D盘完全没有坏道。
这样就可以了。
笔者现在的系统就是这样，C盘就有10M数据，引导WIN9X启动.原来40G的硬盘现在只有38G可用。
如果硬盘的0磁道有问题，那就没有别的办法了，只有换一个了。
通过以上这种方法不仅可以保证系统的正常运行，更大的好处是防止硬盘坏道的扩散。
把坏道单独分一个或者若干分区里面，并且删除这些包含坏道的分区，可以有效防止操作系统再去访问这些坏道，引起坏道的扩散。
不过需要提醒大家的是，坏道产生的原因多种多样，并不一定全是物理损坏，甚至有的正版软件会在硬盘上生成密钥文件，只能该软件访问，SCANDISK也会认为这是坏道，这种情况是正常的，还有一种情况就是逻辑坏道，并不是硬盘真正的坏掉了。
这种逻辑坏道可以通过重新分区格式化解决，要是不行，可以试试低格。
一般来说不是很严重的故障都能够解决。
当然，物理坏道通过低格的办法是不能够根除故障的。
解决硬盘坏道我有绝招
硬盘是计算机各配件中最娇贵的东东，由于硬盘上存放着用户大量珍贵的数据，所以硬盘出了问题是一件令人非常不愉快的事情。
硬盘最常见的问题就是出现坏道，硬盘坏道分为物理坏道和逻辑坏道。
如何判定我们的硬盘到底存在哪种坏道呢？
通过查找大量电脑杂志，总结后可归为三类：
1.用SCANDISK命令扫描后还有问题的属于物理坏道2.重新分区并格式化后还有问题的属于物理坏道3.低格硬盘后还有问题的属于物理坏道。
但情况果真如此吗？
笔者将用自己的亲身经历来回答这个问题。
笔者有两块硬盘，分别是昆腾火球2.1G硬盘和迈拓星钻30G硬盘。
近日两块硬盘几乎同时出现坏道，先后选用Windows自带硬盘工具以及诺顿磁盘医生进行尝试修复，但没有成功，坏道依然存在。
没办法，只好忍痛把硬盘重新分区并格式化，但坏道还是没有消失。
于是在网上寻找各种磁盘工具，最终让我找到DM（低格）工具软件，发现它有一个功能可以把整个硬盘清零。
对，就用它试试（目前DM的最高版本是9.56，这个软件可以在驱动之家下载得到）。
用软盘启动计算机，在纯DOS环境下进入DM程序。
首先选择高级模式（Advanced options），接着选择维护硬盘选项（Maintenance options），再选择“zero filling”进入清零。
清零过程较慢，请大家耐心等待。
清零后重新启动计算机，完成分区格式化（也可以用DM接着完成上述操作）。
如果硬盘真的是逻辑坏道，此时坏道已经被修复，用迈拓专用工具软件扫描硬盘顺利通过。
我的两块硬盘经过这样处理后，再没出现问题。
看来我的硬盘存在的确实是逻辑坏道，而这些坏道用FDISK、FORMAT等命令均无法修复，看上去很像物理坏道。
如果有同样遭遇的朋友，不妨用清零试试。
另外要说的是，清零只不过是在硬盘上重写数据，不会对硬盘造成任何伤害，这样也就避免了低格对硬盘带来的伤害
硬盘修复（6）
硬盘整盘拷贝技术
对普通电脑用户而言，实现软盘的整盘复制拷贝是一件轻而易举的事情，DOS、Windows、UNIX等各种操作系统下的软盘复制拷贝专用软件、工具随处可见，可信手拈来帮助大家实现软盘与软盘之间的复制与拷贝。
但是，要实现硬盘与硬盘之间的整盘复制与拷贝，就不是一件很容易的事了。
但在现实中，由于硬盘升级、硬盘备份、硬盘操作系统迁移、预装机等很多原因，我们常常需要将一个硬盘的整盘内容全部复制到另一个硬盘上，这就要求我们掌握好一种或数种硬盘复制方法。
下面，笔者根据自己的实践，将硬盘整盘复制拷贝方法整理介绍出来，希望对大家有所裨益。
在复制拷贝前，需要做好如下准备工作，首先必须将你新的硬盘(目标盘)跳线开关置于从盘(SLAVE盘)位置，作为二硬盘挂接到机器内，开机自检，进入CMOS设置有关参数，使机器识别到二硬盘的存在；
其次，准备好DOS系统启动软盘，并在启动盘上拷入必要的工具软件(后文将介绍到)；
最后，将机器从软盘上引导，启动成功后，即可开始硬盘的整盘复制工作了。
根据硬盘容量的大小及拷贝工具的不同，整盘的复制拷贝方法，可分为三大类。
一、精确复制法
执行NU8.0工具中的DISKEDIT程序(需NLIB200.RTL库，如为中文版，还需CHINA16.FNT的支持)，以中文版为例，进入DISKEDIT主程序后，按ALT+T键选择(T)工具栏，再执行(N)配置项，将(R)只读模式改为允许读写，确认(0)可以后回主程序。
再选中(0)对象，选择(D)驱动器，在磁盘类型中选择物理磁盘，确认后，在左窗口中会出现硬盘1和硬盘2，选择硬盘1后，按下ALT+W键，出现一个写的窗口，选择(P)物理扇区，再选择硬盘2，确认后，硬盘1上的所有扇区内容将被逐一写到硬盘2上对应扇区中，从而实现硬盘的整盘复制拷贝。
此种拷贝法要求目标盘与源盘的容量大小完全一致，复制耗时长，需一至数小时。
但由于是源盘到目标盘之间对应扇区的精确复制，因此称为精确拷贝法，支持各种磁盘操作系统、磁盘分区及大部分加密软件的复制(除非加密软件以硬盘系列号为加密对象)。
实现精确拷贝法的软件还有一些，如IBM公司的hddcopy，但这些软件市面上一般很难见到。
实现精确拷贝法可靠性最高的，还是诺顿工具系列中的Diskedit，也最易获得。
二、快捷复制法
这就是使用硬盘专用复制工具GHOST，GHOST是美国人编写的一个目前最好的硬盘专用复制拷贝共享软件，国内的用户可在电脑报配套光盘上的第一、第三辑上找到它。
GHOST的使用也非常简单，键入GHOST回车，选择LOCAL/SERVER.→CLONEDISK TO DISK→DRIVE 1→DRIVE 2→调整有关分区参数→开始执行。
GHOST的功能非常强大，它不但支持各种磁盘操作系统和分区，支持双机并口互连，还能将磁盘的全部内容形成一个压缩映像文件保存在另一个硬盘上，必要时再展开拷贝到新的硬盘上。
GHOST拷贝时间特快，十几分钟到几十分钟就可搞定一个新的硬盘，特别适合于硬盘的升级或操作系统的迁移复制。
GHOST要求目标盘的容量大于或等于源盘，若目标盘的容量大于源盘，则目标盘新的分区容量大小还可以进行适度调整。
但由于GHOST是共享软件，有试用期限的限制(即机器系统日期和硬盘上文件形成的日期都不能超过规定的试用期限)，要想无限制使用，就必须按规定进行注册，拥有合法的用户号和密码。
当然，我们也可通过修改系统日期和使用PCTOOL9.0中的FILEFIND程序将硬盘中的文件日期修改在规定期限以内的办法来使用GHOST，不过这种方法比较麻烦。
另外，使用GHOST复制的硬盘，有些加密软件会需要重新安装，而且GHOST无法将大盘的内容复制到小盘上，即使大盘的实际内容远远低于小盘的容量。
三、简易拷贝法
1.若硬盘为单一的DOS/Windows 3.1操作系统，则可将目标盘根据需要参照源盘进行分区和格式化，使之具备基本的DOS自举能力；
再使用NORTON COMMAND工具如NC4.5选定源盘上某分区目录和文件(可选择该分区上所有的文件和目录，含系统、隐含、只读等全部属性)，按F5键，输入目标盘所在的分区符，即可实现全部复制拷贝。
2.若硬盘为DOS/Windows 95混合型，则不再需要DOS系统启动盘，开机后直接进入Windows 95系统，再进入Windows 95下的MSDOS窗口方式，用FDISK和FORMAT/S命令对目标盘进行分区和带系统文件复制的格式化后，退出，重新启动机器，再从Windows 95中进入MSDOS窗口方式，键入XCOPY32 C：\*.* D:\*.* /S/E/C/H/K/Y或XCOPY C：\*.* D:\*.* /S/E/C/H/K/Y即可将源盘C中的全部内容复制到目标D盘中，注意拷贝命令中的6个参数是复制成功的关键，/S为复制子目录，/E为复制空目录，/C为即使拷贝遇到错误也不终止下来
(因Windows 95在拷贝到WIN386.SWP时会出错终止，但该文件只是动态生成的临时存储文件，并不影响拷贝的完整性)，/H为拷贝系统和隐含属性的文件，/K表示拷贝文件的属性，/Y表示自动覆盖目标盘上同名文件。
需指出的是，对于DOS/Windows 95混合型的硬盘，由于存在长文件名，一般DOS下的文件拷贝工具是不支持的，NC工具也不例外，所以，必须使用Windows 95下自带支持长文件名拷贝工具XCOPY或XCOPY32。
注意若非Windows 95下的DOS窗口，启动的是Windows95的纯DOS方式(即COMMAND PROMPT ONLY)，则XCOPY或XCOPY32此时仍然是不支持长文件名且不支持隐含和系统文件的拷贝的，在不同DOS方式下键入XCOPY32/或XCOPY/可比较出拷贝参数的不同。
此种方法最大的优点是对目标硬盘的容量大小没有要求，操作比较简单，安全系数高。
但只适用于DOS/Windows 95操作系统的硬盘，拷贝速度较慢，不能复制加密软件。
在实际中，还有一种情况，也就是目标硬盘因种种原因不便或无法作为二硬盘挂接到机器内，那么如何实现此类硬盘的整盘复制拷贝呢
如便携机与便携机之间，便携机与台式机之间的硬盘整盘拷贝复制。
我们可通过采用并口通信线将两台机器的打印口连接起来，再准备两片DOS启动盘，拷入必要的工具软件(前面都已有介绍)，另外还需拷入INTERLNK.EXE和INTERSVR.EXE两个程序，在源机上的DOS启动盘的CONFIG.SYS中加入DEVICE=INTERLNK.EXE一行，分别启动两台机器。
若采用精确复制法或简易拷贝法，则可在源机上执行INTERLNK，在目标机上执行INTERSVR；
若采用快捷复制法，则分别在两台微机上运行GHOST.EXE，选一台作主机(MASTER)，选中菜单条“LPTMASTER”，另一台作从机(SLAVE)，选中菜单条“LPT SLAVE”。
这样就建立起了两台微机之间的互连，再参照前面介绍的实现方法同样可实现硬盘的整盘复制，不过需要注意本地盘和异地盘的对应关系。
具体采用哪种方法来实现硬盘的整盘拷贝复制，这就需要根据目标硬盘的容量大小、源盘的内容、复制的要求以及你所拥有的工具来选择一种合适的拷贝复制方法。
硬盘分区丢失、坏道等相关问答五则
硬盘分区丢失后应如何处理
问：我安装了一个游戏，重新启动后发现硬盘上只剩下C盘了，我的D、E、F盘都没了。
请问这到底是怎么回事﹖我要急死了，因为D盘上我有非常重要的东西。
在DOS下也看不到其它的盘符，只有C盘，请问我该怎么办？
另外，我有位朋友的硬盘在前两天安装系统的时候，由于疏忽，导致硬盘分区表数据丢失，1个UNIX分区和7个NTFS分区全部丢失，现在整个硬盘只剩下一个未分区的空间，重要数据全部没有了，请问如何处理？
答：分区表位于硬盘的主引导扇区中，如果误操作或受到病毒攻击，就可能遭到损毁，导致硬盘的分区及其数据丢失。
不过分区表的损坏通常可以用相关的工具软件来尝试修复。
比如我们可以使用KV3000软件来修复硬盘数据，手动重建主引导扇区和分区表。
用软盘启动计算机并运行KV3000.EXE，进入KV3000主画面，按下F6键启动搜索硬盘分区的功能，再按下F2可以搜索出硬盘各个分区，接下来按F2查看C盘BOOT区。
如果C盘BOOT扇区正常，则可以用KV3000的F10功能键自动重建C盘主引导扇区和分区表。
另外我们也可以使用另一款磁盘分区管理工具DiskMan来修复分区表。
DiskMan可通过未被破坏的分区引导记录信息重新建立分区表，非常适合用来修复损坏的分区表。
在菜单的工具栏中选择“重建分区表”，DiskMan即开始搜索并重建分区。
但是，需要注意的是无论使用什么软件及方法，都不能做到百分之百地修复分区表。
所以建议读者在硬盘分区后，最好能备份一份分区表在软盘或光盘上，一旦出现分区丢失的情况，就能够很容易恢复了。
下载地址：http://www.mydown.com/servlet/my ... g=4&objID=53403。
硬盘出现坏道后的处理
问：我的硬盘是20GB西部数据，以前工作一直正常，最近开始出现异常，表现为操作系统文件丢失，不能正常启动。
后来用软盘启动后检测到有很多坏道。
因为硬盘上有很多重要数据，所以我想问问这个硬盘还有救吗？
是什么原因导致硬盘出现坏道呢？
答：硬盘出现坏道是硬盘最常见的“病症”之一。
硬盘坏道可分为逻辑坏道及物理坏道两大类。
逻辑坏道是由于非正常关机等软件问题引起的，一般可以通过格式化等方法加以去除。
而物理坏道则是盘体因冲击、灰尘等原因受到了物理损坏，物理坏道通过一般方法是无法修复的。
根据你的情况，建议你使用EasyRecovery软件进行修复，能用EasyRecovery找回数据、文件的前提就是硬盘中还保留有文件的信息和数据块。
但在你删除文件、格式化硬盘等操作后，并在对应分区内写入大量新信息后，这些需要恢复的数据就很有可能被覆盖了！
这时，无论如何都找不回来了。
所以，为了提高数据的修复率，这时就不要再对要修复的分区或硬盘进行新的读写操作，如果要修复的分区恰恰是系统启动分区，那就要马上退出系统，用另外一个硬盘来启动系统（即采用双硬盘结构）。
EasyRecovery下载地址：http://www.mydown.com/servlet/my ... g=4&objID=35389。
为什么开机后偶尔找不到硬盘
问：这个问题已经出现快一年了，经常（不是每次）在开机时都会出现硬盘滞后启动（硬盘没有转动，听不到声音）的情况，主板因为找不到硬盘而发出两声短响。
然后过了十几二十秒后才听到硬盘启动的声音，然后机器开始正常运行。
在休眠后唤醒时也会出现这个问题。
除此之外，并没出现什么使用上的问题。
请问怎么解决？
答：从你谈到的现象看，你遇到的问题有可能是硬盘存在硬件故障导致，比如硬盘的机械控制部分或传动臂有问题，或者盘片有严重损伤。
也可能是因为IDE电缆线有问题或接触不良。
另外主板或电源等其他配件有问题也会导致此类故障。
请首先用“替换法”确定问题所在。
若确为硬盘问题，只能尽快更换。
硬盘烧毁后数据的挽救
问：我有一电脑，近期突然不能启动（屏幕无反应）经查电源烧坏。
更换电源后故障依旧
将硬盘换到正常电脑中，不能正常工作，估计可能烧坏，但硬盘保存有重要数据，请问如何拯救硬盘中的数据？
答：硬盘被烧坏后，数据是否能挽救主要看你的运气了。
如果运气好只是电路板上的元件烧坏，而且又能够找到相应的配件，那恭喜你，只须更换元件，你的硬盘就会完好如初了。
如果无法找到需要更换的元件，或者磁头被破坏，那你需要送到有专门读盘机的专业数据恢复点，当然所需付出的金钱也是不菲的。
如果是盘片本身遭到了破坏，用任何方法数据都无法恢复了。
硬盘为何忽然停止反应
问：我的电脑最近在运行中经常出现硬盘忽然停止反应的现象，此时硬盘灯一直亮但是却听不到硬盘读盘的声音，然后在几秒或数十秒后恢复正常。
请问是何原因，如何处理？
另外，请问辨别硬盘是“硬故障”还是“软故障”最简便的方法是什么？
答：首先从软件方面找原因，建议你在备份重要数据后将硬盘重新分区格式化，并重装系统。
如果问题仍然存在，而且硬盘也没有其它异常，则可能与迈拓硬盘的MaxSafe数据保护技术有关。
好像可以使用特定的软件将它关闭，具体请你咨询一下相关厂商的技术人员。
硬盘所谓的“软故障”，也叫“逻辑故障”，实际上就是软件问题，比如主引导扇区或分区表被破坏导致系统无法启动、非正常关机后引起的逻辑坏道等，一般通过磁盘工具处理或重新分区格式化即可解决。
相应的凡是不能通过重新分区格式化解决的故障，比如电路板上的元件烧毁、磁头故障导致主板BIOS无法识别、出现“低格”都无法消除的物理坏道等问题，就是硬盘的“硬故障”，也可叫作“物理损坏”。
硬盘修复（9）
编者按：在计算机的配件中，最娇气也是用户最担心的恐怕就是硬盘了。
硬盘如果出现故障，则意味着你的数据安全受到了严重威胁，这是大多数用户所无法容忍而又必须面对的残酷现实。
在众多的硬盘故障中，坏道的出现以及分区表的破坏可能是最常见和最让用户头疼的问题了。
如果你遇到了这些问题，你会采用什么样的方法解决呢？
本文以及B5版的文章或许可以给你一些有用的建议。
硬盘有坏道的表现
硬盘使用久了就可能出现各种各样的问题，而硬盘“坏道”便是这其中最常见的问题。
硬盘出现坏道除了硬盘本身质量以及老化的原因外，主要是平时在使用上不能善待硬盘，比如内存太少以致应用软件对硬盘频繁访问，对硬盘过分频繁地整理碎片，不适当的超频，电源质量不好，温度过高，防尘不良，震动等。
硬盘坏道分为逻辑坏道和物理坏道两种，前者为软坏道，通常为软件操作或使用不当造成的，可用软件修复；
后者为真正的物理性坏道，它表明你的硬盘磁道上产生了物理损伤，只能通过更改硬盘分区或扇区的使用情况来解决。
如果你的硬盘一旦出现下列这些现象时，你就该注意硬盘是否已经出现了坏道：
（1）在读取某一文件或运行某一程序时，硬盘反复读盘且出错，提示文件损坏等信息，或者要经过很长时间才能成功；
有时甚至会出现蓝屏等；
（2）硬盘声音突然由原来正常的摩擦音变成了怪音；
（3）在排除病毒感染的情况下系统无法正常启动，出现“Sector not found”或“General error in reading drive C”等提示信息；
（4）FORMAT硬盘时，到某一进度停止不前，最后报错，无法完成；
（5）每次系统开机都会自动运行Scandisk扫描磁盘错误；
（6）对硬盘执行FDISK时，到某一进度会反复进进退退；
（7）启动时不能通过硬盘引导系统，用软盘启动后可以转到硬盘盘符，但无法进入，用SYS命令传导系统也不能成功。
这种情况很有可能是硬盘的引导扇区出了问题。
如果出现上述错误，你就需要加倍小心，这说明你的硬盘已经出现坏道了！
硬盘坏道的修复
1.修复逻辑坏道
首先从最简单的方法入手。
借助Windows下的磁盘扫描工具，在资源管理器中选中盘符后单击鼠标右键，在弹出的驱动器属性窗口中依次选择（如图1）“工具→开始检查”，将扫描类型设定为完全扫描，并选择自动修复错误，然后点击开始，扫描时间会因磁盘容量及扫描选项的不同而有所差异（如图2）。
如果逻辑坏道存在于系统区导致无法正常启动，我们可以使用Windows 98/Me的启动盘，在DOS提示符下键入：Scandisk 盘符，按回车，一旦发现坏道，程序会提示你是否要Fix it（修复），选择Yes开始修复，许多因系统区出现逻辑坏道无法正常启动Windows的问题一般都可以用此方法解决。
因为Windows 98/Me在很大程度上只是自动修复逻辑坏道，而不能自动修复物理坏道，所以，事实上第1种方法往往不能奏效。
如果碰见物理坏道我们应该怎么办呢？
2.用Scandisk检查物理坏道
对于物理坏道Scandisk就无能为力了，它只能将其标记为坏道以后不再对这块区域进行读写操作，物理坏道具有“传染性”会向周边扩散，导致存储于坏道附近的数据也处于危险境地。
用Scandisk时在查到坏道时停止，注意观察Scandisk停止时会数值，如22%，假设硬盘总容量为2GB，2GB×22%=0.44GB，硬盘出现坏道的起始位置大致为440MB处，由于硬盘坏道易向周边扩散，所以必须留足够的缓冲区，将硬盘第一个分区容量设定为400MB，其余1.6GB按200MB为单位分为8个区，使用Scandisk检查所有分区，将无法通过Scandisk检测的分区删除或隐藏，以确保系统不再读写这些区域。
其余相邻的分区可合并后使用。
分区、隐藏、删除、合并等操作可使用图形化界面的PartitionMagic或DiskMan等工具软件进行。
3.用软件隐藏物理坏道
用PartitionMagic5.0/6.0对硬盘进行处理。
PartitionMagic可以在不破坏数据的情况下对硬盘重新分区、动态改变分区大小、改变分区的文件格式、隐藏或显示已有分区等等。
将PartitionMagic5.0/6.0的DOS版拷在软盘上，用Windows 98/Me启动盘引导系统，运行软盘上的PQMAGIC.EXE。
然后进行扫描硬盘，可以直接用PartitionMagic中Operations菜单下的“check”命令来完成，标记了坏簇后，可以尝试着对它进行重新测试，方法是在Operations菜单下选择“Advanced/badSector Retest”；
把坏簇分成一个（或几个）区后，再通过HidePartition菜单项把含有坏道的分区隐藏，以免在Windows 98/Me中误操作。
特别提示：如果没有经过格式化而直接将有坏道的分区隐藏的话，那么该分区的后续分区将由于驱动器盘符的变化而导致其中的一些与盘符有关的程序无法正确运行。
解决的办法是利用Tools菜单下的DriveMapper菜单项，它会自动地收集快捷方式和注册表内的相关信息，立即更新应用程序中的驱动器盘符参数，以确保程序的正常运行。
另外，也可以尝试用DiskMan做这些工作，在这里就不详细的介绍了。
4.修复硬盘0扇区坏道
对于硬盘0扇区损坏的情况，虽然比较棘手，但也不是无可救药，我们在这里给大家介绍两种方法。
第一种方法：我们借用DiskMan这个软件来修复。
具体方法如下：
①在纯DOS模式下运行DiskMan，在“硬盘”菜单中选择驱动器符号，这时主界面中显示该硬盘的分区格式为FAT32，起始柱面0，起始磁头1，总容量为2GB；
②然后依次进入“工具→参数修改”（或按F11），在弹出的修改分区对话框中，将起始柱面的值“0”改为“1”；
③按确定退回DM主界面并按F8保存修改结果。
修改后需要重新格式化硬盘。
第二种方法：我们用部分人比较熟悉的Pctools9.0软件中的DE工具。
具体方法如下：
①用Windows 98/Me启动盘启动，运行Pctools9.0目录下的DE.EXE，先进入Options菜单，选Configuration（配置），按空格去掉Read Only（只读）前面的钩（按Tab键切换），保存退出；
②接着选主菜单Select（选择）中的Drive（驱动器）；
③进去后在Drive type（驱动器类型）项选Physical（物理的），按空格选定，再按Tall键切换到Drives项，选中Hard disk（硬盘），然后选OK回车；
④之后回到主菜单，打开Select菜单，这时会出现Partition Table（分区表），选中并进入，之后出现硬盘分区表信息；
⑤如果硬盘有两个分区，l分区就是C盘，该分区是从硬盘的0柱面开始的，那么，将1分区的Beginning Cylinder（起始柱面）的0改成1就可以了；
⑥保存后退出；
⑦重新启动，按Delete键进入COMS设置，选“IDE AUTO DETECT”，可以看到CYLS比原来减少了1，保存退出，重新分区，格式化，至此大功告成。
提示：在修改之前先将硬盘上的重要资料备份出来，而且Pctools9.0不能在用FAT32分区的硬盘和Windows下运行，但可以在FAT16硬盘中运行。
修复后一定要在CMOS中重新侦测硬盘，再分区和格式化，因为只有对硬盘作格式化后才会把分区表的信息写入1扇区（现在作为0扇区了）。
5.低级格式化修复坏道
上述所有办法都不能奏效，又不甘心硬盘就此报废，你就可以考虑使用低级格式化处理硬盘故障。
但低级格式化会重新进行划分磁道和扇区、标注地址信息、设置交叉因子等操作，需要长时间读写硬盘，每使用一次就会对硬盘造成剧烈磨损，对于已经存在物理坏道的硬盘更是雪上加霜，实践证明低格将加速存在物理坏道的硬盘报废，而对于逻辑坏道，则根本无须使用低格程序作为修复手段。
另外低格将彻底擦除硬盘中的所有数据，这一过程是不可逆的。
因此低格只能在万不得已的情况下使用，低格后的硬盘要使用Format命令进行高级格式化后才能使用.
硬盘修复（10）
硬盘有“硬伤”的处理方法
现在国内比较流行的下载工具就是BT了。
在使用BT是否对硬盘有伤害这个问题上，诸多论坛里面都有一定的争论。
硬盘本身就是拿来用的如果怕被伤害，最好的办法就是不用它。
硬盘的损坏很大程度上和使用环境和个人使用习惯有关，这一点不在本文讨论范围之类，这里先谈谈“硬盘损坏”的问题。
硬盘损坏有时候只是分区表或者主引导扇区本身出错，这是属于“软伤”可以通过简单修复挽救，有时候处理的好，硬盘数据还不会丢失。
但是有些时候硬盘可能出现“硬伤”，是盘体或者电路出了问题，就不是简单处理所能及的了。
许多人遇到BIOS中检测不到硬盘或报错的时候，就将其报废。
如果开机后，硬盘在自检时能听到磁盘旋转的声音，估计主电机和控制电路板均无故障，还是有挽回余地的。
需要注意的是，硬盘是一种精密的器件，很脆弱，维修前应先将双手洗净，释放掉人体带有的静电再进行操作。
无法找到硬盘的情况
对于出现“HDD Not Detected”错误提示的硬盘，首先检查硬盘外部数据信号线的接口是否有变形，接口焊点是否存在虚焊。
排除以上的可能后，取下硬盘后盖，露出电路控制板。
拧下控制板上的固定螺丝，将控制板与硬盘主体分离。
这时可以看见硬盘主体的两排弹簧片。
一排作为主电机的电源，另一排作为硬盘主体的磁头机械臂驱动线圈电源以及硬盘主体与电路控制板间数据传输接口。
对于无特殊封装的硬盘，往往可以看见弹簧片与控制电路板对应部位均有灰尘。
用脱脂棉蘸无水酒精清洁，对弹簧片变形的部位校形，并除去氧化层，一般情况下均可恢复正常。
如果以上处理无效，那就得打开硬盘主体。
选择一个灰尘很少的环境，拧开硬盘前盖的螺丝(有的是用胶粘牢)。
取下硬盘的前盖，这时就可清楚地看到盘面。
首先用数字万用表检测磁头机械臂驱动线圈是否断路。
该线圈的正常阻值为20Ω左右。
其次检测磁头上的连线是否断开。
每张盘面的两侧均有一个磁头，每个磁头均有两根连线接到磁头机械臂上的集成芯片上。
该芯片常见的型号为H1710Q，作用是将磁信号转变为电信号，再送到电路控制板处理。
磁头阻值应在23Ω～26Ω之间。
若磁头阻值较大，说明磁头损坏。
磁头连线与芯片H1710Q相连，H1710Q对应脚阻值应在1.7kΩ左右，若在1.2kΩ以下说明该芯片已被击穿，可与排线一起更换。
若磁头上的连线断路，可用直径0.2mm的优质漆包线取代。
一端压在磁头的金属弹片上，另一端焊在H1710Q相应的脚上。
注意将漆包线卡在机械臂相应的卡槽内，并用少许502胶水固定，防止硬盘转动时与漆包线相摩擦。
将硬盘各部分复原后，最后用702硅胶将硬盘周围封死，防止灰尘进入。
由于磁头体积很小，不易将漆包线卡在上面，最好在放大镜下操作。
这时千万不可用力过猛，否则会造成磁头损坏，所以要小心加小心。
经这样修复开机后硬盘可恢复正常。
提示硬盘出错的情况
对于出现提示“HDD Controller Error”错误的硬盘，大都是由于某种原因造成硬盘主引导记录(MBR)上文件受损。
MBR位于0磁头/0柱面/1扇区上，由Fdisk.exe对硬盘分区时生成。
若MBR受损，微机会提示HDD Controller Error，实际上是零磁道上文件损坏，这时格式化是解决不了问题的，必须用专用软件来处理。
首先用系统盘在A盘启动后，运行Scandisk命令检查C盘。
若零磁道未损坏，只需用Norton8.0将该磁道上的文件修复即可。
具体做法为：找一台内置硬盘与待修硬盘型号规格完全相同且装有Norton8.0版软件的电脑，将待修硬盘与硬盘电源线相连接，但硬盘信号线不接，跳线不变。
①开机后运行Disk Edit命令，从菜单Tools中点取CONFIGURATION项，将Read Only项取消；
②从下拉菜单O-biect中选取Driver项，将Hard Disk类型设置为Physical Disk，点击OK项确定；
③从Ob-ject菜单中选取Partition Table项，将接在完好硬盘上的信号线拔下，接到待修硬盘上，点击OK项确定；
④选择Hard Disk1点击OK项确定，再从Write Ob-ject to Physical Sectors对话框中将Cylinder、Side、Sector分别设置成0、0、1点击OK项确定。
当出现Warning对话框时选Yes项。
退出Norton软件，这样就将硬盘的主引导信息恢复。
重启后硬盘恢复正常，原硬盘内的文件也不会丢失。
若零磁道损坏的硬盘，先仍按上述步骤用Norton8.0软件处理，只是到了第三步时，将Cylinder、Side、Sector分别设置成1、0、1点击OK项确定。
当出现Warning对话框时选Yes项。
退出Norton软件，重新启动计算机，在BIOS设置硬盘自动检测一栏中可以看到，CYLS数值减少了1个。
如原来CYLS为2112，则变为2111。
说明原硬盘分区表是从C盘的0柱面开始，现从1柱面开始。
保存BIOS设置后退出。
重新分区、格式化后硬盘恢复正常。
采用以上方法处理无效，只能报废或者找专业人士帮忙处理。
硬盘修复之低级格式化
熟悉硬盘的人都知道，在必要的时候需要对硬盘做“低级格式化”（下面简称“低格”）。
进行低格所使用的工具也有多种：有用厂家专用设备做的低格，有用厂家提供的软件工具做的低格，有用DM工具做的低格，有用主板BIOS中的工具做的低格，有用Debug工具做的低格，还有用专业软件做低格……
不同的工具所做的低格对硬盘的作用各不一样。
有些人觉得低格可以修复一部分硬盘，有些人则觉得低格十分危险，会严重损害硬盘。
高朋用过多种低格工具，认为低格是修复硬盘的一个有效手段。
下面总结一些关于低格的看法，与广大网友交流。
大家关心的一个问题：“低格过程到底对硬盘进行了什么操作？
”实践表明低格过程有可能进行下列几项工作，不同的硬盘的低格过程相差很大，不同的软件的低格过程也相差很大。
A.对扇区清零和重写校验值。
低格过程中将每个扇区的所有字节全部置零，并将每个扇区的校验值也写回初始值，这样可以将部分缺陷纠正过来。
譬如，由于扇区数据与该扇区的校验值不对应，通常就被报告为校验错误（ECC Error）。
如果并非由于磁介质损伤，清零后就很有可能将扇区数据与该扇区的校验值重新对应起来，而达到“修复”该扇区的功效。
这是每种低格工具和每种硬盘的低格过程最基本的操作内容，同时这也是为什么通过低格能“修复大量坏道”的基本原因。
另外，DM中的Zero Fill（清零）操作与IBM DFT工具中的Erase操作，也有同样的功效。
B.对扇区的标识信息重写。
在多年以前使用的老式硬盘（如采用ST506接口的硬盘），需要在低格过程中重写每个扇区的标识（ID）信息和某些保留磁道的其他一些信息，当时低格工具都必须有这样的功能。
但现在的硬盘结构已经大不一样，如果再使用多年前的工具来做低格会导致许多令人痛苦的意外。
难怪经常有人在痛苦地高呼：“危险！切勿低格硬盘！我的硬盘已经毁于低格！”
C.对扇区进行读写检查，并尝试替换缺陷扇区。
有些低格工具会对每个扇区进行读写检查，如果发现在读过程或写过程出错，就认为该扇区为缺陷扇区。
然后，调用通用的自动替换扇区（Automatic reallocation sector）指令，尝试对该扇区进行替换，也可以达到“修复”的功效。
D.对所有物理扇区进行重新编号。
编号的依据是P-list中的记录及区段分配参数（该参数决定各个磁道划分的扇区数），经过编号后，每个扇区都分配到一个特定的标识信息（ID）。
编号时，会自动跳过P-list中所记录的缺陷扇区，使用户无法访问到那些缺陷扇区（用户不必在乎永远用不到的地方的好坏）。
如果这个过程半途而废，有可能导致部分甚至所有扇区被报告为标识不对（Sector ID not found, IDNF）。
要特别注意的是，这个编号过程是根据真正的物理参数来进行的，如果某些低格工具按逻辑参数（以 16heads 63sector为最典型）来进行低格，是不可能进行这样的操作。
E. 写磁道伺服信息，对所有磁道进行重新编号。
有些硬盘允许将每个磁道的伺服信息重写，并给磁道重新赋予一个编号。
编号依据P-list或TS记录来跳过缺陷磁道（defect track）,使用户无法访问（即永远不必使用）这些缺陷磁道。
这个操作也是根据真正的物理参数来进行。
F.写状态参数，并修改特定参数。
有些硬盘会有一个状态参数，记录着低格过程是否正常结束，如果不是正常结束低格，会导致整个硬盘拒绝读写操作，这个参数以富士通IDE硬盘和希捷SCSI硬盘为典型。
有些硬盘还可能根据低格过程的记录改写某些参数。
下面我们来看看一些低格工具做了些什么操作：1.DM中的Low level format：进行了A和B操作。
速度较快，极少损坏硬盘，但修复效果不明显。
2.Lformat：进行了A、B、C操作。
由于同时进行了读写检查，操作速度较慢，可以替换部分缺陷扇区。
但其使用的是逻辑参数，所以不可能进行D、E和F的操作。
遇到IDNF错误或伺服错误时很难通过，半途会中断。
3. SCSI卡中的低格工具：由于大部SCSI硬盘指令集通用，该工具可以对部分SCSI硬盘进行A、B、C、D、F操作，对一部分SCSI硬盘（如希捷）修复作用明显。
遇到缺陷磁道无法通过。
同时也由于自动替换功能，检查到的缺陷数量超过G-list限度时将半途结束，硬盘进入拒绝读写状态。
4. 专业的低格工具：一般进行A、B、D、E、F操作。
通常配合伺服测试功能（找出缺陷磁道记入TS），介质测试功能（找出缺陷扇区记入P-list），使用的是厂家设定的低格程序（通常存放在BIOS或某一个特定参数模块中），自动调用相关参数进行低格。
一般不对缺陷扇区进行替换操作。
低格完成后会将许多性能参数设定为刚出厂的状态。
在这里,高朋顺便回答一些读者常重复问到的问题：
问1：低格能不能修复硬盘？
答：合适的低格工具能在很大程度上修复硬盘缺陷。
问2：低格会不会损伤硬盘？
答：正确的低格过程绝不会在物理上损伤硬盘。
用不正确的低格工具则可能严重破坏硬盘的信息，而导致硬盘不能正常使用。
问3：什么时候需要对硬盘进行低格？
答：在修改硬盘的某些参数后必须进行低格，如添加P-list记录或TS记录，调整区段参数，调整磁头排列等。
另外,每个用户都可以用适当低格工具修复硬盘缺陷，注意：必须是适当的低格工具。
问4：什么样的低格工具才可以称为专业低格工具？
答：能调用特定型号的记录在硬盘内部的厂家低格程序，并能调用到正确参数集对硬盘进行低格，这样的低格工具均可称为专业低格工具。
硬盘有物理坏道，怎么办？
一、用软件来解决 
1.一个大小仅19.8KB的小软件FBDISK(坏盘分区器)。
它可将有坏磁道的硬盘自动重新分区，将坏磁道设为隐藏分区。
在DOS下运行FBDISK，屏幕提示Start scan hard disk(Y/N),输入Y，开始扫描硬盘，并将坏道标出来，接着提示Write to disk(Y/N)，选Y。
坏道就会被隔离。
2.用PartitionMagic对硬盘进行处理。
先用PartitionMagic中的“Check”命令来扫描磁盘，大概找出坏簇所在的硬盘分区，然后在Operations菜单下选择“Advanced/bad Sector Retest”。
再通过Hide Partition菜单把坏簇所在的分区隐藏起来，这样就可以避免对这个区域进行读写。
如果系统提示“TRACK 0 BAD，DISK UNUSABLE”，那么说明硬盘的零磁道出现坏道。
这需要通过Pctools9.0等磁盘软件，把0扇区0磁道屏蔽起来，最后用1扇区取代它就能修复。
以Pctools9.0为例，运行Pctools9.0中的de.exe文件，接着选主菜单Select中的Drive，进去后在Drive type项选Physical，按空格选中它，再按Tab键切换到Drives项，选中hard disk，然后回到主菜单，打开Select菜单，在出现的Partition Table中，选中硬盘分区表信息。
找到C盘，该分区是从硬盘的0柱面开始的，那么，将1分区的Beginning Cylinder的0改成1，保存后退出。
重新启动后再重新分区、格式化即可。
二、重新分区再隐藏 
用Windows系统自带的Fdisk。
如果硬盘存在物理坏道，通过Scandisk和Norton Disk Doctor我们就可以估计出坏道大致所处位置，然后利用Fdisk分区时为这些坏道分别单独划出逻辑分区，所有分区步骤完成后再把含有坏道的逻辑分区删除掉，余下的就是没有坏道的好盘了。
三、低级格式化 
使用主板自带的硬盘低格程序或硬盘厂家随盘赠送的低格程序如DM、LFORMAT等对硬盘全盘进行低级格式化处理，它可对硬盘坏道重新整理并排除。
不过不到山穷水尽，这一招最好不要用，因为对硬盘作低格害处多多，至少会加速对盘片的磨损。
鲜为人知的硬盘故障处理技巧
一、硬盘常见故障的判断 
一般来说，硬盘的故障可以分为纯硬件故障和软件故障。
相对来说，软件引起的硬件故障比较复杂，因为硬盘牵涉到系统软件和应用软件，但是解决的方式有时候却比较简单，比如主引导扇区被非法修改导致系统无法启动、非正常关机后引起的逻辑坏道等，一般通过重新分区格式化即可解决。
而纯硬件的故障就比较棘手——硬件故障又可以分为系统引起的，例如主板的IDE接口松动、与其他硬件设备不兼容、电源不稳定等等，而另一个就是硬盘本身的故障了，当然我们可以通过眼睛观察一下电路板是否有芯片被烧毁，用耳朵仔细听听启动时是否有异常响声等方式来判断。
硬盘故障包括了磁头损坏、电路板问题、芯片信息丢失、马达不转等，最直观的现象就是进入主板BIOS设置后，无法识别硬盘。
根据电脑开机后的出错提示也是可以确定硬盘故障大致类型的。
比如开机后屏幕显示：“Device error”，然后又显示：“Non－System disk or disk error,Replace and strike any key when ready”，提示硬盘不能启动，用软盘启动后，在A:\>后键入C:，屏幕显示：“Invalid drive specification”，系统不认硬盘，一般是CMOS中的硬盘设置参数丢失或硬盘类型设置错误造成的。
开机后屏幕显示：“Invalid partition table”，硬盘不能启动，若从软盘启动则认C盘，一般是由于硬盘主引导记录中的分区表有错误而造成的。
屏幕显示“Error Loding Operating System”或者“Missing Operating System”表明硬盘的主引导记录被破坏，或者分区的结束标志遭到破坏，还有可能是由于CMOS重硬盘参数设置错误引起的，造成这种现象的原因有：CMOS参数被改动；
硬盘下的系统文件IO.SYS和MSDOS.SYS遭到破坏；
硬盘DOS引导记录（BOOT）遭到严重破坏，或者DOS引导记录的结束标志（01FF的55 AA）丢失；
也可能是硬盘的主引导数据被破坏，或主引导结束标志（080。
081的55 AA）丢失而造成。
而系统显示“TRACK 0 BAD，DISK UNUSABLE”，意思为“零磁道损坏，硬盘无法使用”或用磁盘扫描程序扫描其它硬盘时其0扇区出现红色“B”。
硬盘0扇区损坏，是大家比较头痛的故障，一般情况下也就判了硬盘死刑，很难修复了。
如果屏幕显示“SMART Failure Predicted on Primary Master:ST310210A”然后是警告：“Immediately back-up your date and replase your hard disk drive. A failure mauy be immnent.”
此时，须按F1才能继续， 这是S.M.A.R.T技术诊测到你的硬盘可能出现了故障或不稳定情况，警告你需要立即备份数据并更换硬盘。
出现这种提示后，除了更换新盘外，没其他解决方法。
二、硬盘常见安装故障的处理 
硬盘安装不当会导致无法正常使用的故障。
比如IDE接口与硬盘接的电缆线未连接好；
或是IDE电缆接头处接触不良或再现断裂；
硬盘未接上电源或电源接头未插牢；
跳线设置不当等都会导致在BIOS中检测不到硬盘，或无法识别全部容量。
如果检测时硬盘灯亮几下，但BIOS仍然报告没有发现硬盘，则可能是硬盘电路板上某个部件损坏或者是主板IDE接口及IDE控制器出现故障。
另外，使用了不合格的信号线（未按要求使用80针信号线）或未安装主板芯片组驱动（补丁）程序，将会导致不能打开DMA模式的故障。
有些朋友在新加了一个硬盘后，WIN98就无法启动了，取下新加的硬盘后一切又正常了。
这是因为你的WIN98装在原硬盘的非C盘(如D盘)上，而加装双硬盘后在原硬盘存在多分区的情况下，要引起盘符交错，导致原硬盘的盘符发生了变化，WIN98在启动时找不到安装时默认的相关系统文件及众多应用程序，自然不可能正常启动。
在多分区的情况下，硬盘分区的排列顺序是这样的：主硬盘的主分区仍被计算机认为是C盘，而第二硬盘的主分区则被认为是D盘，接下来是第一硬盘的其他分区依次从E盘开始排列，然后是第二硬盘的其他分区接着第一硬盘的最后盘符依次排列。
要使加上第二硬盘后盘符不发生变化，解决的办法有两个：如果你只使用WIN98的话，比较简单，在CMOS中将第二硬盘设为NONE即可，但在纯DOS下不认第二个硬盘。
第二种方法是接上双硬盘后，给第二个硬盘重新分区，删掉其主DOS分区，只分扩展分区。
这样盘符也不会交错。
当然若第一硬盘只有一个分区的话，也就不会存在盘符交错的问题了。
另外还有一个常见的硬盘安装故障就是在老主板上不能正确使用大容量硬盘，解决的方法很多，比如升级主板BIOS或使用EZ等特殊分区软件分区。
SATA硬盘电源接口与传统的IDE硬盘所使用的端口大不相同，目前普通电源很少能直接支持Serial ATA硬盘，需使用专门的转接头。
不过也有少数Serial ATA硬盘采用了双电源设计，除了Serial ATA标准的15针电源接口外，还有传统的电源接口，使用起来就更加方便了。
另外，Serial ATA硬盘对电源供电质量要求比并行接口硬盘更严格，使用Serial ATA硬盘的朋友，最好配一个功率足够的好电源。
还要注意的是，由于Serial ATA硬盘对主板AGP/PCI频率很敏感，如果你进行了超频操作，就可能会出现无法识别硬盘或使用不稳定的现象。
建议大家超频后尽量保持总线频率的稳定。
还应注意，在完成Windows安装后，一定要安装IAA加速补丁或者VIA、SiS、Promise以及Silicon的相关补丁，程序会自动根据硬盘的物理特性使用最佳传输模式，以便充分挥发Serial-ATA硬盘的性能。
如果主板 BIOS不支持 48bit LBA模式，就无法直接使用超过137G容量的硬盘。
遇到这种情况建议你升级最新的主板BIOS。
如果不升级，也可以使用硬盘自带的分区软件DM，提供了INT13H的扩展功能，从而绕开主板BIOS支持大硬盘。
大家也可以用Windows 2003的系统盘来进行分区，都能够识别出160G以上的大容量硬盘。
三、硬盘常见“软故障”的处理 
硬盘的软故障即非物理性故障，比如主引导记录、分区表、启动文件等被破坏而导致系统无法启动，硬盘被病毒感染造成无法运行，以及非法操作、维护不当等。
一般情况下，“软故障”是可以自己动手修复的。
比如常见的分区丢失故障，是因为分区表被病毒破坏等原因导致，而分区上保存的数据一般还完好，我们可以用相关的工具软件来尝试修复。
DiskMan来修复分区表。
DiskMan是一款功能强大的硬盘分区表维护软件，可以判断分区的“系统参数”是否正确，可让DiskMan自动检查硬盘分区参数，并按照提示修改错误的参数，当然实在不行的情况下还可以利用其“重建分区”功能重建分区。
DiskMan可通过未被破坏的分区引导记录信息重新建立分区表，在菜单的工具栏中选择“重建分区表”，DiskMan即开始搜索并重建分区。
当然我们也可以使用KV3000软件来修复硬盘数据，手动重建主引导扇区和分区表。
用软盘启动计算机并运行KV3000.EXE，进入KV3000主画面，按下F6键启动搜索硬盘分区的功能，再按下F2可以搜索出硬盘各个分区，接下来按F2查看C盘BOOT区。
如果C盘BOOT扇区正常，则可以用KV3000的F10功能键自动重建C盘主引导扇区和分区表。
但是，需要注意的是无论使用什么软件及方法，都不能做到百分之百地修复分区表。
所以建议读者在硬盘分区后，最好能备份一份分区表在软盘或光盘上，一旦出现分区丢失的情况，就能够很容易恢复了。
另外，被“逻辑锁”锁住硬盘也是比较严重的故障。
最直接的后果会导致无法启动，甚至用光盘和软盘都启动不了系统。
关键在于“逻辑锁”修改了正常的主引导分区记录，将扩展分区的第一个逻辑盘指向自己，这样一来就形成了死循环，这就是使用软驱、光驱，双硬盘都不能正常启动的原因。
解决这个难题并不复杂，方法一是修改DOS启动文件，首先准备一张DOS6.22的系统盘。
然后在一台正常的机器上，使用你熟悉的二进制编辑工具(debug、pctools5.0，或者Windows下的ultraedit都行)修改软盘上的IO.SYS文件(修改前记住改该文件的属性为正常)，具体是在这个文件里面搜索第一个“55aa”字符串，找到以后修改为任何其他数值即可。
用这张修改过的系统软盘你就可以顺利地带着被锁的硬盘启动了。
方法二是用DM解锁，首先你要找到和硬盘配套的DM软件，然后把DM拷到一张系统盘上。
接上被锁硬盘，开机，按住DEL键，进CMOS设置，将所有IDE硬盘设为NONE（这是关键所在!
），保存设置，重启动，这时系统即可“带锁”启动。
启动后运行DM，你会发现DM可以绕过BIOS，识别出硬盘，选中该硬盘，分区格式化即可。
不过这种方法的最大缺憾就是硬盘上的数据将全部丢失。
四、硬盘常见“坏道”的处理 
硬盘的坏道共分两种：逻辑坏道和物理坏道。
逻辑坏道为软坏道，大多是软件的操作和使用不当造成的，可以用软件进行修复；
物理坏道为真正的物理性坏道，它表明硬盘的表面磁道上产生了物理损伤，大都无法用软件进行修复，只能通过改变硬盘分区或扇区的使用情况来解决。
首先，我们先确认硬盘的坏道是逻辑坏道还是物理坏道，方法很简单。
在电脑刚刚启动时，按“F8”键，选择“Command Prompt only”进入DOS模式（操作系统必须为Win95/98，若为Win2000/XP请使用DOS启动盘），执行“scandisk x:”（X为盘符），Scandisk程序便会检查硬盘，对产生的逻辑坏道会自行弹出对话框，选择“Fix it”对逻辑坏道进行初级修复。
如扫描程序在某一进度停滞不前，那么硬盘就有了物理坏道。
对于已进行初步修复的仍有逻辑坏道的硬盘，正常启动后回到Windows下，进入“我的电脑”中选择有逻辑坏道的硬盘，单击鼠标右键，选择“属性”→“工具”→“开始检查”就弹出“磁盘扫描程序”，选中“完全”并将“自动修复错误”打上勾，单击“开始”，就开始对该分区进行扫描和修复。
而对于有物理坏道的硬盘，上述方法就行不通了，但也不是没有办法。
最简单的方法就是，如果硬盘还没过质保期，就去找销售商，让其想想办法。
但如果过了质保期就只好自己动手修复了，首先推荐大家使用原厂的DM工具，对硬盘进行“清零”处理，很多小问题用DM都可能解决，而且经上面处理过后再用其他软件，硬盘修复的时间能大为缩短。
然后再使用HDDREG、MHDD、FB这些软件进行处理。
这几款软件功能相类似，使用上各有特色。
HDDREG可以通过磁性逆转方式来达到修复坏道的目的，据称可以修复大约60％的受损硬盘，在修复坏道的同时又不影响硬盘原有的数据信息，而这是低级格式化程序所做不到的。
当然还可以用PartitionMagic手工处理，达到隐藏坏道的目的。
具体的作法是：首先启动PartitionMagic，选中“Operations”菜单下的“Check”命令，对硬盘进行直接扫描，标记坏簇后，选中“Operations”菜单下的 “Advanced”→“bad sector retset”，最后把坏簇分成一个独立的分区，再通过“Hide partiton”命令将分区隐藏即可。
如果电脑启动时出现信息“TRACK 0 BAD,DISK UNUSABLE”，那么修复起来就比较麻烦，因为此信息说明硬盘的零磁道损坏了，一般出现这种情况，大多数人就把硬盘作报废处理。
但并非绝对不能修复，原理十分简单，只要用1扇区代替0扇区就行了，在这里向大家推荐“DiskMan”，它是一款比较常用的硬盘工具。
下载后在纯DOS运行，在“硬盘”菜单中选中要修改的盘（一般为C盘），然后依次进入“工具”→“参数修改”→将“起始柱面”的值由“0”改为“1”，确定后保存退出。
就可以对硬盘进行重新分区了。
目前，专业硬盘维修软件“PC-3000”与硬盘厂商的维修方式就非常相似。
PC-3000是由俄罗斯著名硬盘实验室-- ACE Laboratory研究开发的商用的专业修复硬盘综合工具。
它通过分析和逆向工程，将厂商的指令代码甚至Firmware破解，使得可以编制出程序软件，自由地读取、修改和写入硬盘系统信息区的信息。
像硬盘厂商一样，编写程序对磁盘盘面按照物理地址进行扫描，重新构造出新的缺陷扇区列表写进系统保留区来替换原有的列表。
经过这样的软件维修的硬盘，理论上与硬盘厂商维修的硬盘几乎没有差别。
但是价格也是非常昂贵，大约要上万元吧！
对于我们普通用户来说～还是等有条件后再考虑吧！
基于Snort的入侵检测系统
用Snort,Apache,MySQL,PHP及ACID构建高级IDS
在当今的企业应用环境中，安全是所有网络面临的大问题。
黑客和入侵者已成功的入侵了一些大公司的网络及网站。
目前已经存在一些保护网络架构及通信安全的方法，例如防火墙、虚拟专用网（VPN）、数据加密等。
入侵检测是最近几年出现的相对较新的网络安全技术。
利用入侵检测技术，我们可以从已知的攻击类型中发现是否有人正在试图攻击你的网络或者主机。
利用入侵监测系统收集的信息，我们可以加固自己的系统，及用作其他合法用途。
目前市场中也有很多弱点检测工具，包括商品化的和开放源码形式的，可以用来评估网络中存在的不同类型的安全漏洞。
一个全面的安全系统包括很多种工具：
防火墙：用来阻止进入及走出网络的信息流。
防火墙在商业化产品和开放源码产品中都有很多。
最著名的商业化防火墙产品有Checkpoint (http://www.checkpoint.com), Cisco (http://www.cisco.com)及Netscreen(http://www.netscreen.com)。
最著名的开放源码防火墙是Netfilter/Iptables(http://www.netfilter.org)。
入侵检测系统（IDS）：用来发现是否有人正在侵入或者试图侵入你的网络。
最著名的IDS是Snort,可以在http://www.snort.org下载。
弱点评估工具：用来发现并堵住网络中的安全漏洞。
弱点评估工具收集的信息可以指导我们设置恰当的防火墙规则，以挡住恶意的互联网用户。
现在有许多弱点评估工具，比如Nmap(http://www.nmap.org/)和Nessus(http://www.nessus.org/).
以上这些工具可以配合使用，交互信息。
一些产品将这些功能捆绑在一起，形成一个完整的系统。
Snort是一个开放源码的网络入侵检测系统（NIDS）,可以免费得到。
NIDS是用来检测网络上的信息流的入侵检测系统（IDS）。
IDS也包括安装在特定的主机上并检测攻击目标是主机的行为的系统。
IDS迄今为止还是一门相当新的技术，而Snort在IDS中处于领先的地位。
本书由入侵检测介绍及相关概念入手，你将学习如何安装及管理Snort以及与Snort协同工作的其他产品。
这些产品包括MySQL数据库（http://www.mysql.org）、入侵数据库分析管理工具ACID（http://www.cert.org/kb/acid）。
Snort能够将日志数据（例如告警和其他日志消息）记录到数据库中。
MySQL用作存储所有这些数据的数据库引擎。
利用ACID及Apache (http://www.apache.com)Web服务器，我们可以分析这些数据。
Snort、Apache、MySQL及ACID的共同协作，使我们可以将入侵检测数据记录到数据库，然后用web界面察看和分析这些数据。
此书的组织结构使读者能够跟着随后的章节一步一步的建立一个完整的入侵检测系统。
安装及整合各种工具的步骤将在如下的章节逐步介绍：
第二章将介绍编译及安装Snort的基本知识。
在这一章中，你将能够用基本安装及默认规则建立一个能够工作的IDS，同时能够建立可以记录入侵活动的日志文件。
第三章介绍Snort规则的有关知识，Snort规则的组成及如何根据你的系统环境及需要建立自己的规则。
建立良好的规则是构建入侵检测系统的关键，因此本章非常重要。
本章同时也介绍Snort不同版本间规则的不同。
第四章介绍input及output插件。
插件与Snort一同编译，并用来调整检测引擎的输入和输出部分。
Input插件用在实际检测过程发生前准备好捕获的数据包。
Output插件用来将数据数据格式化，以用于特定的目的，例如一种output插件可以将输出的检测信息转换成SNMP trap信息，而另外一种output插件可以将信息转换成数据库信息。
这一章将详细介绍如何配置及使用这些插件。
第五章介绍MySQL数据库与Snort的共同工作。
MySQL插件使Snort能够将日志数据记录到数据库以便随后的分析。
在这一章中，你将了解如何在MySQL中建立数据库，如何配置数据库插件，以及将日志数据记录到数据库中。
第六章介绍ACID,以及如何用ACID取得你在第五章建立的数据库中的信息，并用Apache服务器显示它。
ACID一种提供丰富的数据分析能力的重要工具，你可以用它来取得攻击频率、攻击类别、察看这些攻击方法的相关资源等等。
ACID用PHP脚本语言、图形显示库（GD library）和PHPLOT(一种用来绘制图表的工具)来工作，可以分析SQL中的数据并绘制图表。
第七章主要介绍可以和Snort一起工作的其他一些有用的工具。
在读完此书后，你将建立一个完整的，具有多个组件的系统，如图1-1所示。
在图中你可以看到，Snort捕获并分析数据，然后用output插件将数据储存在MySQL数据库中。
Apache服务器在ACID,PHP、GD library及PHP包的帮助下使连接到服务器的用户能够通过浏览器显示数据。
用户可以在网页上应用不同的查询来分析、备份、删除数据或者显示图表。
基本上，你可以将Snort、MySQL、Apache、PHP、ACID、GD库以及ACID都安装到一台计算机上，而实际上在读完本书后，你可以建立一个类似于如图1-2所示得更加贴近实际应用的系统。
在企业中，人们通常使用多个Snort探测器，在每个路由器或者防火墙后面都放置探测器。
在这种情况下，你可以用一个集中的数据库来收集所有探测器的信息，并在这个数据库服务器上运行Apache Web服务器，如图1-3所示。
1．1 什么是入侵检测？
入侵检测是指用来检测针对网络及主机的可疑活动的一系列技术和方法。
入侵检测系统基本可以分为两大类：基于特征的入侵检测系统和异常行为检测系统。
入侵者常具有用软件可以检测到的特征，如病毒。
入侵检测系统将检测包含已知入侵行为特征或者异常于IP协议的数据包。
基于一系列的特征及规则，入侵检测系统能够发现并记录可疑行为并产生告警。
基于异常的入侵检测系统通常是分析数据包中协议头部的异常，在某些情况下这种方式要比基于特征的入侵检测系统要更好一些。
通常情况下，入侵检测系统在网络上捕获数据包与规则比对或者检测其中的异常。
Snort基本上是一个基于规则的IDS,但是input插件可以分析协议头部异常。
Snort的规则存储在文本文件中，并可以用文本编辑器修改。
规则以类别分组。
不同类别的规则存储在不同的文件中。
最后，这些文件被一个叫做snort.conf的主配置文件引用。
Snort在启动时读取这些规则，并建立内部数据结构或链表以用这些规则来捕获数据。
发现入侵特征并利用规则捕获它们是一项具有技巧性的工作，因为在实时检测中你应用越多的规则，那么你将需要越多的处理能力，所以用尽量少的规则来捕获尽量多的特征是非常重要的。
Snort已经预先定义了许多入侵检测规则，并且你可以自由添加自定义的规则。
同时，你也可以移除一些内建规则以防止错误告警。
1．1．1 一些定义
在详细了解入侵检测及Snort之前，你需要了解一些网络安全相关的定义，这些定义将在这本书的随后章节中重复应用。
对这些名词的基本了解对于理解其他更加复杂的安全概念是非常必要的。
1．1．1．1IDS
入侵检测系统或IDS是一种用来检测入侵行为的软件、硬件或者两者的结合。
Snort是大众可以获得的开放源码的IDS。
IDS的实际能力依赖于组件的复杂度及精巧性。
实体的IDS是硬件和软件的结合，很多公司可以提供及决方案。
如前面提到的，IDS可以采用特征分析技术、异常检测技术，或者两者同时应用。
1．1．1．2 网络IDS或NIDS
NIDS是用来捕获在网络介质上传播的数据并与特征数据库比对的入侵检测系统。
跟据数据包与特征数据库的匹配情况，IDS产生告警或者将日志记录到文件或数据库中。
Snort主要是作为NIDS来使用的。
1．1．1．3 主机IDS或HIDS
面向主机的入侵检测系统或称HIDS作为一个代理安装在一台主机上，这种入侵检测系统可以分析系统及应用程序日志来检测入侵行为。
其中一些HIDS是被动状态的，只有当某些事情发生了才会通知你，另外一些是主动状态的，可以嗅探网络中针对某一主机的通信状况并实时产生告警。
1．1．1．4 特征
特征是数据包中包含信息的特点。
特征用来检测一种或多种攻击行为。
例如，目标是你的web服务的包中如果出现“scripts/iisadmin”，可能意味着一个入侵尝试。
根据攻击行为本质的不同，特征数据可能会出现在数据包中的不同位置。
例如，你可能会在IP包头、传输层头(TCP或UDP头)及/或应用层头或载荷中发现攻击特征。
你将在本书的后面更多的了解攻击特征。
通常IDS依靠特征来发现入侵行为。
在发现新的入侵特征时，某些商业化的IDS需要从厂商那里得到更新的特征库。
另外一些IDS,比如Snort,你可以自己更新特征库。
1．1．1．5 告警
告警是任何一种对入侵行为的通知。
当IDS检测到入侵者，它将用告警来通知安全管理员。
告警的形式可以使弹出窗口、终端显示及发送e-mail等等。
告警同时也被存储到日志文件或者数据库中，以便供安全专家察看。
在本书的后面，你将得到关于告警的详细信息。
Snort的告警由output插件控制，并可以产生多种形式的报警。
Snort也可以将同一个告警发送到不同的目标，例如，将告警发送到数据库的同时，产生SNMP trap信息。
一些插件可以修改防火墙配置，使入侵者在防火墙或者路由器上被控制。
1．1．1．6 日志
日志信息通常存放在文件中。
默认情况下，Snort将这些信息存放在/var/log/snort目录下，但是也可以在启动Snort时用命令行开关来改变这个目录。
日志信息可以存储为文本格式或者二进制格式，二进制格式的文件可以供Snort或者Tcpdump随后访问，现在也有一个叫做Barnyard的新工具可以分析Snort产生的二进制日志文件。
将日志存放为二进制文件可以有更高的效率，因为这种格式开销相对较低。
将Snort应用在高速网络环境中，将日志存放为二进制文件是非常必要的。
1．1．1．7 误告警
误告警是错误的将非入侵行为报告为入侵行为的告警。
例如，内部主机的错误配置有时会产生触发规则，从而产生误告警。
某些路由器，例如Linksys家用路由器，会产生一些信息，导致UpnP相关的告警。
为了避免误告警，你要修改和调试默认规则，在某些情况下，你也许需要停止一些规则的使用，以避免误告警。
1．1．1．8 探测器
运行入侵检测系统的机器也叫做探测器，因为它用来“探测”网络中的活动。
在本书的后面部分，如果用到探测器这个词，那么它是指运行Snort的计算机或者其他设备。
1．1．2IDS应该放在网络中的什么位置？
根据你的网络拓扑结构的不同，你应该在一个或多个位置放置IDS。
IDS放置的位置也要取决于你想检测的入侵行为的种类：内部入侵、外部入侵，或者两个都要检测。
例如，如果你想仅仅检测外部入侵活动，并且你只有一个路由器接到Internet，那么放置IDS的最佳位置也许紧靠着路由器或者防火墙的内部网络接口。
如果你有多条接入Internet的借口，也许你希望在每个入口处放置一台IDS。
有时你也希望能够检测来自内部的威胁，那么可以在每个网段都放置一台IDS。
在很多情况下，你并不需要在所有网段都实施入侵检测，你可以仅仅在敏感区域放置IDS。
要知道，越多的IDS就意味着越多的工作量和维护费用。
因此IDS的部署要取决于你的安全策略，也就是你想防范什么样的入侵。
图1-4表示通常放置IDS的典型位置。
正如你在图1-4中看到的那样，通常你应该在每个路由器和防火墙的后面放置IDS,在你的网络中包含非军事化区(DMZ)的情况下，在DMZ中也可以放置IDS。
要注意的是，DMZ中的IDS告警策略不应像专用网络中那样严格。
1．1．3 蜜罐(Honey Pots)
蜜罐是一种以故意暴露已知弱点来愚弄黑客的系统。
当黑客发现蜜罐时，通常会在它上面耗费一些时间，在此期间，你可以记录黑客的行为，从中找出黑客的活动情况和所使用的技术。
一旦你了解了这些技术，你可以利用你得到的信息来加固你真正的服务器。
现在有很多种构建和放置蜜罐的方法。
在蜜罐上应该运行一些公开的服务，这些服务包括Telnet服务(端口23)，HTTP服务（端口80），FTP服务（端口21）等等。
你应该将蜜罐放在你紧靠你应用服务器的某个位置，这样黑客容易错误的将蜜罐当成真正的应用服务器。
例如，如果你的应用服务器的IP地址势192.168.10.21和192.168.10.23，那么你可以将你的蜜罐的IP地址设为192.168.10.22，同时设置你的防火墙和路由器，使黑客对服务器某些端口的访问重定向到蜜罐上面，那么入侵者就会把蜜罐当成是真正的服务器。
你应当仔细的考虑告警产生机制，以使你的蜜罐受到威胁的时候可以立刻得到信息。
将日志存放在其他机器上是个好主意，这样即使黑客侵入了蜜罐，也无法删除日志文件。
那么什么时候你应该安装蜜罐呢？
那要根据你的情况来决定：
如果你的机构有足够的资源用来追踪黑客，那么你应该建立一个蜜罐。
所谓资源包括硬件以及人力。
如果你没有足够的资源，那么安置蜜罐就没有什么必要，要知道获取你不会用到的信息是没有什么意义的。
仅仅当你可以以某种方式来用蜜罐取得的信息的时候，蜜罐才是有用的。
如果你想收集有关行为的证据来起诉黑客，那么你也可以用到蜜罐。
理想的情况下，蜜罐应该看起来像一个真实的系统，你可以制作一些假的数据文件，假的账户等等，使黑客信以为真，这样才能使黑客在上面逗留足够长的时间，从而你可以记录更多的活动。
你可以在蜜罐项目网站http://project.honeynet.org/上面取得更多的信息，可以找到一些你感兴趣的资料，是你能够对蜜罐有进一步的了解。
你也可以去另外一个蜜罐网站http://www.citi.umich.edu/u/provos/honeyd/了解他们的开放源码的密罐的相关信息。
其他一些可以取得更多信息的地方是：
南佛罗里达蜜罐项目网站：http://www.sfhn.net
相关白皮书：http://www.sfhn.net/whites/howto.html
1．1．4 安全区域和信任等级
一段时间以前，人们将网络划分为两大类区域：安全区域和非安全区域。
某些时候这种划分也就意味着网络是在路由器或防火墙的内部或者外部。
现在典型的网络通常根据不同的安全策略等级和信任等级划分为多个区域。
例如，公司的财务部门拥有非常高的安全等级，在这个区域中仅仅允许对少数服务的操作，不允许Internet服务；而在DMZ或称非军事化区中，网络是向Internet开放的，此区域的信任等级与财务部门迥然不同。
根据信任等级和安全策略的不同，你应该在不同的区域中应用不同的入侵检测规则和策略。
对安全等级要求不同的网络在物理上是分离的。
你可以在对安全要求不同的每个区域都安装一套具有不同规则的IDS来检测可疑的网络活动。
例如，在财务部门的网络中没有web服务器，指向80端口的数据包将被纪录为入侵行为，而这样的规则不能用在DMZ中，因为DMZ中的web服务器是对每个人开放的。
1．2IDS 策略
在你在网络中安装IDS之前，你必须有一个能够检测入侵者并做出相应动作的策略。
一个策略必须能够指示一系列的规则以及这些规则如何应用。
IDS策略应当包含以下的内容，并且你可以根据你的要求添加更多的内容：
谁来察看IDS信息？
IDS提供给你对入侵行为产生告警信息的机制。
告警系统或者是简单的文本文件形式，或者更加复杂，也许集成到类似于HpOpenView这样的网管软件或MySQL这样的数据库中。
在你的系统中需要有人负责来监视入侵行为和制定策略。
入侵行为可以通过弹出窗口或web页面实时监视。
在这种情况下，操作者必须要了解告警的意义所在以及告警信息中事件的安全等级。
谁来管理IDS，维护日志等等？
对于所有的系统，都需要建立一个日常维护体制，IDS也一样。
谁来处理安全事件？
如果没有安全事件处理机制，也就根本没有必要安装IDS。
根据安全事件的安全等级的需要，某些情况可能需要政府机构的介入。
事件处理程序是什么样的？
策略应当规定一些事件响应机制，根据涉及安全等级的高低向不同的管理层汇报。
例行报告：总结前一天、上一周、或者上一个月所发生的相关事情。
特征库的升级：黑客总是不断的创造新的攻击方法。
如果IDS了解攻击的特征，就能够检测到攻击。
Snort规则用攻击特征库来检测攻击。
因为攻击的特征经常在改变，你也必须为你的IDS规则更新特征库。
你可以定期直接在Snort网站上取得特征库的更新，也可以在一种新的攻击方式被发现时自己更新。
每个项目都需要文档系统。
IDS策略应当描述当攻击被检测到时应当记录什么样的文档。
文档可以包括简单的日志或者对入侵行为的完整纪录。
你也可以采用多种方式来记录数据。
例行报告也属于文档的组成部分。
基于你的IDS策略，你可以清楚的知道你的网络到底需要多少IDS探测器和其他资源，更精确的计算IDS的成本和费用。
1．3Snort的部件
Snort在逻辑上可以分成多个部件，这些部件共同工作，来检测特定的功绩，并产生符合特定要求的输出格式。
一个基于Snort的IDS包含下面的主要部件：
包解码器
预处理器
探测引擎
日志和告警系统
输出模块
图1-5显示了这些部件的关系。
任何来自Internet的包到了包解码器，然后被送到输出模块，在这里或者被丢弃，或者产生日志或告警。
在这个部分中，我们将简要介绍这些部件。
在你通读这本书并建立一些规则后，你将对这些部件以及它们之间怎样相互作用更加熟悉。
1．3．1 包解码器
包解码器从不同的网络接口中获取包并准备预处理或者送到探测引擎。
网络接口可能是以太网、SLIP、PPP等等。
1．3．2 预处理器
预处理器是Snort在探测引擎做出一些操作来发现数据包是否用来入侵之前排列或者修改数据包的组件或者插件。
一些预处理器也可以通过发现数据包头部异常来执行一些探测工作，并产生告警。
预处理器的工作对于任何IDS的探测引擎依据规则分析数据都是非常重要的。
黑客有很多愚弄IDS的技术。
比如，你建立这样一条规则，用来在HTTP包中发现包含“scripts/iisadmin”的入侵特征，如果你将字符匹配过于严格的限制，那么黑客只需要做一些细小的变通，就能很轻易的耍弄你。
例如：
为了使问题复杂化，黑客也会在字符中嵌入16位URI字符或者Unicode字符，这对web服务器来说是同样合法的，要注意web服务器能够理解所有这些字符，并将它们处理成为类似于“scripts/iisadmin”这样的字符。
如果IDS严格匹配某一字符串，就可能不会探测到这种类型的攻击。
预处理器可以将字符重新排列，以使IDS能够探测得到。
预处理器也或来包分片的组装。
当一个大的数据流传向主机的时候，通常数据包会被分割。
例如，以太网中默认的最大数据包大小是1500字节，这个数值由网络接口的MTU(Maximus Transfer Unit)值来确定。
这就意味着如果你发送的数据如果大于1500字节，它将会被分割成多个数据包，以使每个数据包的大小都小于或等于1500字节。
接收方系统能够将这些小的分片重新组装，还原成原始的数据包。
在IDS上，在可以对数据包进行特征分析之前，也需要重新组装数据包。
例如，可能入侵特征的一般在一个数据包分片上，而另外一半在别的分片上面。
为了使探测引擎能够准确的分析特征，就需要组装所有的分片。
黑客也用数据分片来对抗入侵检测系统。
预处理器用来对抗这些攻击。
Snort的预处理器能够组装数据分片，解码HTTP URI,重新组装TCP流等等。
这些功能是IDS中非常重要的部分。
1．3．3 探测引擎
探测引擎是Snort中最重要的部分，它的作用是探测数据包中是否包含着入侵行为。
探测引擎通过Snort规则来达到目的。
规则被读入到内部的数据结构或者链表中，并与所有的数据包比对。
如果一个数据包与某一规则匹配，就会有相应的动作（记录日志或告警等）产生，否则数据包就会被丢弃。
探测引擎是Snort中时间相关的组件，根据你的机器的处理能力和你所定义的规则的多少，探测引擎会消耗不同的时间来对不同的数据包做出响应。
在Snort工作在NIDS模式的时候，如果网络中数据流量过大，有时可能会因为来不及响应而丢弃一些包。
探测引擎的负载取决于以下因素：
规则的数量
运行Snort的机器的处理能力
运行Snort的机器的内部总线速度
网络的负载
当你在设计NIDS的时候，你应该考虑所有的相关因素。
你需要了解探测系统可以剖析数据包并把规则应用在高的不同部分，这些部分可能是：
包的IP头
包的传输层头，包括TCP、UDP或其他传输层协议头，也可以是ICMP头。
应用层头。
应用层头包括DNS头，FTP头，SNMP头，SMTP头等等还有很多。
有时你可以用一些间接的方法来获得应用头信息，比如位偏移等等。
包载荷。
这意味着你可以建立这样一种规则，用探测引擎来寻找传输的数据中的字符。
在不同版本的Snort中，探测引擎由不同的工作方式。
在所有1.x版的Snort中，一旦探测引擎将数据包匹配到某个规则的时候，就会停止进一步的过程，然后根据规则产生告警或者记录日志，这就意味着即使如果包匹配多条规则，仅仅第一个规则被应用，并不再进行其他的匹配，这样做有好处，但是除了下面的情况：如果包匹配的第一个规则是低优先级的，就只产生低优先级的告警，即使这个包也匹配高优先级的后面其他规则。
这个问题在第二版的Snort中得到了修正：包先对所有的规则进行匹配，然后再产生告警，在对所有的规则进行匹配之后，选择最高优先级的规则告警。
第2版Snort的探测引擎是完全重写的，从而比先前版本的快了许多。
在写这本书的时候，Snort 2.0还没有开始发行，早些时候的测试显示新的引擎比老的引擎要快将近18倍。
1．3．4 日志和告警系统
依据在包中所找到的东西，一个包可以用来记录行为或者产生告警。
日志可以存为简单的文本文件、tcpdump格式文件或者其他的形式。
在默认情况下，所有的日志文件都存放在/var/log/snort目录中。
你可以在命令行中用-l选项来修改日志和告警存放的位置。
更多的命令行选项将在下一章中讨论。
这些选项可以用来修改日志和告警的类型和细节等等。
1．3．5 输出模块
输出模块或插件可以根据你指定的保存日志和告警系统产生的输出信息的方式来执行不同的动作。
基本上这些模块用来控制日志和告警系统产生的输出信息的格式。
根据配置，输出模块可以做下列事情：
简单的在/var/log/snort/alerts文件或其他文件中记录日志
发送SNMP trap
将日志记录到类似于MySQL或Oracle的数据库中。
你将在这本书的后面了解更多的关于使用MySQL的信息
产生XML输出
修改路由其或者防火墙的配置
向Windows主机发送SMB消息
其他一些工具可以用来发送如e-mail信息或者web页面浏览等格式的告警，在后面的章节中你将了解更多的信息。
表1-1是IDS各种部件的汇总。
表1-1 IDS的部件
名称描述
包解码器为处理过程准备包
预处理器或输入插件分析协议头部，规格化头部，探测头部异常，包分片组装，TCP流组装
探测引擎将包与规则比对
日志和告警系统产生告警和日志
输出模块将告警和日志输出到最终目标
1．4 关于交换机
根据你用的交换机的不同，你会有多种方式将Snort的机器安装在交换机端口上。
一些交换机，比如CISCO,允许你复制所有的通信到你连接Snort机器的那个端口上，这样的端口通常指的是Spanning端口。
安装Snort的最佳位置是直接连到路由其或者防火墙后面，这样Snort可以在数据进入交换机或HUB之前捕获所有的Internet数据流。
例如，你的防火墙有连接Internet的T1线路，并用交换机连接内部网络，典型的连接方案如图1-6所示：
如果你的交换机有Spanning端口，你可以像图1-7所示的那样将IDS及器连接到spanning端口上，这样IDS可以看到所有的与Internet的通信以及内部通信。
你也可以将IDS连接到防火墙与交换之间的HUB上，这样所有的进入和流出的通信对于IDS也是可见的，此方案如图1-8所示。
但是要注意，如果IDS按图1-8安置，那么IDS将不能得到内部通信的数据包，只能来见与Internet之间的通信。
这种方案对于内部网络是可信的，而预想的攻击来自外部是非常有用的。
1．5 跟踪TCP数据流
Snort新增加了一种叫做Stream4的预处理器，这种预处理器能够同时处理数千并发的数据流。
关于它的配置将在第四章中讨论。
它可以重新组装TCP数据流，并进行状态检测。
这就意味着你可以组装一个特定的TCP会话，并从利用多个TCP包进行攻击的方式中找出异常。
你也可以查找流向或（和）流出某个服务器端口的数据包。
1．6 Snort支持的平台
Snort支持多种硬件平台和操作系统。
目前Snort支持下列操作系统：
你可以到Snort的网站http://www.snort.org查询Snort当前支持的平台的列表。
1．7 如何保护IDS自身
有一个关键问题是，如何保护运行IDS的系统？
如果IDS本身的安全受到了威胁，你收到的告警可能是错误的，也许就根本收不到告警。
入侵者也许会在做出实际的攻击之间先让IDS失效。
有许多方式来保护你的系统，从通用的建议到一些复杂的方法，下面会提到一些方法：
首先你可以做的事情是不要再你运行IDS探测器的机器上运行任何服务。
网络服务是用来探寻系统最普遍的方式。
新的威胁出现后，厂商会发布相应的补丁，只是一个连续不断，永无休止的过程。
你的IDS应该安装从厂商那里得到的最新的补丁。
比如，如果你的Snort在Window机器上运行，你应该安装所有微软发布的最新的安全补丁。
配置你的IDS机器，使其不会对ping（ICMP echo）做出回应。
如果你在Linux机器上运行IDS，请用netfileter/iptables来阻止任何不必要的数据，这时Snort仍然可以看到所有的数据包。
如果你的IDS机器仅仅用来做入侵检测，那么除非完全有必要，不要在上面进行任何其他的活动以及设立其他用户账号。
除了这些通常的方法之外，Snort也可以在一些特殊方法下应用。
下面有两种特别的技术来防止Snort遭到攻击。
1．7．1 在隐秘端口(Stealth Interface)上运行Snort
你可以在隐秘端口上运行Snort,这种端口仅仅监听进入数据包而不向外部发送任何的数据包。
在隐秘端口上我们用一种特殊的电缆，在你运行Snort的主机上，将端口的1针和2针短路，3针和6针连到对端。
你可以到Snort的FAQ页面http//www.snort.org/docs/faq.html寻找这种方法的更多信息。
1．7．2 在没有IP地址的接口上运行Snort
你也可以在一个没有配置IP地址的接口上运行Snort。
例如在Linux机器上，你可以用“ifconfig eth0 up”这样的命令来激活没有配置IP地址的接口eth0。
这种方法的好处是，因为Snort主机没有IP地址，因此没有人可以访问它。
你可以在eth1上配置IP地址用来访问这个探测器。
见图1-9。
在Windows系统上，你可以用一个不绑定TCP/IP协议的接口，这样就不会在这个接口上出现IP地址了。
不要忘记同时也要禁用其他协议和服务。
在某些情况下，当接口不配置IP地址的时候，你会遇到wincap(Windows用来捕获包的库)不可用的提示，如果遇到这样的情况，你可以用下面的方法：
在你想做隐秘端口的网络接口上配置TCP/IP协议，同时禁用其他一切协议和服务。
启用DHCP客户端。
禁用DHCP服务器。
这样就会使网络接口没有IP地址，网络接口仍然可以绑定TCP/IP协议。
1．8 相关资源
第二章安装Snort并开始初步工作
Snort可以仅仅安装为守护进程或者一个包括很多其他工具的完整系统。
如果你仅仅安装Snort,你可以得到入侵数据的文本文件或二进制文件，然后可以用文本编辑器或其它类似于Barnyard的工具察看，本书的后面将对此做出描述。
在简单安装的情况下，你也可以让告警信息以SNMP trap的形式发送到类似于HP OpenView或者OpenNMS之类的网管系统上。
告警信息也可以以SMB弹出窗口的形式发送到Windows机器上。
如果你与其它工具一起安装，你可以做一些更加复杂的操作，比如将Snort数据发送到数据库并通过Web界面来分析。
分析工具能够让你对捕获的数据有更加直观的认识，而不用对晦涩的日志文件耗费大量时间。
其它一些可以用到的工具列在下面，它们中的没有特都有特定的任务。
一个综合的Snort系统用这些工具来提供具有后台数据库Web用户界面。
MySQL用来Snort纪录告警日志。
也可以用类似于Oracle的数据库，但在Snort环境中MySQL更加常用。
事实上，Snort可以用任何ODBC兼容的数据库。
Apache用作web服务器
PHP用作web服务器和MySQL数据库之间的接口。
ACID是用来Web界面来分析Snort数据的PHP软件包。
GD库被ACID用来生成图表
PHPLOT用来在ACID的web界面将数据表现为图表形式。
为了是PHPLOT工作，GD库必须要正确配置。
ADODB被ACID用来连接MySQL数据库。
2．1 Snort 安装方案
Snort的安装方式要取决于运行环境，下面列举了一些典型的安装方案以供参考，你可以根据你的网络情况进行选择。
2．1．1 测试安装
简单安装只包括一个Snort探测器。
Snort将数据记录到文本文件中。
日志文件供Snort管理员随后察看。
由于这种方式在实际应用中分析日志的成本比较高因此仅适合测试环境。
要用这种方式安装Snort，你可以在http://www.snort.org取得编译好的版本。
对RedHat Linux来说，你可以下载RPM包。
对Windows系统，你可以下载可执行文件安装到你的系统上。
2．1．2 安装单探测器的应用IDS
单探测器的Snort可应用安装适合只有一条Internet线路的小型网络。
将探测器放在路由器或者防火墙的后面，以检测进入系统的入侵者。
不过要是你对所有的Internet流量感兴趣，你也可以将传感器放在防火墙的外面。
在这种安装方式中，你可以从Snort网站http://www.snort.org下载编译好的版本，也可以下载源代码根据自己的要求编译，以取得自己需要的特征，这种要求在编译好的版本中是做不到的。
Snort的编译步骤将在本章详细讨论。
在应用系统安装中，也可以让Snort实现自动启动和关闭，这样Snort在系统启动是可以自动启动。
如果你在Linux中安装编译好的版本，RPM包会帮你做到这一点。
在Windows系统中，你可以将Snort作为服务来启动或者放在启动组的批处理文件中。
Windows相关的问题将在第8章涉及。
日志将纪录为文本文件或者二进制文件，并用类似于SnortSnarf的工具分析数据。
SnortSnarf将在第6章中详细讨论。
2．1．3 单探测器与网管系统的整合
在应用系统中，你可以将Snort配置成向网管系统发送trap。
在企业应用中，有很多种网管系统在应用。
最常见的商业网管系统公司有惠普、IBM、Computer Associates等。
Snort利用SNMP trap整合到网管系统中。
当你看完本章的Snort编译步骤后，就会了解Snort是怎样提供SNMP能力的。
第4章将介绍更多的关于配置SNMP trap目标、community名称等更多的信息。
2．1．4 带有数据库和web界面的单探测器
Snort最通常的用法是与数据库的整合。
数据库用来记录日志，并可以随后通过web界面访问。
这种安装的典型设置包含3个基本的部件：
Snort 探测器
数据库服务器
web服务器
Snort将日志记录到数据库中，你可以通过连接到它的web浏览器察看这些数据。
这种方案可以参见第1章的图1-1。
所有3个部件也可以安装在同一个系统上，如第1章的图1-2所示。
Snort可以用不同类型的数据库，如MySQL,PostgresSQL,Oracle,Microsoft SQL Server和其他ODBC兼容的数据库。
PHP用来在数据库中获取数据，并产生页面。
这样的安装提供给你一个易于管理的功能全面的IDS，并具有友好的用户界面。
为了使你能够用数据库记录日志，你必须给Snort提供数据库的用户名称、密码、数据库名称和数据库服务器的地址。
在单探测器方案中，如果数据库服务器就安装在运行传感器的机器上，你可以用“localhost”作为主机名。
你在编译Snort时就要选择记录数据库的功能，这一点将在本章的后面详细描述。
Snort使用数据库的配置将在第4、5、6章讨论。
2．1．5 用集中数据库管理多个Snort探测器
在分布式环境中，你可能需要在多个位置安装Snort探测器。
管理所有这些探测器并分别分析它们收集的数据是一项艰难的任务。
在企业应用中，有一些方法可以将Snort设置和安装成分布式的IDS。
其中一种方法是将多个探测器连接到同一个中心数据库，如图1-3所示。
所有探测器产生的数据都存储在这个数据库中。
同时运行一个类似于Apache的web服务器。
然后用户可以用web浏览器察看这些数据并加以分析。
但要了解这种配置存在一些实际问题：
所有的探测器在启动Snort的时候必须能够访问到数据库，如果不能，Snort就终止进程。
数据库必须保证让探测器所有的时间都能访问，否则，数据将丢失。
如果探测器和数据库服务器之间有防火墙，你要打开相应的端口，有时这样做会与防火墙的安全策略不匹配或者违背安全策略。
在探测器不能直接访问数据库服务器的时候，有一些变通的方法。
探测器可以配置为将文件存储在本地，然后用类似于SCP的工具定期将这些文件上传到中央数据库服务器。
SCP用SSH协议来进行安全文件传输的工具。
防火墙管理员要放行SSH端口的通信。
你可以用Snort本身，Barnyard或其他一些工具从日志文件中提取数据并将它们放到数据库中，你可以在以后用web界面来察看这些数据。
这种方式的唯一问题是数据库中的数据并非严格的“实时”数据。
延迟的大小要看你用SCP上传数据到中心数据库服务器的频率。
这种方式如图2-1所示。
要注意，中心数据库服务器必须要运行SSH服务器以能够用SCP来上传数据。
如第一章中提到的那样，这本书的最终目的是帮助你安装Snort并让所有的软件包可以协同工作。
当你通读此书后，你将了解这些部件之间是如何相互作用，共同工作形成一个完整的入侵检测系统的。
本书中涉及的这些软件都可以这本书的网站http://authors.phpktr.com/rhman/中获得源代码。
你也可以发现这个网站上的一些脚本可以帮助你轻松的在一个新系统上安装这些软件包。
事实上，用这本书提到的这个网站上的一些脚本，你可以以root身份用仅仅几个命令行就建立一个可用的IDS。
如果你用的Snort的版本比本书涉及的要新，你可以在http://www.argusnetsec.com/downloads下载支持新版本Snort的最新版的脚本。
这本书将详细介绍这些部件在RedHat Linux 7.3机器上的安装，但是在其他版本的Linux或者其他平台上的过程与之类似。
为了方便本书介绍，所有的部件都安装在/opt目录下面。
但是如果用编译好的软件包，安装位置可能有所不同。
当你用本书上或者从本书的网站取得的脚本，文件将被安装在这个目录下面。
在本章中，你将了解如何将Snort作为一个独立的产品安装，在后面的章节中，将介绍其他一些部件。
你可以得到二进制形式或者源代码形式的Snort。
对于大多数安装来说，编译好的二进制软件包是非常好的。
如前面提及的，如果你想为Snort定制一些特性，你需要下载源代码版的Snort自行编译。
例如，有些人喜欢SMB告警，但另外一些人可能认为它们不安全。
如果你需要不支持SMB告警的Snort,那么你需要自己编译它。
这对于一些如SNMP trap、MySQL等其他特性也是一样的。
另外一个自己编译Snort理由是你需要了解正在开发中的代码。
本章将指导你一步一步的安装Snort。
基本的安装过程是非常简单的，而且Snort已经提供给你包含大多数已知攻击特征的预定义的规则。
当然，自定义安装还是要费一些工夫的。
2．2 安装Snort
在这一部分，你将了解如何安装编译好的Snort和如何自己编译和安装。
安装编译好的RPM包非常简单，仅需要几步。
但是如果你的Snort是源代码形式的，是需要一些时间来了解和安装的。
2．2．1 用RPM包安装Snort
用RPM包安装Snort包括下面的步骤。
2．2．1．1 下载
从Snort的网站（http://www.snort.org）下载最新版的Snort。
在写本书的时候，最新版的二进制文件是snort-1.9.0-1snort.i386.rpm。
2．2．1．2 安装
运行下面的命令来安装Snort的二进制文件：
rpm --install snort-1.9.0-1snort.i386.rpm
这个命令会产生下面的动作：
创建/etc/snort目录，其中会存放Snort的规则文件和配置文件。
创建/var/log/snort目录，Snort的日志文件将会存放在这里。
创建/usr/share/doc/snort-1.9.0目录来存放Snort的文档文件，在这个目录中，你会看到类似于FAQ,README的文件和其他一些文件。
在/usr/sbin目录中创建一个叫做snort-plain的文件，这是Snort的守护进程。
创建文件/etc/rc.d/init.d/snortd文件，这是启动和关闭脚本。
在RedHat Linux中，它与/etc/init.d/snortd等价。
到这里基本安装就完成了，你可以开始使用Snort。
这个版本的Snort并没有将对数据库的支持编译进去，你只能用/var/log/snort目录下面的日志文件。
2．2．1．3  Snort的启动，停止和重启
用下面的命令手工启动Snort：
这个命令将启动Snort守护进程，运行“ps –ef”命令，你可以看到类似于下面的输出：
注意每次你重启机器，你都要手工启动Snort。
你可以通过创建文件链接的方式让这个过程自动执行，这将在本章的后面讨论。
用下面的命令停止Snort：
用下面的命令重新启动Snort：
2．2．2 用源代码安装Snort
为了能够用源代码安装Snort,你必须先构造它。
你可以用下面介绍的步骤来构造出可执行文件snort。
首先从Snort网站（http://www.snort.org）获得最新版的Snort。
在写这本书的时候，最新版的Snort是1.9.0，下载文件的名称是snort-1.9.0.tar.gz，下载后可以保存在/opt目录中。
注意在你读这本书的时候可能会是更新的版本，安装方法也类似。
2．2．2．1 解压缩
下载后第一步要把源代码解压缩，用下面的命令来执行：
tar zxvf snort-1.9.0.tar.gz
这样会创建/opt/snort-1.9.0目录。
确定你将文件下载到/opt目录，并且你在这个目录运行tar命令。
如果是其他版本的Snort,目录名称可能会有所不同，目录名称会反映版本号。
解压缩后你可以运行tree命令来观察tar命令建立的目录树，如下所示是/opt/snort-1.9.0的目录树：
这些目录中的主要内容如下所示：
contrib目录主要包括并非严格输入Snort自身组成部分的应用软件，这些软件包括ACID,MySQL数据库生成脚本和其他。
doc目录包含文档文件。
etc目录包含配置文件。
rules目录包含预先定义的规则文件。
所有的源代码在src目录下面。
templates是为那些准备自己写插件的人准备的，这对大多数Snort用户没有意义。
2．2．2．2 编译和安装
编译和安装过程包括下列3个步骤：
1．运行configure脚本。
2．运行make命令。
3．运行make install命令。
开始Snort的编译过程，首先去/opt/snort-1.9.0目录并运行configure脚本。
如果你刚刚开始接触GNU类的软件，你需要了解configure脚本是开放源码软件包通用的工具，它可以用来设置参数，创建makefile,检测开发工具和你系统中的库文件。
运行configure脚本的时候，有许多命令行选项，这些选项决定Snort编译时将带有那些组件。
比如，用这些选项，你可以构建对SNMP、MySQL或SMB告警的支持以及其他很多事情。
你同样也可以定制Snort文件的最终安装位置。
你可以用“./configure –help”命令来察看可用的选项，如下所示：
方括号中的值表示如果该选项如果没有被设定，系统就会选择该默认值。
例如：-- prefix选项帮助第二行表示，如果没有设定—prefix选项，系统就会选择默认值/usr/local。
PREFIX是指当你运行“make install”命令的时候Snort文件要安装的目录。
运行configure脚本的典型会话如下所示。
为节省空间，输出信息作了删减。
注意命令行中打开的选项。
输出信息作了删件，因为configure命令会产生大量的信息。
选项prefix告诉configuire脚本程序最终的安装位置。
其他的选项用来使下列Snort组件生效：
对MySQL数据库的支持。
对SNMP trap信息的支持。
对SMB告警的支持。
SMB告警用来向Windows发出弹出窗口告警。
对flex响应的支持。
Flex响应用来实时终止网络会话。
后面的章节将提供关于flex响应的更多信息。
注意你的系统必须安装了libnet才能够使用这个选项。
你可以从http://www.securityfocus.net下载libnet。
我是用1.0.2a版来完成安装的。
运行完configure脚本后，你可以运行下面两个命令来编译和安装Snort。
make
make install
你一个命令也许要一些时间来完成，这要看你的计算机的能力。
当你运行完第二个命令，文件就会被安装到适当的目录中去了。
因为你在运行configure脚本的时候选择了--prefix=/opt/snort，因此make install命令将Snort二进制文件安装到/opt/snort目录中去。
表2-1 configure脚本参数一览表
参数描述
--with-mysql构建Snort对Mysql的支持
--with-snmp构建Snort对SNMP的支持。
如果用这个选项，必须同时选-—with-openssl
--with-openssl对OpenSSL的支持。
当你选—with-snmp时要选择这个选项。
--with-oracle对Oracle数据库的支持。
--with-odbc构建Snort对ODBC的支持。
--enable-flexresp使Snort能够使用Flex响应，以能够终止恶意的连接。
目前这个选项还在实验中（察看Snort发布的README.FLEXRESP文件）。
--enable-smbalerts使Snort能够发送SMB告警。
注意每次告警时都会占用客户端的用户空间。
--Prefix=DIR设置安装Snort文件的目录。
在运行“make install”命令之前，你也可以运行“make check”命令来确定Snort的构建是否正确。
安装完毕之后，运行Snort来看看是否可执行文件可以工作。
在完成前面的步骤后，Snort的二进制文件会被安装在/opt/snort/bing目录中。
下面的命令会显示新安装的snort的基本帮助信息和命令行选项。
如果你看到这样的信息，你的Snort就安装正确了。
在下一部分，你将了解如何配置和运行Snort。
2．2．2．3 安装完后要做的工作
现在你已经安装好了Snort二进制文件，但是还有些事情要做：
1、创建/var/log/snort目录作为Snort默认的存放日至文件的地方。
2、创建一个存放配置文件的目录。
我创建的是/opt/snort/etc目录，你可以创建自己的目录。
3、创建或者复制配置文件到/opt/snort/etc目录下。
4、创建目录/opt/snort/rules并且将默认的规则文件拷贝到里面。
这个目录会在snort.conf文件中指定，你可以创建自己喜欢的目录。
下面来详细解释这些步骤：
首先，创建/var/log/snort目录让Snort存放日志文件。
你也可以用其它的目录，但是这个目录是惯常使用的。
如果你用其他任何目录，你需要在启动Snort的时候用命令行选项-l来指定。
然后，要创建Snort配置文件。
当Snort启动的时候，将从当前目录读取配置文件snort.conf或者从运行Snort的用户属主目录读取.snortrc文件。
如果这个文件在其他目录中，你也可以用命令行选项-c来指定。
开始的时候，你可以将Snort源代码中附带的snort.conf文件拷贝到你创建的/opt/snort/etc目录下面。
同时也把classification.config和reference.config文件拷贝进去，这两个文件是snort.conf文件要引用的。
另外将源代码中rules目录下面的所有文件拷贝到/opt/snort/rules目录下面。
参考下列命令实现这些步骤：
rules目录中以.rules为后缀的文件中包含了各种规则，这些文件被snort.conf文件引用。
这些rules文件的位置由snort.conf文件中定义的RULE_PATH变量控制，该变量在snort.conf中的定义一般如下表示：
var RULE_PATH ../rules
它说明rules文件的位置在名叫rules的目录下。
例如，如果snort.conf文件在/opt/snort/etc目录中，那么所有的规则文件就应该在/opt/snort/rules目录下。
又例如如果snort.conf文件在/var/snort目录下，那么规则文件必须在/var/rules目录中。
你也可以将snort.conf与所有规则文件放在同一目录下面，只是你要将snort.conf文件中rules位置变量的值由../变成./:
var RULE_PATH ./
在下一章中，你将了解更多的关于Snort规则的信息，同时你也将了解如何定义自己的规则。
classification.config文件中包括了关于Snort规则分类的信息，你将在下一章中了解更多信息。
在本书的例子中，Snort的所有源代码文件在/opt/snort-1.9.0目录中，如果你用的是不同版本的Snort,该目录也会不同。
Reference.config文件中罗列了一些关于各种告警信息的参考网站的URL,这些参考将在Snort规则中引用，你会在下一章了解更多信息。
典型的reference.config文件如下所示：
注意：classification和reference.config文件都会被主配置文件snort.conf引用。
现在你可以用下面的命令运行Snort了，这个命令会显示启动信息，然后监听eth0接口。
注意为了避免一些困扰，这个命令用命令行选项指定了snort.conf文件的绝对目录。
正如你看到的这些输出信息，Snort已经开始监听eth0接口了。
如果有任何包与规则匹配，Snort就会根据规则做出相应的动作并发出告警。
告警可以以多种形式发出。
在这种基本方式中，告警将被记录到/var/log/snort/alerts文件中。
后面，你将看到产生其他形式的告警并将它们记录到数据库中的方法，同时你也会了解Snort告警的数据文件的格式。
你可以在任何时候同时按下ctrl键和c键来终止Snort进程，这时Snort将显示程序活动的概要然后退出，如下所示：
前面提到的方法是在前台运行Snort,用这种方式运行Snort你在终端会失去提示符。
你可以用命令行开关-D来在后台运行Snort,这样Snort仍然将告警信息记录到/var/log/snort，同时你得到了提示符。
注意，如果你是用RPM包安装的Snort,那么你可以用“/etc/init.d/snortd start”命令使Snort在后台运行。